<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.VisualStudio.TestTools.WindowsStore.UITest.Extension</name>
    </assembly>
    <members>
        <member name="T:Microsoft.VisualStudio.TestTools.UITest.Extension.ActionLogResources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.ActionLogResources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.ActionLogResources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.ActionLogResources.ActionLogBasicFormat">
            <summary>
              Looks up a localized string similar to {0} {1}.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.ActionLogResources.ActionLogCheckAction">
            <summary>
              Looks up a localized string similar to Checked.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.ActionLogResources.ActionLogClearAction">
            <summary>
              Looks up a localized string similar to Clear.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.ActionLogResources.ActionLogClearValue">
            <summary>
              Looks up a localized string similar to Clear value.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.ActionLogResources.ActionLogContextSuffix">
            <summary>
              Looks up a localized string similar to  inside {0}.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.ActionLogResources.ActionLogDefaultAction">
            <summary>
              Looks up a localized string similar to Set.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.ActionLogResources.ActionLogEditAction">
            <summary>
              Looks up a localized string similar to Type.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.ActionLogResources.ActionLogFilter">
            <summary>
              Looks up a localized string similar to Filter.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.ActionLogResources.ActionLogFlipAction">
            <summary>
              Looks up a localized string similar to Flip to.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.ActionLogResources.ActionLogForRangeValueRange">
            <summary>
              Looks up a localized string similar to Set range to.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.ActionLogResources.ActionLogFriendlySuffix">
            <summary>
              Looks up a localized string similar to  in {0}.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.ActionLogResources.ActionLogInvokeAction">
            <summary>
              Looks up a localized string similar to Click.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.ActionLogResources.ActionLogMixedState">
            <summary>
              Looks up a localized string similar to Mixed.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.ActionLogResources.ActionLogNormalState">
            <summary>
              Looks up a localized string similar to Normal.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.ActionLogResources.ActionLogOpenContextMenu">
            <summary>
              Looks up a localized string similar to Open the shortcut menu.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.ActionLogResources.ActionLogPressedState">
            <summary>
              Looks up a localized string similar to Pressed.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.ActionLogResources.ActionLogRangeValueAction">
            <summary>
              Looks up a localized string similar to Set to position.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.ActionLogResources.ActionLogToggleAction">
            <summary>
              Looks up a localized string similar to Set state to.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.ActionLogResources.ActionLogToggleButtonAction">
            <summary>
              Looks up a localized string similar to Set to &apos;{0}&apos; state.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.ActionLogResources.ActionLogValueAction">
            <summary>
              Looks up a localized string similar to Select.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.ActionLogResources.ConcatString">
            <summary>
              Looks up a localized string similar to {0} {1}.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.ActionLogResources.FormatActionAndTargetControlType">
            <summary>
              Looks up a localized string similar to &lt;Action&gt; &apos;&lt;Target&gt;&apos; &lt;ControlType&gt; in the shortcut menu.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.ActionLogResources.FormatActionAndTargetControlTypeForNoFriendlyName">
            <summary>
              Looks up a localized string similar to &lt;Action&gt; &lt;ControlType&gt; in the shortcut menu.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.ActionLogResources.FormatForDefaultContext">
            <summary>
              Looks up a localized string similar to in &apos;&lt;Target&gt;&apos; &lt;ControlType&gt;.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.ActionLogResources.FormatForDefaultContextForNoFriendlyName">
            <summary>
              Looks up a localized string similar to in &lt;ControlType&gt;.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.ActionLogResources.FormatForDialogContext">
            <summary>
              Looks up a localized string similar to in &apos;&lt;Target&gt;&apos; dialog.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.ActionLogResources.FormatForDialogContextForNoFriendlyName">
            <summary>
              Looks up a localized string similar to in dialog.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.ActionLogResources.FormatForFlipperContext">
            <summary>
              Looks up a localized string similar to in &apos;&lt;Target&gt;&apos; flipper.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.ActionLogResources.FormatForFlipperContextForNoFriendlyName">
            <summary>
              Looks up a localized string similar to in flipper.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.ActionLogResources.FormatUsingTarget">
            <summary>
              Looks up a localized string similar to &lt;Action&gt; using &apos;&lt;Target&gt;&apos;.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.ActionLogResources.FormatUsingTargetForNoFriendlyName">
            <summary>
              Looks up a localized string similar to &lt;Action&gt;.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.ActionLogResources.FormatWithInForContext">
            <summary>
              Looks up a localized string similar to in &lt;Context&gt;.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.ActionLogResources.FormatWithInForContextForNoFriendlyName">
            <summary>
              Looks up a localized string similar to in &lt;Context&gt;.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.ActionLogResources.FormatWithItem">
            <summary>
              Looks up a localized string similar to &lt;Action&gt; &apos;&lt;Target&gt;&apos; item.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.ActionLogResources.FormatWithItemForNoFriendlyName">
            <summary>
              Looks up a localized string similar to &lt;Action&gt; item.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.ActionLogResources.FormatWithNoValue">
            <summary>
              Looks up a localized string similar to &lt;Action&gt; &apos;&lt;Target&gt;&apos; &lt;ControlType&gt;.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.ActionLogResources.FormatWithNoValueAndNoControlType">
            <summary>
              Looks up a localized string similar to &lt;Action&gt; &apos;&lt;Target&gt;&apos;.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.ActionLogResources.FormatWithNoValueAndNoControlTypeForNoFriendlyName">
            <summary>
              Looks up a localized string similar to &lt;Action&gt;.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.ActionLogResources.FormatWithNoValueForNoFriendlyName">
            <summary>
              Looks up a localized string similar to &lt;Action&gt; &lt;ControlType&gt;.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.ActionLogResources.FormatWithTargetAndNoValue">
            <summary>
              Looks up a localized string similar to &lt;Action&gt; in &apos;&lt;Target&gt;&apos; &lt;ControlType&gt;.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.ActionLogResources.FormatWithTargetAndNoValueForNoFriendlyName">
            <summary>
              Looks up a localized string similar to &lt;Action&gt; in &lt;ControlType&gt;.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.ActionLogResources.FormatWithValue">
            <summary>
              Looks up a localized string similar to &lt;Action&gt; &apos;&lt;Value&gt;&apos; in &apos;&lt;Target&gt;&apos; &lt;ControlType&gt;.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.ActionLogResources.FormatWithValueAndNoControlType">
            <summary>
              Looks up a localized string similar to &lt;Action&gt; &apos;&lt;Value&gt;&apos; in &apos;&lt;Target&gt;&apos;.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.ActionLogResources.FormatWithValueAndNoControlTypeForNoFriendlyName">
            <summary>
              Looks up a localized string similar to &lt;Action&gt; &apos;&lt;Value&gt;&apos;.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.ActionLogResources.FormatWithValueAndSpecifiedControlType">
            <summary>
              Looks up a localized string similar to &lt;Action&gt; &apos;&lt;Value&gt;&apos; in &lt;ControlType&gt;.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.ActionLogResources.FormatWithValueAndSpecifiedControlTypeForNoFriendlyName">
            <summary>
              Looks up a localized string similar to &lt;Action&gt; &apos;&lt;Value&gt;&apos; in &lt;ControlType&gt;.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.ActionLogResources.FormatWithValueForNoFriendlyName">
            <summary>
              Looks up a localized string similar to &lt;Action&gt; &apos;&lt;Value&gt;&apos; in &lt;ControlType&gt;.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.ActionLogResources.TouchActionHold">
            <summary>
              Looks up a localized string similar to Hold on.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.ActionLogResources.TouchActionPrimaryDoubleTap">
            <summary>
              Looks up a localized string similar to Double Tap on.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.ActionLogResources.TouchActionPrimaryTap">
            <summary>
              Looks up a localized string similar to Tap on.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.ActionLogResources.TouchActionRotateAnticlockwise">
            <summary>
              Looks up a localized string similar to Rotate counterclockwise.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.ActionLogResources.TouchActionRotateClockwise">
            <summary>
              Looks up a localized string similar to Rotate clockwise.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.ActionLogResources.TouchActionZoomIn">
            <summary>
              Looks up a localized string similar to Zoom in.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.ActionLogResources.TouchActionZoomOut">
            <summary>
              Looks up a localized string similar to Zoom out.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITest.Extension.ElementForThumbnailCapture">
            <summary>
            Enum denoting which control's vicinity to capture during an event.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITest.Extension.ActionNotSupportedOnDisabledControlException">
            <summary>
            Thrown when an Control is blocked e.g. due to a modal dialog.
            </summary>
            <remarks>
            Used http://msdn2.microsoft.com/en-us/library/ms229064.aspx for the
            exception design. Chose the base class of the exception from 
            http://msdn2.microsoft.com/en-us/library/z4c5tckx.aspx
            
            Should we consider extending EqtException? Today, this creates SxS issues.
            </remarks>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITest.Extension.PlaybackFailureException">
            <summary>
            Thrown when an action fails.
            </summary>
            <remarks>
            Used http://msdn2.microsoft.com/en-us/library/ms229064.aspx for the
            exception design. Chose the base class of the exception from 
            http://msdn2.microsoft.com/en-us/library/z4c5tckx.aspx
            
            Should we consider extending EqtException? Today, this creates SxS issues.
            </remarks>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITest.Extension.UITestException">
            <summary>
            The base class for all UITest exceptions.
            </summary>
            <remarks>
            Used http://msdn2.microsoft.com/en-us/library/ms229064.aspx for the
            exception design. Chose the base class of the exception from 
            http://msdn2.microsoft.com/en-us/library/z4c5tckx.aspx
            
            Should we consider extending EqtException? Today, this creates SxS issues.
            </remarks>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.UITestException.MessageSpecifiedParameter">
            <summary>
            Parameter string used in serialization
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.UITestException.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.UITestException.#ctor(System.String)">
            <summary>
            Create new instance using the message.
            </summary>
            <param name="message">The exception message.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.UITestException.#ctor(System.String,System.Exception)">
            <summary>
            Create new instance using the message and the inner exception.
            </summary>
            <param name="message">The exception message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.UITestException.isUserMessageSpecified">
            <summary>
            If this field if set then it means that user has explicitly set the Exception's message
            and that should be used instead of the basic message.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.UITestException.SetHResult(System.UInt32)">
            <summary>
            Sets the corresponding HResult for the exception
            </summary>
            <param name="hResult"></param>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.UITestException.HResult">
            <summary>
            Exposing HRESULT for this exception
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.UITestException.ErrorInfo">
            <summary>
            Get/Set the actionInfo that caused exception
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.UITestException.BasicMessage">
            <summary>
            A basic exception message. If user has set a specific message then this is returned.
            If not the default exception message for this exception is returned. The difference
            between this and the base.Message property is that base.Message appends the control
            details to the BasicMessage.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.UITestException.DefaultMessage">
            <summary>
            The default message for this exception type. This is overriden typically by derived
            exception classes to provide thier own default messages. In case user has not explicitly
            set any message, then the default message is used by BasicMessage and base.Message.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.UITestException.Message">
            <summary>
            The exception message. This consists of the basicmessage to which a string representation of the uitestcontrol corresponding
            to this exception is appended(if it is provided).
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.UITestException.ExceptionSource">
            <summary>
            The uitest control that is the source of this exception.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.UITestException.UITestControlDescription">
            <summary>
            A formatted string representation of the uitest control associated with this 
            exception.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.PlaybackFailureException.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.PlaybackFailureException.#ctor(System.String)">
            <summary>
            Create new instance using the message.
            </summary>
            <param name="message">The exception message.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.PlaybackFailureException.#ctor(System.String,System.Exception)">
            <summary>
            Create new instance using the message and the inner exception.
            </summary>
            <param name="message">The exception message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.PlaybackFailureException.#ctor(System.String,System.String,System.String,System.Exception,Microsoft.VisualStudio.TestTools.UITest.Extension.ILastInvocationInfo,System.String,System.Object)">
            <summary>
            Create new instance using the message and the inner exception.
            </summary>
            <param name="message">Exception Message</param>
            <param name="objectName">object on which action failed.</param>
            <param name="actionName">Action that failed.</param>
            <param name="lastInfo">Playback information</param>
            <param name="innerException">The inner exception.</param>
            <param name="exceptionSource">The source object/control of the exception.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.PlaybackFailureException.#ctor(System.String,System.String,System.Exception,Microsoft.VisualStudio.TestTools.UITest.Extension.ILastInvocationInfo,System.String,System.Object)">
            <summary>
            Constructor overload that sets the Message property of the exception to
            the default message for this exception type
            </summary>
            <param name="message">Exception Message</param>
            <param name="objectName">object on which action failed.</param>
            <param name="actionName">Action that failed.</param>
            <param name="lastInfo">Playback information</param>
            <param name="innerException">The inner exception.</param>
            <param name="exceptionSource">The source object/control of the exception.</param>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.PlaybackFailureException.action">
            <summary>
            Name of action that failed.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.PlaybackFailureException.objectName">
            <summary>
            Name of object..
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.PlaybackFailureException.ObjectName">
            <summary>
            Name of the object.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.PlaybackFailureException.Action">
            <summary>
            Name of action that failed.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.PlaybackFailureException.DefaultMessage">
            <summary>
            The default exception message that is to be shown if user has not explicitly set
            any error message.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.ActionNotSupportedOnDisabledControlException.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.ActionNotSupportedOnDisabledControlException.#ctor(System.String)">
            <summary>
            Create new instance using the message.
            </summary>
            <param name="message">The exception message.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.ActionNotSupportedOnDisabledControlException.#ctor(System.String,System.Exception)">
            <summary>
            Create new instance using the message and the inner exception.
            </summary>
            <param name="message">The exception message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.ActionNotSupportedOnDisabledControlException.#ctor(System.String,System.String,System.Object)">
            <summary>
            Creates a new instance usign the default exception message and the uitestcontrol
            string.
            </summary>
            <param name="message">The exception message.</param>
            <param name="uiTestControl">the uitest control string</param>
            <param name="exceptionSource">The source object/control of the exception.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.ActionNotSupportedOnDisabledControlException.#ctor(System.String,System.Object)">
            <summary>
            Overload that sets Message property to default message for this exception type.
            </summary>
            <param name="uiTestControl">the uitest control string</param>
            <param name="exceptionSource">The source object/control of the exception.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.ActionNotSupportedOnDisabledControlException.#ctor(System.String,System.Exception,System.String,System.Object)">
            <summary>
            Creates a new instance usign the default exception message and the uitestcontrol
            string.
            </summary>
            <param name="message">The exception message.</param>
            <param name="innerException">The inner exception</param>
            <param name="uiTestControl">the uitest control string</param>
            <param name="exceptionSource">The source object/control of the exception.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.ActionNotSupportedOnDisabledControlException.#ctor(System.String,System.String,System.String,System.Exception,Microsoft.VisualStudio.TestTools.UITest.Extension.ILastInvocationInfo,System.String,System.Object)">
            <summary>
            Create new instance using the message and the inner exception and other
            action related information.
            </summary>
            <param name="objectName">object on which action failed.</param>
            <param name="windowName">parent window of object.</param>
            <param name="actionName">Action that failed.</param>
            <param name="lastInfo">The last invocation info.</param>
            <param name="innerException">The inner exception.</param>
            <param name="uiTestControl">The uitest control string</param>
            <param name="exceptionSource">The source object/control of the exception.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.ActionNotSupportedOnDisabledControlException.#ctor(System.String,System.String,System.Exception,Microsoft.VisualStudio.TestTools.UITest.Extension.ILastInvocationInfo,System.String,System.Object)">
            <summary>
            This constuctor has will return the default message for this exception type
            for the exception's Message property and hence does not take a message parameter.
            </summary>
            <param name="objectName">object on which action failed.</param>
            <param name="windowName">parent window of object.</param>
            <param name="actionName">Action that failed.</param>
            <param name="innerException">The inner exception.</param>
            <param name="lastInfo">The last invocation info.</param>
            <param name="uiTestControl">The uitest control string</param>
            <param name="exceptionSource">The source object/control of the exception.</param>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.ActionNotSupportedOnDisabledControlException.DefaultMessage">
            <summary>
            The default exception message that is to be shown if user has not explicitly set
            any error message.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITest.Extension.BasicExceptionMessage">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.BasicExceptionMessage.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.BasicExceptionMessage.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.BasicExceptionMessage.ActionNotSupportedOnDisabledControlException">
            <summary>
              Looks up a localized string similar to Cannot perform &apos;{0}&apos; on the disabled or read-only control..
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.BasicExceptionMessage.AdditionalDetailsMessage">
            <summary>
              Looks up a localized string similar to {0} Additional Details: {1}.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.BasicExceptionMessage.AppendInnerInfo">
            <summary>
              Looks up a localized string similar to {0} {1}.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.BasicExceptionMessage.FailedToLaunchApplicationException">
            <summary>
              Looks up a localized string similar to The application failed to start..
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.BasicExceptionMessage.FailedToPerformActionOnBlockedControlException">
            <summary>
              Looks up a localized string similar to Another control is blocking the control. Please make the blocked control visible and retry the action..
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.BasicExceptionMessage.FailedToPerformActionOnHiddenControlException">
            <summary>
              Looks up a localized string similar to Cannot perform &apos;{0}&apos; on the hidden control..
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.BasicExceptionMessage.PlaybackFailureException">
            <summary>
              Looks up a localized string similar to Cannot perform &apos;{0}&apos; on the control..
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.BasicExceptionMessage.TechnologyNotSupportedException">
            <summary>
              Looks up a localized string similar to The technology for this control is currently not supported..
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.BasicExceptionMessage.TechnologyNotSupportedExceptionFormat">
            <summary>
              Looks up a localized string similar to {0} {1}.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.BasicExceptionMessage.TechnologyNotSupportedExceptionHelp">
            <summary>
              Looks up a localized string similar to Go to {0} for information on available add-in for possible support..
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.BasicExceptionMessage.UITestControlNotAvailableException">
            <summary>
              Looks up a localized string similar to The control is not available or not valid..
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.BasicExceptionMessage.UITestControlNotFoundException">
            <summary>
              Looks up a localized string similar to Automation playback engine could not find the control..
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.BasicExceptionMessage.UITestControlNotVisibleException">
            <summary>
              Looks up a localized string similar to The control is not visible..
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.BasicExceptionMessage.UITestException">
            <summary>
              Looks up a localized string similar to Exception was thrown from the UITest module..
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.BasicExceptionMessage.UITestJScriptExecutionException">
            <summary>
              Looks up a localized string similar to Script execution failed. Script: {0}.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.BasicExceptionMessage.ValidationFailedException">
            <summary>
              Looks up a localized string similar to {0} of {1} failed on {2} property for {3}. The expected value: {4}. The actual value: {5}.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITest.Extension.FailedToLaunchApplicationException">
            <summary>
            Thrown when LaunchApplicationAction fails.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.FailedToLaunchApplicationException.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.FailedToLaunchApplicationException.#ctor(System.String)">
            <summary>
            Create new instance using the message.
            </summary>
            <param name="message">The exception message.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.FailedToLaunchApplicationException.#ctor(System.String,System.Exception)">
            <summary>
            Create new instance using the message and the inner exception.
            </summary>
            <param name="message">The exception message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITest.Extension.FailedToPerformActionOnBlockedControlException">
            <summary>
            Thrown when an Control is blocked e.g. due to a modal dialog.
            </summary>
            <remarks>
            Used http://msdn2.microsoft.com/en-us/library/ms229064.aspx for the
            exception design. Chose the base class of the exception from 
            http://msdn2.microsoft.com/en-us/library/z4c5tckx.aspx
            
            Should we consider extending EqtException? Today, this creates SxS issues.
            </remarks>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.FailedToPerformActionOnBlockedControlException.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.FailedToPerformActionOnBlockedControlException.#ctor(System.String)">
            <summary>
            Create new instance using the message.
            </summary>
            <param name="message">The exception message.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.FailedToPerformActionOnBlockedControlException.#ctor(System.String,System.Exception)">
            <summary>
            Create new instance using the message and the inner exception.
            </summary>
            <param name="message">The exception message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.FailedToPerformActionOnBlockedControlException.#ctor(System.String,System.String,System.String,System.Exception,Microsoft.VisualStudio.TestTools.UITest.Extension.ILastInvocationInfo,System.String,System.Object)">
            <summary>
            Create new instance using the message and the inner exception and other action
            related information.
            </summary>
            <param name="objectName">object on which action failed.</param>
            <param name="windowName">parent window of object.</param>
            <param name="actionName">Action that failed.</param>
            <param name="lastInfo">The last invocation info.</param>
            <param name="innerException">The inner exception.</param>
            <param name="uiTestControl">The uitest control string</param>
            <param name="exceptionSource">The source object/control of the exception.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.FailedToPerformActionOnBlockedControlException.#ctor(System.String,System.String,System.Exception,Microsoft.VisualStudio.TestTools.UITest.Extension.ILastInvocationInfo,System.String,System.Object)">
            <summary>
            Create new instance using the default message and the inner exception and other action
            related information.
            </summary>
            <param name="objectName">object on which action failed.</param>
            <param name="windowName">parent window of object.</param>
            <param name="actionName">Action that failed.</param>
            <param name="innerException">The inner exception.</param>
            <param name="lastInfo">The last invocation info.</param>
            <param name="uiTestControl">The uitest control string</param>
            <param name="exceptionSource">The source object/control of the exception.</param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Microsoft.VisualStudio.TestTools.UITest.Extension.FailedToPerformActionOnBlockedControlException.#ctor(System.String,System.String,System.String,System.Exception,Microsoft.VisualStudio.TestTools.UITest.Extension.ILastInvocationInfo,System.IntPtr,System.String,System.Object)" -->
        <!-- Badly formed XML comment ignored for member "M:Microsoft.VisualStudio.TestTools.UITest.Extension.FailedToPerformActionOnBlockedControlException.#ctor(System.String,System.String,System.Exception,Microsoft.VisualStudio.TestTools.UITest.Extension.ILastInvocationInfo,System.IntPtr,System.String,System.Object)" -->
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.FailedToPerformActionOnBlockedControlException.WindowHandle">
            <summary>
            Window handle of window blocking the control.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.FailedToPerformActionOnBlockedControlException.DefaultMessage">
            <summary>
            The default exception message that is to be shown if user has not explicitly set
            any error message.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITest.Extension.FailedToPerformActionOnHiddenControlException">
            <summary>
            Thrown when an EnsureVisible fails.
            </summary>
            <remarks>
            Used http://msdn2.microsoft.com/en-us/library/ms229064.aspx for the
            exception design. Chose the base class of the exception from 
            http://msdn2.microsoft.com/en-us/library/z4c5tckx.aspx
            
            Should we consider extending EqtException? Today, this creates SxS issues.
            </remarks>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.FailedToPerformActionOnHiddenControlException.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.FailedToPerformActionOnHiddenControlException.#ctor(System.String)">
            <summary>
            Create new instance using the message.
            </summary>
            <param name="message">The exception message.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.FailedToPerformActionOnHiddenControlException.#ctor(System.String,System.Exception)">
            <summary>
            Create new instance using the message and the inner exception.
            </summary>
            <param name="message">The exception message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.FailedToPerformActionOnHiddenControlException.#ctor(System.String,System.String,System.String,System.Exception,Microsoft.VisualStudio.TestTools.UITest.Extension.ILastInvocationInfo,System.String,System.Object)">
            <summary>
            Create new instance using the message and the inner exception and other action
            related information.
            </summary>
            <param name="objectName">object on which action failed.</param>
            <param name="windowName">parent window of object.</param>
            <param name="actionName">Action that failed.</param>
            <param name="innerException">The inner exception.</param>
            <param name="lastInfo">The last invocation info.</param>
            <param name="uiTestControl">The uitest control</param>
            <param name="exceptionSource">The source object/control of the exception.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.FailedToPerformActionOnHiddenControlException.#ctor(System.String,System.String,System.Exception,Microsoft.VisualStudio.TestTools.UITest.Extension.ILastInvocationInfo,System.String,System.Object)">
            <summary>
            Constructor overload that sets the Message property of the exception to
            the default message for this exception type
            </summary>
            <param name="objectName">object on which action failed.</param>
            <param name="windowName">parent window of object.</param>
            <param name="actionName">Action that failed.</param>
            <param name="innerException">The inner exception.</param>
            <param name="lastInfo">The last invocation info.</param>
            <param name="uiTestControl">The uitest control</param>
            <param name="exceptionSource">The source object/control of the exception.</param>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.FailedToPerformActionOnHiddenControlException.DefaultMessage">
            <summary>
            The default exception message that is to be shown if user has not explicitly set
            any error message.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITest.Extension.IllegalParameterValueException">
            <summary>
            Exception thrown when at playback time, illegal value for a parameter is found.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.IllegalParameterValueException.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.IllegalParameterValueException.#ctor(System.String)">
            <summary>
            Create new instance using the message.
            </summary>
            <param name="message">The exception message.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.IllegalParameterValueException.#ctor(System.String,System.Exception)">
            <summary>
            Create new instance using the message and the inner exception.
            </summary>
            <param name="message">The exception message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.IllegalParameterValueException.ParameterName">
            <summary>
            Parameter name for which exception was thrown
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.IllegalParameterValueException.ParameterValue">
            <summary>
            Parameter value
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.IllegalParameterValueException.IsParameterBound">
            <summary>
            Whether the parameter is bound or not
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITest.Extension.ApplicationFromNetworkShareException">
            <summary>
            This exception is thrown if the AUT on which action is performed is a Network share file.
            </summary>
            <remarks>
            Used http://msdn2.microsoft.com/en-us/library/ms229064.aspx for the
            exception design. Chose the base class of the exception from 
            http://msdn2.microsoft.com/en-us/library/z4c5tckx.aspx
            
            </remarks>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.ApplicationFromNetworkShareException.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.ApplicationFromNetworkShareException.#ctor(System.String)">
            <summary>
            Create new instance using the message.
            </summary>
            <param name="message">The exception message.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.ApplicationFromNetworkShareException.#ctor(System.String,System.Exception)">
            <summary>
            Create new instance using the message and the inner exception.
            </summary>
            <param name="message">The exception message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITest.Extension.PlaybackCanceledException">
            <summary>
            Exception thrown when playback is cancelled.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.PlaybackCanceledException.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.PlaybackCanceledException.#ctor(System.String)">
            <summary>
            Create new instance using the message.
            </summary>
            <param name="message">The exception message.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.PlaybackCanceledException.#ctor(System.String,System.Exception)">
            <summary>
            Create new instance using the message and the inner exception.
            </summary>
            <param name="message">The exception message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITest.Extension.RethrowException">
            <summary>
            To be used only in property provider get-set scenarios.
            In Map and throw, if the ex is RethrowException we get the internal exception
            and rethrow it with proper message
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.RethrowException.InternalException">
            <summary>
            The internal exception that is beign wrapped up by RethrowException
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.RethrowException.IsNotSupported">
            <summary>
            If true, the set/get property is not supported.
            If false, the property is supported but get/set failed
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.RethrowException.DataType">
            <summary>
            Used in case of set property where the data type expected for that property is different 
            from what was provided.
            For eg: If we try to do a SetPosition of "ABC" on slider.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.RethrowException.Value">
            <summary>
            The value that was used in setproperty
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITest.Extension.TechnologyNotSupportedException">
            <summary>
            Thrown when Record/Playback on the AUT is not supported
            </summary>w
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.TechnologyNotSupportedException.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.TechnologyNotSupportedException.#ctor(System.String)">
            <summary>
            Create new instance using the message.
            </summary>
            <param name="message">The exception message.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.TechnologyNotSupportedException.#ctor(System.String,System.Exception)">
            <summary>
            Create new instance using the message and the inner exception.
            </summary>
            <param name="message">The exception message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.TechnologyNotSupportedException.AppendMessageWithStandardHelp(System.String)">
            <summary>
            Appends the message with standard help for technology not supported fwdlink.
            </summary>
            <param name="message">The message.</param>
            <returns>The message with help.</returns>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.TechnologyNotSupportedException.DefaultMessage">
            <summary>
             Default message
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITest.Extension.UITestControlNotFoundException">
            <summary>
            Thrown when a control is not found.
            </summary>
            <remarks>
            Used http://msdn2.microsoft.com/en-us/library/ms229064.aspx for the
            exception design. Chose the base class of the exception from 
            http://msdn2.microsoft.com/en-us/library/z4c5tckx.aspx
            
            Should we consider extending EqtException? Today, this creates SxS issues.
            </remarks>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.UITestControlNotFoundException.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.UITestControlNotFoundException.#ctor(System.String)">
            <summary>
            Create new instance using the message.
            </summary>
            <param name="message">The exception message.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.UITestControlNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Create new instance using the message and the inner exception.
            </summary>
            <param name="message">The exception message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.UITestControlNotFoundException.#ctor(System.String,System.String,System.Object)">
            <summary>
            Constructor that takes message and the string representation
            of the uitest control.
            </summary>
            <param name="message">The exception message.</param>
            <param name="uiTestControl">The uitestcontrol string</param> 
            <param name="exceptionSource">The source object/control of the exception.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.UITestControlNotFoundException.#ctor(System.String,System.Exception,System.String,System.Object)">
            <summary>
            Constructor that takes message, inner exception and the string representation
            of the uitest control.
            </summary>
            <param name="message">The exception message.</param>
            <param name="innerException">The inner exception.</param>
            <param name="uiTestControl">The uitestcontrol string</param>
            <param name="exceptionSource">The source object/control of the exception.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.UITestControlNotFoundException.#ctor(System.String,Microsoft.VisualStudio.TestTools.UITesting.PropertyExpressionCollection,Microsoft.VisualStudio.TestTools.UITesting.PropertyExpressionCollection,System.String,System.Exception,System.String,System.Object)">
            <summary>
            Create new instance using the message and the inner exception.
            </summary>
            <param name="message">The exception message.</param>
            <param name="primaryProperties">The primary properties of the control.</param>
            <param name="secondaryProperties">The secondary properties of the control.</param>
            <param name="root">The root element.</param>
            <param name="condition">Condition used to search window.</param>
            <param name="innerException">The inner exception.</param>
            <param name="uiTestControl">the uitestcontrol string</param>
            <param name="exceptionSource">The source object/control of the exception.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.UITestControlNotFoundException.#ctor(Microsoft.VisualStudio.TestTools.UITesting.PropertyExpressionCollection,Microsoft.VisualStudio.TestTools.UITesting.PropertyExpressionCollection,System.String,System.Exception,System.String,System.Object)">
            <summary>
            Create new instance using the default message and the inner exception.
            </summary>
            <param name="primaryProperties">The primary properties of the control.</param>
            <param name="secondaryProperties">The secondary properties of the control.</param>
            <param name="root">The root element.</param>
            <param name="condition">Condition used to search window.</param>
            <param name="innerException">The inner exception.</param>
            <param name="uiTestControl">the uitestcontrol string</param>
            <param name="exceptionSource">The source object/control of the exception.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.UITestControlNotFoundException.#ctor(System.String,Microsoft.VisualStudio.TestTools.UITesting.PropertyExpressionCollection,Microsoft.VisualStudio.TestTools.UITesting.PropertyExpressionCollection,System.String,System.Exception,Microsoft.VisualStudio.TestTools.UITest.Extension.ILastInvocationInfo,System.String,System.Object)">
            <summary>
            Create new instance using the message and the inner exception.
            </summary>
            <param name="message">The exception message.</param>
            <param name="primaryProperties">The primary properties of the control.</param>
            <param name="root">The root element.</param>
            <param name="condition">Condition used to search window.</param>
            <param name="innerException">The inner exception.</param>
            <param name="lastInfo"> Search info</param>
            <param name="exceptionSource">The source object/control of the exception.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.UITestControlNotFoundException.#ctor(Microsoft.VisualStudio.TestTools.UITesting.PropertyExpressionCollection,Microsoft.VisualStudio.TestTools.UITesting.PropertyExpressionCollection,System.String,System.Exception,Microsoft.VisualStudio.TestTools.UITest.Extension.ILastInvocationInfo,System.String,System.Object)">
            <summary>
            Create new instance using the message and the inner exception.
            </summary>
            <param name="message">The exception message.</param>
            <param name="primaryProperties">The primary properties of the control.</param>
            <param name="root">The root element.</param>
            <param name="condition">Condition used to search window.</param>
            <param name="innerException">The inner exception.</param>
            <param name="lastInfo"> Search info</param>
            <param name="exceptionSource">The source object/control of the exception.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.UITestControlNotFoundException.SetHResult">
            <summary>
            Sets the corresponding HRESULT for the exception. 
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.UITestControlNotFoundException.rootElement">
            <summary>
            Friendly name of element used for search;
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.UITestControlNotFoundException.primaryProperties">
            <summary>
            Primary properties
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.UITestControlNotFoundException.secondaryProperties">
            <summary>
            Secondary properties
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.UITestControlNotFoundException.PrimaryProperties">
            <summary>
            Primary properties of the control.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.UITestControlNotFoundException.SecondaryProperties">
            <summary>
            Secondary properties of the control.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.UITestControlNotFoundException.RootElement">
            <summary>
            Friendly name of element used for search;
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.UITestControlNotFoundException.DefaultMessage">
            <summary>
            The default exception message that is to be shown if user has not explicitly set
            any error message.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITest.Extension.UITestControlInvalidActionException">
            <summary>
            Contains information about the exception that is raised when the user acts on the UI
            and the action can never be played back. 
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.UITestControlInvalidActionException.#ctor">
            <summary>
            Initializes a new instance of the UITestControlInvalidActionException class.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.UITestControlInvalidActionException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the UITestControlInvalidActionException class with a specified 
            error message.
            </summary>
            <param name="message">The description of the error.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.UITestControlInvalidActionException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the UITestControlInvalidActionException class with a specified 
            error message and a reference to the inner exception that caused this exception.
            </summary>
            <param name="message">The description of the error.</param>
            <param name="innerException">The exception that caused this exception.</param>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITest.Extension.UITestControlNotAvailableException">
            <summary>
            Contains information about the exception that is raised when an attempt is
            made to access a UIElement corresponding to a part of the user
            interface that is no longer available or not accessible.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.UITestControlNotAvailableException.#ctor">
            <summary>
            Initializes a new instance of the UITestControlNotAvailableException class.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.UITestControlNotAvailableException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the UITestControlNotAvailableException class with a specified 
            error message.
            Use this constructor when the exact UIElement is not available. Like when
            searching by some query string.
            </summary>
            <param name="message">The description of the error.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.UITestControlNotAvailableException.#ctor(System.Exception)">
            <summary>
            Constructor overload that sets the Message property of the exception to
            the default message for this exception type
            </summary>
            <param name="innerException">The exception that caused this exception.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.UITestControlNotAvailableException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the UITestControlNotAvailableException class with a specified 
            error message and a reference to the inner exception that caused this exception.
            </summary>
            <param name="message">The description of the error.</param>
            <param name="innerException">The exception that caused this exception.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.UITestControlNotAvailableException.#ctor(System.String,System.Object)">
            <summary>
            Constrcutor overload that sets the Message property of the exception to
            the default message for this exception type
            </summary>
            <param name="uiTestControl">The uitestcontrol string</param> 
            <param name="exceptionSource">The source object/control of the exception.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.UITestControlNotAvailableException.#ctor(System.String,System.String,System.Object)">
            <summary>
            Constructor that takes message and the string representation
            of the uitest control.
            </summary>
            <param name="message">The exception message.</param>
            <param name="uiTestControl">The uitestcontrol string</param> 
            <param name="exceptionSource">The source object/control of the exception.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.UITestControlNotAvailableException.#ctor(System.Exception,System.String,System.Object)">
            <summary>
            Constructor overload that sets the Message property of the exception to
            the default message for this exception type
            </summary>
            <param name="innerException">The inner exception.</param>
            <param name="uiTestControl">The uitestcontrol string</param>
            <param name="exceptionSource">The source object/control of the exception.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.UITestControlNotAvailableException.#ctor(System.String,System.Exception,System.String,System.Object)">
            <summary>
            Constructor that takes message, inner exception and the string representation
            of the uitest control.
            </summary>
            <param name="message">The exception message.</param>
            <param name="innerException">The inner exception.</param>
            <param name="uiTestControl">The uitestcontrol string</param>
            <param name="exceptionSource">The source object/control of the exception.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.UITestControlNotAvailableException.#ctor(Microsoft.VisualStudio.TestTools.UITest.Extension.IUITechnologyElement,System.Exception)">
            <summary>
            Initializes a new instance of the UITestControlNotAvailableException class with a specified 
            UIElement, error message and a reference to the inner exception that caused this
            exception.
            Use this constructor when the exact UIElement is available.
            </summary>
            <param name="element">The IUITechnologyElement that is no longer available.</param>
            <param name="innerException">The exception that caused this exception.</param>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.UITestControlNotAvailableException.DefaultMessage">
            <summary>
            The default exception message that is to be shown if user has not explicitly set
            any error message.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITest.Extension.UITestControlNotVisibleException">
            <summary>
            Contains information about the exception that is raised when an attempt is
            made to access a UIElement corresponding to a part of the user
            interface that is no longer available or not accessible.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.UITestControlNotVisibleException.#ctor">
            <summary>
            Initializes a new instance of the UITestControlNotVisibleException class.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.UITestControlNotVisibleException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the UITestControlNotVisibleException class with a specified 
            error message.
            Use this constructor when the exact UIElement is not available. Like when
            searching by some query string.
            </summary>
            <param name="message">The description of the error.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.UITestControlNotVisibleException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the UITestControlNotVisibleException class with a specified 
            error message and a reference to the inner exception that caused this exception.
            </summary>
            <param name="message">The description of the error.</param>
            <param name="innerException">The exception that caused this exception.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.UITestControlNotVisibleException.#ctor(System.String,System.String,System.Object)">
            <summary>
            Constructor that takes the default message and also string representation
            of the uitest control associated with this exception.
            </summary>
            <param name="message">exception message</param>
            <param name="uiTestControl">uitestcontrol string</param>
            <param name="exceptionSource">The source object/control of the exception.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.UITestControlNotVisibleException.#ctor(System.String,System.Exception,System.String,System.Object)">
            <summary>
            Constructor that takes the default message, inner exception and string representation
            of the uitest control associated with this exception.
            </summary>
            <param name="message">The description of the error.</param>
            <param name="innerException">The exception that caused this exception.</param>
            <param name="uiTestControl">uitestcontrol string</param>
            <param name="exceptionSource">The source object/control of the exception.</param>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.UITestControlNotVisibleException.DefaultMessage">
            <summary>
            The default exception message that is to be shown if user has not explicitly set
            any error message.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITest.Extension.DecodingFailedException">
            <summary>
            A Decoding option failed due to incorrect key file.
            </summary>
            <remarks>
            Used http://msdn2.microsoft.com/en-us/library/ms229064.aspx for the
            exception design. Chose the base class of the exception from 
            http://msdn2.microsoft.com/en-us/library/z4c5tckx.aspx
            
            </remarks>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.DecodingFailedException.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.DecodingFailedException.#ctor(System.String)">
            <summary>
            Create new instance using the message.
            </summary>
            <param name="message">The exception message.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.DecodingFailedException.#ctor(System.String,System.Exception)">
            <summary>
            Create new instance using the message and the inner exception.
            </summary>
            <param name="message">The exception message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITest.Extension.UITestJScriptExecutionException">
            <summary>
            The base class for all UITest exceptions.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.UITestJScriptExecutionException.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.UITestJScriptExecutionException.#ctor(System.String)">
            <summary>
            Create new instance using the message.
            </summary>
            <param name="message">The exception message.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.UITestJScriptExecutionException.#ctor(System.String,System.Exception)">
            <summary>
            Create new instance using the message and the inner exception.
            </summary>
            <param name="message">The exception message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.UITestJScriptExecutionException.DefaultMessage">
            <summary>
            The default message for this exception type. This is overriden typically by derived
            exception classes to provide thier own default messages. In case user has not explicitly
            set any message, then the default message is used by BasicMessage and base.Message.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITest.Extension.ValidationFailedException">
            <summary>
            Exception thrown when a ValidationAction failed(AssertAction or StringAssertAction)
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.ValidationFailedException.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.ValidationFailedException.#ctor(System.String)">
            <summary>
            Create new instance using the message.
            </summary>
            <param name="message">The exception message.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.ValidationFailedException.#ctor(System.String,System.Exception)">
            <summary>
            Create new instance using the message and the inner exception.
            </summary>
            <param name="message">The exception message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.ValidationFailedException.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.Exception)">
            <summary>
            Create new instance with validtionexception parameters.
            </summary>
            <param name="actionName">the action name</param>
            <param name="condition">the assert condition</param>
            <param name="propertyName">the propertyname for which validation failed</param>
            <param name="friendlyName">The friendle name of the control</param>
            <param name="expectedValue">expected value</param>
            <param name="actualValue">actual value</param>
            <param name="innerException">The inner exception</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.ValidationFailedException.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Exception)">
            <summary>
            Create new instance with validtionexception parameters.
            </summary>
            <param name="message">The error message.</param>
            <param name="actionName">the action name</param>
            <param name="condition">the assert condition</param>
            <param name="propertyName">the propertyname for which validation failed</param>
            <param name="friendlyName">The friendle name of the control</param>
            <param name="expectedValue">expected value</param>
            <param name="actualValue">actual value</param>
            <param name="innerException">The inner exception</param>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.ValidationFailedException.DefaultMessage">
            <summary>
            The default exception message that is to be shown if user has not explicitly set
            any error message.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITest.Extension.ExceptionConstants">
            <summary>
            Class containing the constants for HResults definition
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.ExceptionConstants.ControlNotFound">
            <summary>
            control not found exception
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.ExceptionConstants.MultipleControlsFound">
            <summary>
            Ambigous control exception.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.ExceptionConstants.ControlNotVisible">
            <summary>
            ControlNotVisible exception.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.ExceptionConstants.ControlNotClickable">
            <summary>
            ControlNotClickable exception.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.ExceptionConstants.ControlNotInFocus">
            <summary>
            ControlNotInFocus exception.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.ExceptionConstants.ControlDisabled">
            <summary>
            ElementDisabled exception. 
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.ExceptionConstants.VerificationFailed">
            <summary>
            VerificationFailed exception. 
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.ExceptionConstants.OptionNotFound">
            <summary>
            Combobox option not found exception.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.ExceptionConstants.PlaybackFailure">
            <summary>
            Generic playback exception.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.ExceptionConstants.TechnologyNotSupported">
            <summary>
            Record/Playback on the AUT not supported. 
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.ExceptionConstants.PlaybackCancelled">
            <summary>
            Playback was cancelled. corrosponds to ERROR_CANCELLED.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.ExceptionConstants.ApplicationNotRegistered">
            <summary>
            Application being tried to Activate is not registered, specific to Win8+
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.ExceptionConstants.ControlNotFoundCount">
            <summary>
            Control not found in a search.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.ExceptionConstants.ActualValue">
            <summary>
            ActualValue got from a SetValue operation.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.ExceptionConstants.IntermediateElementsSkipped">
            <summary>
            IntermediateElementsSkipped in a search.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.ExceptionConstants.IsSmartMatchUsed">
            <summary>
            IsSmartMatchUsed in a search.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.ExceptionConstants.HResult">
            <summary>
            Error code for Exception.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITest.Extension.InvalidUITestExtensionPackageException">
            <summary>
            Exception thrown when an invalid uitest extension package is encountered.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.InvalidUITestExtensionPackageException.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.InvalidUITestExtensionPackageException.#ctor(System.String)">
            <summary>
            Create new instance using the message.
            </summary>
            <param name="message">The exception message.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.InvalidUITestExtensionPackageException.#ctor(System.String,System.Exception)">
            <summary>
            Create new instance using the message and the inner exception.
            </summary>
            <param name="message">The exception message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITest.Extension.ActionParameter">
            <summary>
            Paramter to be used in SetValue and SendKeys actions
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.ActionParameter.#ctor">
            <summary>
            Construct ActionParameter.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.ActionParameter.#ctor(System.String)">
            <summary>
            Construct ActionParameter.
            </summary>
            <param name="name">Name of the action's paramenter.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.ActionParameter.#ctor(System.String,System.Object)">
            <summary>
            Construct ActionParameter.
            </summary>
            <param name="name">Name of the action's paramenter.</param>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.ActionParameter.Name">
            <summary>
            Name of the action's parameter.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.ActionParameter.Value">
            <summary>
            Value of the action's parameter.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITesting.ControlType">
            <summary>
            ControlType class encapsulates the different types of UI Controls
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITesting.ControlType.Button">
            <summary>
            A button control which can be clicked using a mouse, ENTER key or space-bar if the button has focus
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITesting.ControlType.Calendar">
            <summary>
            A calendar control allows user to easily determine the date and select other dates
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITesting.ControlType.Cell">
            <summary>
            A cell within a table. 
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITesting.ControlType.CheckBox">
            <summary>
            A check box control, which is an option that can be turned on or off independent of other options.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITesting.ControlType.CheckBoxTreeItem">
            <summary>
            A check box control, which is an option that can be turned on or off independent of other options present as a tree item
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITesting.ControlType.Client">
            <summary>
            A window's user area.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITesting.ControlType.ColumnHeader">
            <summary>
            A column header, which provides a visual label for a column in a table.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITesting.ControlType.ComboBox">
            <summary>
            A combo box is an edit control with an associated list box that provides a set of predefined choices. 
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITesting.ControlType.ContextMenu">
            <summary>
            A context menu is a control which has multiple sub item inside it.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITesting.ControlType.Custom">
            <summary>
            A custom control.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITesting.ControlType.DatePicker">
            <summary>
            A control used to select date.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITesting.ControlType.DateTimePicker">
            <summary>
            A control used to select date and time.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITesting.ControlType.Document">
            <summary>
            A document window, which is always contained within an application window. 
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITesting.ControlType.Edit">
            <summary>
            A control used to either display text, to request text, or to do both.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITesting.ControlType.Empty">
            <summary>
            An empty control.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITesting.ControlType.Expander">
            <summary>>
            An expander provides content in an expandable area that resembles a window and includes a header.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITesting.ControlType.FileInput">
            <summary>
            A control used to select files from local machine or network.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITesting.ControlType.FlipView">
            <summary>
            A control used to flip through different pages mostly consisting of images
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITesting.ControlType.FlipViewItem">
            <summary>
            A control used to flip through different pages mostly consisting of images
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITesting.ControlType.Frame">
            <summary>
            A control used to present documents in multiple views, which may be independent windows or subwindows
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITesting.ControlType.Group">
            <summary>
            The objects grouped in a logical manner. There can be a parent-child relationship between the grouping object and the objects it contains. 
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITesting.ControlType.Hub">
            <summary>
            Hub control is used to logically group controls inside different sections.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITesting.ControlType.HubSection">
            <summary>
            HubSection control represents the various sections inside a Hub Control.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITesting.ControlType.Hyperlink">
            <summary>
            A hyperlink is a connection between a source document and a destination document.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITesting.ControlType.Image">
            <summary>
            Identifies an image control. 
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITesting.ControlType.Label">
            <summary>>
            A read-only text for other controls or instructions in a dialog box.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITesting.ControlType.List">
            <summary>
            A list box, which allows the user to select one or more items.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITesting.ControlType.ListItem">
            <summary>
            An item in a list box or the list portion of a combo box, drop-down list box, or drop-down combo box. 
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITesting.ControlType.Menu">
            <summary>
            A menu presents a list of options from which the user can make a selection to perform an action.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITesting.ControlType.MenuBar">
            <summary>
            A menu bar, usually beneath the title bar of a window, from which users can select menus. 
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITesting.ControlType.MenuItem">
            <summary>
            A menu item, which is an entry in a menu that a user can choose to carry out a command, select an option, or display another menu.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITesting.ControlType.Pane">
            <summary>
            A separate area in a frame, a split document window, or a rectangular area of the status bar that can be used to display information.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITesting.ControlType.Pivot">
            <summary>
            A control used to flip through different pivot items
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITesting.ControlType.PivotItem">
            <summary>
            An item in Pivot, used to contain other controls which are usually logically similar.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITesting.ControlType.ProgressBar">
            <summary>
            A progress bar, which indicates the progress of a lengthy operation by displaying colored lines inside a horizontal rectangle.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITesting.ControlType.RadioButton">
            <summary>
            An option button, also known as a radio button. All objects sharing a single parent that have this attribute are assumed to be part of a single mutually exclusive group.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITesting.ControlType.Rating">
            <summary>
            An control used to rate something by selecting the number of stars in it
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITesting.ControlType.Row">
            <summary>
            A row of cells within a table. 
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITesting.ControlType.RowHeader">
            <summary>
            A row header, which provides a visual label for a table row.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITesting.ControlType.ScrollBar">
            <summary>
            A vertical or horizontal scroll bar, which can be either part of the client area or used in a control. 
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITesting.ControlType.Separator">
            <summary>
            A space divided visually into two regions, such as a separator menu item or a separator dividing split panes within a window. 
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITesting.ControlType.SemanticZoom">
            <summary>
            A control,
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITesting.ControlType.Slider">
            <summary>
            A control, sometimes called a trackbar, that enables a user to adjust a setting in given increments between minimum and maximum values by moving a slider.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITesting.ControlType.Spinner">
            <summary>
            A spin box, also known as an up-down control, which contains a pair of arrow buttons. 
            A user clicks the arrow buttons with a mouse to increment or decrement a value.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITesting.ControlType.SplitButton">
            <summary>
            A toolbar button that has a drop-down list icon directly adjacent to the button.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITesting.ControlType.StatusBar">
            <summary>
            A status bar, which is an area typically at the bottom of an application window that displays information about the current operation, state of the application, or selected object. 
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITesting.ControlType.Table">
            <summary>
            A table containing rows and columns of cells and, optionally, row headers and column headers.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITesting.ControlType.TabList">
            <summary>
            A container of page tab controls.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITesting.ControlType.TabPage">
            <summary>
            A property page that allows a user to view the attributes for a page, such as the page's title, 
            whether it is a home page, or whether the page has been modified.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITesting.ControlType.Text">
            <summary>
            The selectable text that can be editable or read-only. 
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITesting.ControlType.TitleBar">
            <summary>
            A title or caption bar for a window. 
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITesting.ControlType.ToggleButton">
            <summary>
            A control used to show or change a state rather than initiate an action.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITesting.ControlType.ToggleSwitch">
            <summary>
            A control which represents a switch that can be toggled between on and off.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITesting.ControlType.ToolBar">
            <summary>
            A toolbar, which is a grouping of controls that provide easy access to frequently used features. 
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITesting.ControlType.ToolTip">
            <summary>
            A tool tip, which is a small rectangular pop-up window that displays a brief description of the purpose of a button.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITesting.ControlType.Tree">
            <summary>
            A container whose contents have relevance as a hierarchy of nodes
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITesting.ControlType.TreeItem">
            <summary>
            A node within a tree container.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITesting.ControlType.Audio">
            <summary>
            Identifies an audio control. 
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITesting.ControlType.Video">
            <summary>
            Identifies a video control. 
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITesting.ControlType.Media">
            <summary>
            Identifies a media control. 
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITesting.ControlType.Window">
            <summary>
            A window frame, which usually contains child objects such as a title bar, client, and other objects typically contained in a window.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITesting.ControlType.Grip">
            <summary>
            A special mouse pointer, which allows a user to manipulate user interface elements such as a window.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITesting.ControlType.Indicator">
            <summary>
            An indicator, such as a pointer graphic, that points to the current item.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITesting.ControlType.GetControlType(System.String)">
            <summary>
            Gets the ControlType from its name. It first looks in the cache for a Control Type
            with that name. If it does not exist, it creates a new Control Type and adds to cache.
            </summary>
            <param name="name">Control Type name</param>
            <returns>Control Type of the given name</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITesting.ControlType.GetControlType(System.String,System.String)">
            <summary>
            Gets the ControlType from its name. It first looks in the cache for a Control Type
            with that name. If it does not exist, it creates a new Control Type and adds to cache.
            </summary>
            <param name="name">Control Type name</param>
            <param name="friendlyName">Friendly name of the control Type</param>
            <returns>Control Type of the given name</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITesting.ControlType.#ctor(System.String,System.String)">
            <summary>
            Constructs a ControlType with a given name. To support custom cotnrols 
            any string can be used.
            </summary>
            <param name="name">Name of the ControlType.</param>
            <param name="friendlyName">Friendly name of the ControlType.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITesting.ControlType.op_Equality(Microsoft.VisualStudio.TestTools.UITesting.ControlType,Microsoft.VisualStudio.TestTools.UITesting.ControlType)">
            <summary>
            Equality operator overload.
            </summary>
            <param name="left">LValue of the comparison expression.</param>
            <param name="right">RValue of the comparison expression.</param>
            <returns>true if the ControlTypes are equal</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITesting.ControlType.op_Inequality(Microsoft.VisualStudio.TestTools.UITesting.ControlType,Microsoft.VisualStudio.TestTools.UITesting.ControlType)">
            <summary>
            Inequality operator overload.
            </summary>
            <param name="left">LValue of the comparison expression.</param>
            <param name="right">RValue of the comparison expression.</param>
            <returns>true if the ControlTypes are not equal</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITesting.ControlType.op_Implicit(System.String)~Microsoft.VisualStudio.TestTools.UITesting.ControlType">
            <summary>
            Conversion operator overload to cast a string into a controltype
            </summary>
            <param name="name">name of the control type</param>
            <returns>ControlType for the name</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITesting.ControlType.Equals(System.Object)">
            <summary>
            Object.Equals override
            </summary>
            <param name="other">The other object for equals comparison.</param>
            <returns>True if other object is equal to this ControlType, false otherwise.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITesting.ControlType.ToString">
            <summary>
            String for the ControlType
            </summary>
            <returns>Name of the ControlType</returns>
            <remarks>ToString is overriden to return the name of the control</remarks>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITesting.ControlType.GetHashCode">
            <summary>
            Hashcode of the ControlType
            </summary>
            <returns>Hashcode for the ControlType</returns>
            <remarks>Overriden as equals is overriden. Hashcode is created based on
            the controls name</remarks>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITesting.ControlType.NameEquals(System.String)">
            <summary>
            Compares the control type's name property with a provided value
            </summary>
            <param name="controlName">Name of the control</param>
            <returns>True, if the name matches the control Type's name or else false</returns>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITesting.ControlType.name">
            <summary>
            The control type name
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITesting.ControlType.friendlyName">
            <summary>
            The user firendly name of the control type (to be used for action log generation)
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITesting.ControlType.NameComparer">
            <summary>
            Gets the StringComparer to use for comparing the names of two control types.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITesting.ControlType.Name">
            <summary>
            Name of the ControlType.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITesting.ControlType.FriendlyName">
            <summary>
            Friendly name of the ControlType (to be used for action log generation)
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITesting.IPlaybackContext">
            <summary>
            Contains the playback information for the use of exception mapping.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITesting.IPlaybackContext.ActionName">
            <summary>
            The action name.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITesting.IPlaybackContext.ActionLocation">
            <summary>
            Location for mouse action.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITesting.IPlaybackContext.FriendlyName">
            <summary>
            Friendly name of control.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITesting.IPlaybackContext.ParentFriendlyName">
            <summary>
            Friendly name of parent control.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITesting.IPlaybackContext.FriendlyTypeName">
            <summary>
            Friendly type name of control.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITesting.IPlaybackContext.ParentTypeName">
            <summary>
            Friendly type name of parent control.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITesting.IPlaybackContext.QueryId">
            <summary>
            QueryId used for searching.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITesting.IPlaybackContext.Condition">
            <summary>
            Condition used for searching.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITesting.IPlaybackContext.UITestControl">
            <summary>
            UITestControl on which operation is happening.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITesting.IPlaybackContext.IsSearchContext">
            <summary>
            True if search is being done.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITesting.IPlaybackContext.IsTopLevelSearch">
            <summary>
            True if top level element is being searched.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITest.Input.ModifierKeys">
            <summary>
            Specifies the set of modifier keys.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Input.ModifierKeys.None">
            <summary>
            No modifiers are pressed.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Input.ModifierKeys.Alt">
            <summary>
            The ALT key.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Input.ModifierKeys.Control">
            <summary>
            The CTRL key.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Input.ModifierKeys.Shift">
            <summary>
            The SHIFT key.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Input.ModifierKeys.Windows">
            <summary>
            The Windows logo key.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITest.Input.MouseButtons">
            <summary>
            Specifies constants that define which mouse button was pressed. 
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Input.MouseButtons.None">
            <summary>
            No mouse button was pressed.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Input.MouseButtons.Left">
            <summary>
            The left mouse button was pressed.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Input.MouseButtons.Right">
            <summary>
            The right mouse button was pressed.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Input.MouseButtons.Middle">
            <summary>
            The middle mouse button was pressed.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Input.MouseButtons.XButton1">
            <summary>
            The first XButton mouse button was pressed.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Input.MouseButtons.XButton2">
            <summary>
            The second XButton mouse button was pressed.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITest.Extension.UITestEventType">
            <summary>
            The type of the event fired.
            </summary>
            <remarks>This is used by the IEventSink interface.</remarks>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.UITestEventType.ValueChanged">
            <summary>
            Event fired when the value of an UI element has changed.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.UITestEventType.KeyUp">
            <summary>
            Event fired when a key has been released on an UI element
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.UITestEventType.KeyDown">
            <summary>
            Event fired when a key has been pressed on an UI element
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.UITestEventType.MouseUp">
            <summary>
            Event fired when a Mouse has been released on an UI element
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.UITestEventType.MouseDown">
            <summary>
            Event fired when a Mouse has been pressed on an UI element
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.UITestEventType.Hover">
            <summary>
            Event fired to record a Hover
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.UITestEventType.MouseMove">
            <summary>
            Event fired for mouse moves on a control
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.UITestEventType.MouseOver">
            <summary>
            Event fired when the mouse mouse moves into a control. Doesnot fire for
            subsequent mouse moves
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.UITestEventType.StateChanged">
            <summary>
            Event fired when the state of an UI element has changed.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.UITestEventType.OnFocus">
            <summary>
            Event Fired when an UI element comes into focus.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.UITestEventType.Media">
            <summary>
            Event fired for Media scenarios.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.UITestEventType.OrientationChanged">
            <summary>
            Event fired when there is an orientation change.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.UITestEventType.InvokedEvent">
            <summary>
            Event fired for invoke actions.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITest.Extension.ControlStates">
            <summary>
            Contains state of any control.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.ControlStates.None">
            <summary>
            No state
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.ControlStates.Unavailable">
            <summary>
            Control is not available.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.ControlStates.Selected">
            <summary>
            Control is selected.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.ControlStates.Focused">
            <summary>
            Control has keyboard focused.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.ControlStates.Pressed">
            <summary>
            Control is pressed.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.ControlStates.Checked">
            <summary>
            Control is checked.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.ControlStates.Mixed">
            <summary>
            Control is in mixed/indeterminate state. This is applicable for tri-state Check Box.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.ControlStates.Indeterminate">
            <summary>
            Control is in mixed/indeterminate state. This is applicable for tri-state Check Box.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.ControlStates.ReadOnly">
            <summary>
            Control is read only.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.ControlStates.HotTracked">
            <summary>
            Control is hot tracked i.e. in mouse hovered over state.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.ControlStates.Default">
            <summary>
            Control is in default state.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.ControlStates.Expanded">
            <summary>
            Control is expanded.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.ControlStates.Collapsed">
            <summary>
            Control is collapsed.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.ControlStates.Busy">
            <summary>
            Control is busy.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.ControlStates.Floating">
            <summary>
            Control is not fixed to the boundary of its parent control and does not move
            automatically with the parent control.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.ControlStates.Marqueed">
            <summary>
            Control has scrolling or moving text\graphics.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.ControlStates.Animated">
            <summary>
            Control with animated graphics.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.ControlStates.Invisible">
            <summary>
            Control is not visible.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.ControlStates.Offscreen">
            <summary>
            Control is off screen.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.ControlStates.Sizeable">
            <summary>
            Control is sizeable.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.ControlStates.Moveable">
            <summary>
            Control is moveable.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.ControlStates.SelfVoicing">
            <summary>
            Control is self voicing i.e. it uses text to speech to describe itself.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.ControlStates.Focusable">
            <summary>
            Control is keyboard focusable.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.ControlStates.Selectable">
            <summary>
            Control is selectable.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.ControlStates.Linked">
            <summary>
            A linked control that has not been previously selected.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.ControlStates.Traversed">
            <summary>
            A linked control that has been previously selected or traversed.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.ControlStates.MultiSelectable">
            <summary>
            Control is multi-selectable.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.ControlStates.ExtSelectable">
            <summary>
            Control is extended multi-selectable.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.ControlStates.AlertLow">
            <summary>
            Control has low priority information.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.ControlStates.AlertMedium">
            <summary>
            Control has medium priority information.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.ControlStates.AlertHigh">
            <summary>
            Control has high priority information.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.ControlStates.Protected">
            <summary>
            Control is password protected.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.ControlStates.HasPopup">
            <summary>
            Control displays a pop-up menu or window when invoked.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.ControlStates.Invalid">
            <summary>
            An invalid control.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.ControlStates.Restored">
            <summary>
            Window is restored.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.ControlStates.Maximized">
            <summary>
            Window is maximized.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.ControlStates.Minimized">
            <summary>
            Window is minimized. 
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.ControlStates.Normal">
            <summary>
            Control is in normal state.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.ControlStates.On">
            <summary>
            Toggle Switch is on
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.ControlStates.Off">
            <summary>
            Toggle Switch is off
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITest.Extension.ExtensionResources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.ExtensionResources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.ExtensionResources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.ExtensionResources.Audio">
            <summary>
              Looks up a localized string similar to audio.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.ExtensionResources.Button">
            <summary>
              Looks up a localized string similar to button.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.ExtensionResources.Calendar">
            <summary>
              Looks up a localized string similar to calendar.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.ExtensionResources.Cell">
            <summary>
              Looks up a localized string similar to cell.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.ExtensionResources.CheckBox">
            <summary>
              Looks up a localized string similar to check box.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.ExtensionResources.CheckBoxTreeItem">
            <summary>
              Looks up a localized string similar to check box.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.ExtensionResources.Client">
            <summary>
              Looks up a localized string similar to client.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.ExtensionResources.ColumnHeader">
            <summary>
              Looks up a localized string similar to column header.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.ExtensionResources.ComboBox">
            <summary>
              Looks up a localized string similar to combo box.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.ExtensionResources.ContextMenu">
            <summary>
              Looks up a localized string similar to context menu.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.ExtensionResources.Custom">
            <summary>
              Looks up a localized string similar to custom control.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.ExtensionResources.DatePicker">
            <summary>
              Looks up a localized string similar to date picker.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.ExtensionResources.DateTimePicker">
            <summary>
              Looks up a localized string similar to date time picker.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.ExtensionResources.Document">
            <summary>
              Looks up a localized string similar to document.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.ExtensionResources.Edit">
            <summary>
              Looks up a localized string similar to text box.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.ExtensionResources.Ellipsis">
            <summary>
              Looks up a localized string similar to ....
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.ExtensionResources.ErrorElementNotAvailable">
            <summary>
              Looks up a localized string similar to The following element is no longer available: {0}.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.ExtensionResources.Expander">
            <summary>
              Looks up a localized string similar to expander.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.ExtensionResources.FileInput">
            <summary>
              Looks up a localized string similar to file input.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.ExtensionResources.FlipView">
            <summary>
              Looks up a localized string similar to flipView.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.ExtensionResources.FlipViewItem">
            <summary>
              Looks up a localized string similar to flipView item.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.ExtensionResources.Frame">
            <summary>
              Looks up a localized string similar to frame.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.ExtensionResources.Group">
            <summary>
              Looks up a localized string similar to group.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.ExtensionResources.Hub">
            <summary>
              Looks up a localized string similar to hub.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.ExtensionResources.HubSection">
            <summary>
              Looks up a localized string similar to hub section.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.ExtensionResources.Hyperlink">
            <summary>
              Looks up a localized string similar to link.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.ExtensionResources.Image">
            <summary>
              Looks up a localized string similar to image.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.ExtensionResources.In">
            <summary>
              Looks up a localized string similar to in.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.ExtensionResources.InvalidParameterValue">
            <summary>
              Looks up a localized string similar to An invalid value {0} was passed for parameter {1}. Expected data type: {2}. Actual data type: {3}..
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.ExtensionResources.InvalidQueryString">
            <summary>
              Looks up a localized string similar to An invalid query string was specified..
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.ExtensionResources.Label">
            <summary>
              Looks up a localized string similar to label.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.ExtensionResources.List">
            <summary>
              Looks up a localized string similar to list box.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.ExtensionResources.ListItem">
            <summary>
              Looks up a localized string similar to list item.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.ExtensionResources.Media">
            <summary>
              Looks up a localized string similar to media.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.ExtensionResources.MenuBar">
            <summary>
              Looks up a localized string similar to menu bar.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.ExtensionResources.MenuItem">
            <summary>
              Looks up a localized string similar to menu item.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.ExtensionResources.MicrosoftCorporation">
            <summary>
              Looks up a localized string similar to Microsoft Corporation.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.ExtensionResources.OddNumberOfArguments">
            <summary>
              Looks up a localized string similar to The PropertyExpressionCollection.Add method can take only in name-value pairs..
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.ExtensionResources.Pane">
            <summary>
              Looks up a localized string similar to pane.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.ExtensionResources.Pivot">
            <summary>
              Looks up a localized string similar to pivot.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.ExtensionResources.PivotItem">
            <summary>
              Looks up a localized string similar to pivot item.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.ExtensionResources.PopupMenu">
            <summary>
              Looks up a localized string similar to popup menu.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.ExtensionResources.ProgressBar">
            <summary>
              Looks up a localized string similar to progress bar.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.ExtensionResources.PropertyExpressionNotFound">
            <summary>
              Looks up a localized string similar to PropertyExpression with the given property name does not exist in the collection..
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.ExtensionResources.RadioButton">
            <summary>
              Looks up a localized string similar to radio button.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.ExtensionResources.Rating">
            <summary>
              Looks up a localized string similar to rating.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.ExtensionResources.Row">
            <summary>
              Looks up a localized string similar to row.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.ExtensionResources.RowHeader">
            <summary>
              Looks up a localized string similar to row header.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.ExtensionResources.ScrollBar">
            <summary>
              Looks up a localized string similar to scroll bar.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.ExtensionResources.SemanticZoom">
            <summary>
              Looks up a localized string similar to semantic zoom.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.ExtensionResources.Separator">
            <summary>
              Looks up a localized string similar to separator.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.ExtensionResources.SetStateException">
            <summary>
              Looks up a localized string similar to Failed to set state to &apos;{0}&apos; for &apos;{1}&apos;.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.ExtensionResources.SFIInitError">
            <summary>
              Looks up a localized string similar to Error while initializing Playback component for resuming Windows Store Apps..
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.ExtensionResources.SFIRequestError">
            <summary>
              Looks up a localized string similar to Unable to &apos;{0}&apos; in Immersive Mode : &apos;{1}&apos;.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.ExtensionResources.SingleWarningString">
            <summary>
              Looks up a localized string similar to Completed with 1 warning.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.ExtensionResources.Slider">
            <summary>
              Looks up a localized string similar to slider.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.ExtensionResources.Spinner">
            <summary>
              Looks up a localized string similar to spinner.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.ExtensionResources.SplitButton">
            <summary>
              Looks up a localized string similar to split button.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.ExtensionResources.StateNotSupported">
            <summary>
              Looks up a localized string similar to &apos;{0}&apos; is not supported by &apos;{1}&apos;.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.ExtensionResources.StatusBar">
            <summary>
              Looks up a localized string similar to status bar.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.ExtensionResources.Tab">
            <summary>
              Looks up a localized string similar to tab.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.ExtensionResources.TabItem">
            <summary>
              Looks up a localized string similar to tab item.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.ExtensionResources.Table">
            <summary>
              Looks up a localized string similar to table.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.ExtensionResources.TabList">
            <summary>
              Looks up a localized string similar to tab list.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.ExtensionResources.TabPage">
            <summary>
              Looks up a localized string similar to tab.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.ExtensionResources.TitleBar">
            <summary>
              Looks up a localized string similar to title bar.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.ExtensionResources.ToggleButton">
            <summary>
              Looks up a localized string similar to toggle button.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.ExtensionResources.ToggleSwitch">
            <summary>
              Looks up a localized string similar to toggle switch.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.ExtensionResources.ToolBar">
            <summary>
              Looks up a localized string similar to tool bar.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.ExtensionResources.ToolTip">
            <summary>
              Looks up a localized string similar to tooltip.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.ExtensionResources.TotalTimeString">
            <summary>
              Looks up a localized string similar to TOTAL TIME.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.ExtensionResources.Tree">
            <summary>
              Looks up a localized string similar to tree.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.ExtensionResources.TreeItem">
            <summary>
              Looks up a localized string similar to tree item.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.ExtensionResources.TruncatedStringWithEllipsis">
            <summary>
              Looks up a localized string similar to {0}....
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.ExtensionResources.Video">
            <summary>
              Looks up a localized string similar to video.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.ExtensionResources.WarningsString">
            <summary>
              Looks up a localized string similar to Completed with {0} warnings.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.ExtensionResources.Window">
            <summary>
              Looks up a localized string similar to window.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITest.Extension.IBrowserActionSupport">
            <summary>
            Interface defining the browser actions support
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.IBrowserActionSupport.NavigateToUrl(System.Uri)">
            <summary>
            Navigate to given URL.
            </summary>
            <param name="uri">The URI to which browser will navigate.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.IBrowserActionSupport.Back">
            <summary>
            Go back.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.IBrowserActionSupport.Forward">
            <summary>
            Go forward.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.IBrowserActionSupport.Close">
            <summary>
            Close the browser.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.IBrowserActionSupport.Stop">
            <summary>
            Stop the page load.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.IBrowserActionSupport.Refresh">
            <summary>
            Refresh the page.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.IBrowserActionSupport.NavigateToHomepage">
            <summary>
            Go to home page.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.IBrowserActionSupport.ClearCache">
            <summary>
            Clears the browser cache.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.IBrowserActionSupport.ClearCookies">
            <summary>
            Clears the cookies.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.IBrowserActionSupport.PageUrl">
            <summary>
            Url of the page
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITest.Extension.BrowserDialogAction">
            <summary>
            Enum defining the action done on a browser dialog
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.BrowserDialogAction.None">
            <summary>
            No Action 
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.BrowserDialogAction.Ok">
            <summary>
            Action on Ok button
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.BrowserDialogAction.Cancel">
            <summary>
            Action on Cancel button
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.BrowserDialogAction.Close">
            <summary>
            Action to close the dialog
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.BrowserDialogAction.PromptText">
            <summary>
            Type Text in the prompt dialog
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.BrowserDialogAction.Yes">
            <summary>
            Action on Yes button
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.BrowserDialogAction.No">
            <summary>
            Action on No button
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.BrowserDialogAction.Ignore">
            <summary>
            Action on Ignore button
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.BrowserDialogAction.Retry">
            <summary>
            Action on Retry button
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITest.Extension.IUITestEventNotify">
            <summary>
            The interface passed to IUITechnologyManager for callback notification of any UITest event.
            </summary>
            <remarks>
            The IUITechnologyManager should only consume this interface and never implement it.
            </remarks>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.IUITestEventNotify.Notify(Microsoft.VisualStudio.TestTools.UITest.Extension.IUITechnologyElement,Microsoft.VisualStudio.TestTools.UITest.Extension.IUITechnologyElement,Microsoft.VisualStudio.TestTools.UITest.Extension.UITestEventType,System.Object)">
            <summary>
            The callback method for the event added via IUITechnologyManager.AddEventHandler.
            The callback should happen on a different thread than the one used
            to add the event handler to ensure that the callback is not
            blocking adding and removing of the event handlers. 
            </summary>
            <param name="source">The element that is the source of the event.</param>
            <param name="target">The element that is the target of the event.</param>
            <param name="eventType">The type of the event.</param>
            <param name="eventArgs">The event arguments specific to the type of the event.
            The eventArgs will -
                The actual value (typically string) of the control in case of UITestEventType.Value
                The AccessibleStates of the control in case of UITestEventType.State
                The System.Drawing.Point in case of UITestEventType.Hover and so on.
            </param>
            <remarks>
            In most cases, the source and target element will be the same.
            However, this may not be always the case. For example, clicking
            on a label for checkbox, changes the state of the checkbox. Here,
            the source is label and target is checkbox. Similar, when target
            is ComboBox, the source could be the Edit or List within it.
            The source can be null which means source and target are the same.
            </remarks>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.IUITestEventNotify.NotifyMultiSource(Microsoft.VisualStudio.TestTools.UITest.Extension.IUITechnologyElement[],Microsoft.VisualStudio.TestTools.UITest.Extension.IUITechnologyElement,Microsoft.VisualStudio.TestTools.UITest.Extension.UITestEventType,System.Object,Microsoft.VisualStudio.TestTools.UITest.Extension.ElementForThumbnailCapture)">
            <summary>
            The callback method for the event added via IUITechnologyManager.AddEventHandler.
            The callback should happen on a different thread than the one used
            to add the event handler to ensure that the callback is not
            blocking adding and removing of the event handlers. 
            </summary>
            <param name="sources">The elements that are the sources of the event.</param>
            <param name="target">The element that is the target of the event.</param>
            <param name="eventType">The type of the event.</param>
            <param name="eventArgs">The event arguments specific to the type of the event.
            <param name="elementForThumbnailImage">Specifies the element who's vicinity needs to be captured during an event.</param>
            The eventArgs will -
                The actual value (typically string) of the control in case of UITestEventType.Value
                The AccessibleStates of the control in case of UITestEventType.State
                The System.Drawing.Point in case of UITestEventType.Hover and so on.
            </param>
            <remarks>
            In some cases, one of the source elements and target element will be the same.
            However, this may not be always the case. For example, clicking
            on a label for checkbox, changes the state of the checkbox. Here,
            the source is label and target is checkbox. Similar, when target
            is ComboBox, the source could be the Edit or List within it.
            The sources can be null which means source and target are the same.
            </remarks>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITest.Extension.ILastInvocationInfo">
            <summary>
            Interface to get additional information from UITechnologyManager on the last action\search.
            This is generally used to get more details in the failure cases.
            </summary>
            <seealso cref="M:Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyManager.GetLastInvocationInfo"/>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.ILastInvocationInfo.GetInfoProperties">
            <summary>
            Gets the names of the supported information properties.
            </summary>
            <returns>An array of names of the supported information properties</returns>
            <seealso cref="M:Microsoft.VisualStudio.TestTools.UITest.Extension.ILastInvocationInfo.GetInfoPropertyValue(System.String)"/>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.ILastInvocationInfo.GetInfoPropertyValue(System.String)">
            <summary>
            Gets property value given name of property. This name should be 
            one of the names returned from GetInfoProperties().
            </summary>
            <param name="propertyName">The name of property to get value for.</param>
            <returns>Value of requested property.</returns>
            <seealso cref="M:Microsoft.VisualStudio.TestTools.UITest.Extension.ILastInvocationInfo.GetInfoProperties"/>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.ILastInvocationInfo.Message">
            <summary>
            Gets the appropriate message, for example, the cause of the failure.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.ILastInvocationInfo.Source">
            <summary>
            Gets the information on the source of the failure.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.ILastInvocationInfo.InnerInfo">
            <summary>
            Gets the inner information, if any.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITest.Extension.IUITechnologyElement">
            <summary>
            Internally used interface for the implementing UITest Technology Element.
            Do not implement this interface directly, instead use UITechnologyElement class.
            This interface may not be supported in the future release of the product.
            </summary>
            <seealso cref="T:Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyElement"/>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.IUITechnologyElement.GetNativeControlType(Microsoft.VisualStudio.TestTools.UITest.Extension.NativeControlTypeKind)">
            <summary>
            Gets the native control type of this element. This can be used in
            tandem with the universal type got via GetControlType() in cases
            where just the ControlType is not enough to differentiate a control.
            For example, if the native technology element is HTML, this could be the tag name.
            </summary>
            <param name="nativeControlTypeKind">The kind of the native control type requested.</param>
            <returns>If supported, the native type of the control or else null.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.IUITechnologyElement.GetBoundingRectangle(System.Int32@,System.Int32@,System.Int32@,System.Int32@)">
            <summary>
            Gets the coordinates of the rectangle that completely encloses this element.
            </summary>
            <remarks>This is in screen coordinates and never cached.</remarks>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.IUITechnologyElement.GetClickablePoint(System.Int32@,System.Int32@)">
            <summary>
            Gets a clickable point for this element.  The framework will use
            this to get clickable point if UITechnologyElement.GetOption(UITechnologyElementOption.GetClickablePointFrom)
            returns GetClickablePointFromTechnologyManager. To use the default algorithm
            provided by the framework, throw NotSupportedException.
            </summary>
            <param name="pointX">The x-coordinate of clickable point.</param>
            <param name="pointY">The y-coordinate of clickable point.</param>
            <exception cref="T:System.NotSupportedException">Throws System.NotSupportedException
            if this operation is not supported.</exception>
            <seealso cref="F:Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyElementOption.GetClickablePointFrom"/>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.IUITechnologyElement.Equals(Microsoft.VisualStudio.TestTools.UITest.Extension.IUITechnologyElement)">
            <summary>
            Determines whether the specified object is equal to the current object.
            </summary>
            <param name="element">The object to compare with the current object.</param>
            <returns>True if the specified object is equal to the current object; otherwise, false.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.IUITechnologyElement.GetRequestedState(Microsoft.VisualStudio.TestTools.UITest.Extension.State.AccessibleStates)">
            <summary>
            Gets the current state information of this element for the given requested states.
            If the element does not support querying only the selective states, it can
            return the complete state information.
            </summary>
            <param name="requestedState">The states for which to check.</param>
            <returns>The information about the given requested state or complete state information.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.IUITechnologyElement.InvokeProgrammaticAction(Microsoft.VisualStudio.TestTools.UITest.Extension.ProgrammaticActionOption)">
            <summary>
            Performs programmatic action, based on the ProgrammaticActionOption passed, on this element.
            </summary>
            <param name="programmaticActionOption">The option corresponding the action to perform.</param>
            <exception cref="T:System.NotSupportedException">Throws System.NotSupportedException
            if the action is not supported.</exception>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.IUITechnologyElement.EnsureVisibleByScrolling(System.Int32,System.Int32,System.Int32@,System.Int32@)">
            <summary>
            Scrolls this element into view.
            If the technology manager does not support scrolling multiple containers, 
            then the outPointX and outPointY should be returned as -1, -1.
            </summary>
            <param name="pointX">The relative x coordinate of point to make visible.</param>
            <param name="pointY">The relative y coordinate of point to make visible.</param>
            <param name="outPointX">The relative x coordinate of the point with respect to top most container after scrolling.</param>
            <param name="outPointY">The relative y coordinate of the point with respect to top most container after scrolling.</param>
            <seealso cref="F:Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyManagerProperty.ContainerScrollingSupported"/>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.IUITechnologyElement.GetPropertyValue(System.String)">
            <summary>
            Gets the value for the specified property for this element.
            </summary>
            <param name="propertyName">The name of the property.</param>
            <returns>The value of the property.</returns>
            <exception cref="T:System.NotSupportedException">Throws System.NotSupportedException
            if the property is not supported.</exception>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.IUITechnologyElement.SetFocus">
            <summary>
            Sets the focus on this element.
            </summary>
            <seealso cref="F:Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyElementOption.UseSetFocusForEnsureVisible"/>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.IUITechnologyElement.WaitForReady">
            <summary>
            Waits for the element to be ready for user action.
            </summary>
            <seealso cref="F:Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyElementOption.WaitForReadyOptions"/>
            <exception cref="T:System.TimeoutException">
            Throws TimeoutException if control is not ready in alloted time.
            </exception>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.IUITechnologyElement.GetOption(Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyElementOption)">
            <summary>
            Gets the option for this IUITechnologyElement.
            </summary>
            <param name="technologyElementOption">The element option to get.</param>
            <returns>The value of this element option. </returns>
            <exception cref="T:System.NotSupportedException">Throws System.NotSupportedException
            if the element option is not supported.</exception>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.IUITechnologyElement.SetOption(Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyElementOption,System.Object)">
            <summary>
            Sets the option for this IUITechnologyElement.
            </summary>
            <param name="technologyElementOption">The element option to set.</param>
            <param name="optionValue">The value of this element option.</param>
            <exception cref="T:System.NotSupportedException">Throws System.NotSupportedException
            if the element option is not supported.</exception>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.IUITechnologyElement.GetRightToLeftProperty(Microsoft.VisualStudio.TestTools.UITest.Extension.RightToLeftKind)">
            <summary>
            Gets the true/false value for right to left format based on the kind specified.
            </summary>
            <param name="rightToLeftKind">Either the layout or text kind to check for.</param>
            <returns>True if layout or text based on the RightToLeftKind passed is right to left,
            false otherwise.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.IUITechnologyElement.InitializeProgrammaticScroll">
            <summary>
            Initializes this element to do programmatic scrolling.
            </summary>
            <returns>True if element supports programmatic scrolling and
            initialization is successful, false otherwise.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.IUITechnologyElement.ScrollProgrammatically(Microsoft.VisualStudio.TestTools.UITest.Extension.ScrollDirection,Microsoft.VisualStudio.TestTools.UITest.Extension.ScrollAmount)">
            <summary>
            Does the programmatic scrolling for this element.
            </summary>
            <param name="scrollDirection">The direction to scroll.</param>
            <param name="scrollAmount">The amount to scroll.</param>
            <seealso cref="M:Microsoft.VisualStudio.TestTools.UITest.Extension.IUITechnologyElement.InitializeProgrammaticScroll"/>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.IUITechnologyElement.GetScrolledPercentage(Microsoft.VisualStudio.TestTools.UITest.Extension.ScrollDirection,Microsoft.VisualStudio.TestTools.UITest.Extension.IUITechnologyElement)">
            <summary>
            Gets the amount scrolled in percentage.
            </summary>
            <param name="srollDirection">The direction for which data is required.</param>
            <param name="scrollElement">The element which is either the vertical or horizontal scroll bar.</param>
            <returns>The amount in percentage.</returns>
            <seealso cref="M:Microsoft.VisualStudio.TestTools.UITest.Extension.IUITechnologyElement.InitializeProgrammaticScroll"/>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.IUITechnologyElement.GetQueryIdForRelatedElement(Microsoft.VisualStudio.TestTools.UITest.Extension.UITestElementKind,System.Object,System.Int32@)">
            <summary>
            Gets the QueryId for the related element specified by UITestElementKind.
            </summary>
            <param name="relatedElement">The kind of related element.</param>
            <param name="additionalInfo">Any additional information required.
            For example, when relatedElement is UITestElementKind.Child, this gives the name of the child.</param>
            <param name="maxDepth">The maximum depth to search under this element to find the required component.</param>
            <returns>The QueryId of the element.</returns>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.IUITechnologyElement.ChildIndex">
            <summary>
            Gets the 0-based position in the parent element's collection.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.IUITechnologyElement.IsLeafNode">
            <summary>
            Gets whether this element is a leaf node (i.e. does not have any children) or not.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.IUITechnologyElement.ClassName">
            <summary>
            Gets the class name of this element as assigned by the author.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.IUITechnologyElement.ControlTypeName">
            <summary>
            Gets the universal control type of this element.
            </summary>
            <remarks>This is technology agnostic. For example a button is always
            reported as a button in all technologies.</remarks>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.IUITechnologyElement.TechnologyName">
            <summary>
            Gets the name of the corresponding technology.
            This value should be same as IUITechnologyManager.TechnologyName.
            </summary>
            <seealso cref="P:Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyManager.TechnologyName"/>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.IUITechnologyElement.IsPassword">
            <summary>
            Gets a value that indicates whether this element contains protected content or not.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.IUITechnologyElement.Name">
            <summary>
            Gets the name of this element.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.IUITechnologyElement.WindowHandle">
            <summary>
            Gets the handle to the Win32 window containing this element.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.IUITechnologyElement.QueryId">
            <summary>
            Gets a QueryId that can be used to uniquely identify/find this element.
            In some cases, like TreeItem, the QueryIds might contain the entire element hierarchy
            but in most cases it will contain only important ancestors of the element.
            The technology manager needs to choose which ancestor to capture in the hierarchy
            by appropriately setting the QueryId.Ancestor property of each element.
            
            The APIs in condition classes like AndCondition.ToString() and AndCondition.Parse()
            may be used to convert from this class to string or vice-versa.
            </summary>
            <seealso cref="T:Microsoft.VisualStudio.TestTools.UITest.Extension.QueryElement"/>
            <seealso cref="T:Microsoft.VisualStudio.TestTools.UITest.Extension.QueryCondition"/>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.IUITechnologyElement.Value">
            <summary>
            Gets the value of this element.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:Microsoft.VisualStudio.TestTools.UITest.Extension.IUITechnologyElement.NativeElement" -->
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.IUITechnologyElement.FriendlyName">
            <summary>
            Gets the user-friendly name for this element like display text that
            will help the user to quickly recognize the element on the screen. 
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.IUITechnologyElement.SwitchingElement">
            <summary>
            Gets or sets the container element if one technology is hosted inside another technology.
            This is used by the framework.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.IUITechnologyElement.IsTreeSwitchingRequired">
            <summary>
            Gets whether the tree switching is required for window-less tree switching cases.
            </summary>
            <remarks>
            An example of this would be an ActiveX control hosted inside the browser.
            The technology manager of the browser should return true when queried about this
            property for HTML OBJECT tag. This will allow the framework to switch to a different
            technology manager to support the hosted ActiveX control.
            </remarks>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyElementOption">
            <summary>
            The various options that can be get/set for given IUITechnologyElement.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyElementOption.None">
            <summary>
            No option.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyElementOption.SetMousePositionInstantly">
            <summary>
            Return value is bool. If true then in all mouse actions mouse is moved to the point
            inside the control instantly. If false (or not supported) then mouse is moved to a
            point near to bounds of the control and then slowly moved to actual position.
            Moving mouse instantly gives better performance but in some cases moving slowly
            is required to ensure proper mouse enter/leave events are raised on the control.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyElementOption.UseWaitForReadyLevelForElementReady">
            <summary>
            Return value is bool. If true, use playback setting's WaitForReadyLevel for internal WaitForReady
            calls used during actions playback like after scrolling/setfocus/verification, etc. Otherwise,
            uses WaitForReadyLevel.AllThreads.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyElementOption.PerformEnsureVisible">
            <summary>
            Return value is bool. If true or not supported, framework tries to make element visible
            and clickable if it is not already clickable.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyElementOption.TrustGetValue">
            <summary>
            Return value is bool. If true, framework will use IUITechnologyElement.Value in playback algorithms.
            </summary>
            <seealso cref="P:Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyElement.Value"/>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyElementOption.TrustGetState">
            <summary>
            Return value is bool. If true, framework will use IUITechnologyElement.State in playback algorithms.
            </summary>
            <seealso cref="M:Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyElement.GetRequestedState(Microsoft.VisualStudio.TestTools.UITest.Extension.State.AccessibleStates)"/>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyElementOption.UseSetFocusForEnsureVisible">
            <summary>
            Return value is bool. If true or not supported, set focus is used for ensure visible by the framework.
            </summary>
            <seealso cref="M:Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyElement.SetFocus"/>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyElementOption.UISynchronizationOptions">
            <summary>
            Return value is UISynchronizationOptions which allows disabling UISyncronization for Mouse/Keyboard actions.
            </summary>
            <seealso cref="F:Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyElementOption.UISynchronizationOptions"/>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyElementOption.WaitForReadyOptions">
            <summary>
            Return value is WaitForReadyOptions which allows customizing the WaitForReady operation.
            </summary>
            <seealso cref="M:Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyElement.WaitForReady"/>
            <seealso cref="F:Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyElementOption.WaitForReadyOptions"/>
        </member>
        <!-- Badly formed XML comment ignored for member "F:Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyElementOption.GetClickableRectangle" -->
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyElementOption.GetClickablePointFrom">
            <summary>
            Used by framework to get the enum value to indicate whether clickable point
            is given by technology or should be obtained by framework using its default algorithm.
            Return type is enum GetClickablePointOption
            </summary>
            <seealso cref="M:Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyElement.GetClickablePoint(System.Int32@,System.Int32@)"/>
            <seealso cref="T:Microsoft.VisualStudio.TestTools.UITest.Extension.GetClickablePointFromOption"/>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyElementOption.SetValueAsComboBoxOptions">
            <summary>
            Used by framework to get the flags to use while setting value on ComboBox. 
            Expected return type is SetValueAsComboBoxOptions. 
            </summary>
            <seealso cref="F:Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyElementOption.SetValueAsComboBoxOptions"/>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyElementOption.SetValueAsEditBoxOptions">
            <summary>
            Used by framework to get the flags to use while setting value on Edit. 
            Expected return type is SetValueAsEditBoxOptions. 
            </summary>
            <seealso cref="F:Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyElementOption.SetValueAsEditBoxOptions"/>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyElementOption.ScrollOptions">
            <summary>
            Used by framework to get the flags to used for scrolling operation. 
            Expected return type is ScrollOptions. 
            </summary>
            <seealso cref="F:Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyElementOption.ScrollOptions"/>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyElementOption.ExpandCollapseOptions">
            <summary>
            Used by framework to get the flags to use for expanding\collapsing TreeItem or Menu. 
            Expected return type is ExpandCollapseOptions. 
            </summary>
            <seealso cref="F:Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyElementOption.ExpandCollapseOptions"/>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITest.Extension.GetClickablePointFromOption">
            <summary>
            These flags indicate how clickable point is obtained.
            </summary>
            <seealso cref="F:Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyElementOption.GetClickablePointFrom"/>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.GetClickablePointFromOption.None">
            <summary>
            Use default.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.GetClickablePointFromOption.GetClickablePointFromTechnologyManager">
            <summary>
            Technology provides a reliable way of getting clickable point.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.GetClickablePointFromOption.GetClickablePointFromPlayback">
            <summary>
            Technology does not provide reliable way of getting clickable point.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITest.Extension.UISynchronizationOptions">
            <summary>
            These flags are for configuring UISynchronization operation.
            </summary>
            <seealso cref="F:Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyElementOption.UISynchronizationOptions"/>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.UISynchronizationOptions.None">
            <summary>
            Use default.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.UISynchronizationOptions.DisableMouseSynchronization">
            <summary>
            Disable Mouse UISynchronization. 
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.UISynchronizationOptions.DisableKeyboardSynchronization">
            <summary>
            Disable Keyboard UISynchronization.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITest.Extension.WaitForReadyOptions">
            <summary>
            These flags are for configuring WaitForReady operation.
            </summary>
            <seealso cref="F:Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyElementOption.WaitForReadyOptions"/>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.WaitForReadyOptions.None">
            <summary>
            No wait for ready.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.WaitForReadyOptions.EnablePlaybackWaitForReady">
            <summary>
            Denotes that framework should use its internal wait for ready algorithm that includes
            checking for valid window handle, UI thread state and alive message pump.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.WaitForReadyOptions.EnableTechnologyWaitForReady">
            <summary>
            Use IUITechnologyElement.WaitForReady().
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITest.Extension.RightToLeftKind">
            <summary>
            Use to check if a element has right to left layout or text.
            </summary>
            <seealso cref="M:Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyElement.GetRightToLeftProperty(Microsoft.VisualStudio.TestTools.UITest.Extension.RightToLeftKind)"/>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.RightToLeftKind.Text">
            <summary>
            Use to check for right to left text.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.RightToLeftKind.Layout">
            <summary>
            Use to check for right to left layout.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITest.Extension.ProgrammaticActionOption">
            <summary>
            Use to specify options for programmatic action.
            </summary>
            <seealso cref="M:Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyElement.InvokeProgrammaticAction(Microsoft.VisualStudio.TestTools.UITest.Extension.ProgrammaticActionOption)"/>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.ProgrammaticActionOption.None">
            <summary>
            Specifies that no action should take place
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.ProgrammaticActionOption.DefaultAction">
            <summary>
            Specifies that IUITechnologyElement do the default action. 
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.ProgrammaticActionOption.TakeFocus">
            <summary>
            Specifies that IUITechnologyElement take focus.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.ProgrammaticActionOption.TakeSelection">
            <summary>
            Specifies that IUITechnologyElement take selection.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.ProgrammaticActionOption.RemoveSelection">
            <summary>
            Specifies that IUITechnologyElement remove selection.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.ProgrammaticActionOption.Expand">
            <summary>
            Specifies that IUITechnologyElement should expand.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.ProgrammaticActionOption.Collapse">
            <summary>
            Specifies that IUITechnologyElement should collapse.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.ProgrammaticActionOption.MakeVisibleAndSelect">
            <summary>
            Specifies that IUITechnologyElement should try to make the element visible and select it.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITest.Extension.ScrollAmount">
            <summary>
            Use to specify the direction and amount to scroll.
            </summary>
            <seealso cref="M:Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyElement.ScrollProgrammatically(Microsoft.VisualStudio.TestTools.UITest.Extension.ScrollDirection,Microsoft.VisualStudio.TestTools.UITest.Extension.ScrollAmount)"/>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.ScrollAmount.NoAmount">
            <summary>
            Specifies no amount.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.ScrollAmount.ForwardByLargeAmount">
            <summary>
            Specifies forward by large amount.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.ScrollAmount.BackByLargeAmount">
            <summary>
            Specifies backward by large amount.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.ScrollAmount.ForwardBySmallAmount">
            <summary>
            Specifies forward by small amount.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.ScrollAmount.BackBySmallAmount">
            <summary>
            Specifies backward by small amount.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITest.Extension.ScrollDirection">
            <summary>
            Use to specify the scrolling direction.
            </summary>
            <seealso cref="M:Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyElement.ScrollProgrammatically(Microsoft.VisualStudio.TestTools.UITest.Extension.ScrollDirection,Microsoft.VisualStudio.TestTools.UITest.Extension.ScrollAmount)"/>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.ScrollDirection.VerticalScroll">
            <summary>
            Specifies vertical scroll.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.ScrollDirection.HorizontalScroll">
            <summary>
            Specifies horizontal scroll.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITest.Extension.UITestElementKind">
            <summary>
            Use to get QueryIds of various components related to element.
            </summary>
            <seealso cref="M:Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyElement.GetQueryIdForRelatedElement(Microsoft.VisualStudio.TestTools.UITest.Extension.UITestElementKind,System.Object,System.Int32@)"/>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.UITestElementKind.VerticalScrollBar">
            <summary>
            Specifies vertical scroll bar.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.UITestElementKind.HorizontalScrollBar">
            <summary>
            Specifies horizontal scroll bar.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.UITestElementKind.LineUp">
            <summary>
            Specifies line up component of vertical scroll.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.UITestElementKind.LineDown">
            <summary>
            Specifies line down component of vertical scroll.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.UITestElementKind.PageUp">
            <summary>
            Specifies page up component of vertical scroll.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.UITestElementKind.PageDown">
            <summary>
            Specifies page down component of vertical scroll.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.UITestElementKind.VerticalThumb">
            <summary>
            Specifies vertical thumb component of vertical scroll.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.UITestElementKind.ColumnLeft">
            <summary>
            Specifies column left component of horizontal scroll.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.UITestElementKind.ColumnRight">
            <summary>
            Specifies column right component of horizontal scroll.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.UITestElementKind.PageLeft">
            <summary>
            Specifies page left component of horizontal scroll.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.UITestElementKind.PageRight">
            <summary>
            Specifies page right component of horizontal scroll.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.UITestElementKind.HorizontalThumb">
            <summary>
            Specifies horizontal thumb component of horizontal scroll.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.UITestElementKind.Child">
            <summary>
            Specifies the QueryId for children.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.UITestElementKind.SelectedItems">
            <summary>
            Specifies QueryId for descendents with State = Selected.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.UITestElementKind.ComboBoxButton">
            <summary>
            Specifies child push button of combo box.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITest.Extension.NativeControlTypeKind">
            <summary>
            Kind of return type value for GetNativeControlType() method.
            </summary>
            <seealso cref="M:Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyElement.GetNativeControlType(Microsoft.VisualStudio.TestTools.UITest.Extension.NativeControlTypeKind)"/>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.NativeControlTypeKind.AsInteger">
            <summary>
            If this flag is set, returns native control type as integer.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.NativeControlTypeKind.AsString">
            <summary>
            If this flag is set, returns native control type as string.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITest.Extension.ExpandCollapseOptions">
            <summary>
            These are flags used to configure Expand\Collapse action.
            </summary>
            <seealso cref="F:Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyElementOption.ExpandCollapseOptions"/>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.ExpandCollapseOptions.None">
            <summary>
            Use default.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.ExpandCollapseOptions.UseWindowMessage">
            <summary>
            Use window message to expand or collapse. Can be used only for windowed tree controls
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.ExpandCollapseOptions.UseDoubleClick">
            <summary>        
            Use doubleclick to expand or collapse this element.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.ExpandCollapseOptions.UseNumpad">
            <summary>
            Use Numpad +/- to expand/collapse this element.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.ExpandCollapseOptions.UseEnter">
            <summary>
            Use Enter key to Expand or collapse this element.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.ExpandCollapseOptions.UseProgrammatic">
            <summary>
            Use IUITechnologyElement.InvokeProgramaticAction() to Expand or Collapse.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.ExpandCollapseOptions.DoNotVerify">
            <summary>
            Ignore verification after Expand or Collapse.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITest.Extension.SetValueAsComboBoxOptions">
            <summary>
            These are flags used to configure options related to setting of value for ComboBox.
            Since the ComboBox consists of Edit, these flags can be OR'ed with
            SetValueAsEditBoxOptions flags.
            </summary>
            <seealso cref="T:Microsoft.VisualStudio.TestTools.UITest.Extension.SetValueAsEditBoxOptions"/>
            <seealso cref="F:Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyElementOption.SetValueAsComboBoxOptions"/>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.SetValueAsComboBoxOptions.None">
            <summary>
            Use default.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.SetValueAsComboBoxOptions.UseLeftDropDownButton">
            <summary>
            This can only be used with UseSelect flag. This specifies to use left drop-down button to expand combobox.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.SetValueAsComboBoxOptions.UseSelect">
            <summary>
            Expand combobox and select the option from the drop-down list.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.SetValueAsComboBoxOptions.UseSetAsEdit">
            <summary>
            Use SendKeys to set the value. If combobox is editable (i.e. has a child Edit),
            this does SendKeys to the child Edit else this simply sends the keys to the combobox.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.SetValueAsComboBoxOptions.DoNotVerifySendKeys">
            <summary>
            Used with UseSetAsEdit above to disable verification of the value.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.SetValueAsComboBoxOptions.DoNotVerifyMirrorLanguage">
            <summary>
            Do not check if it is mirror (i.e. right to left) language while assuming position
            of the drop-down button.  This is used if button is not exposed as a part of UI tree
            and framework is expected to guess the position of button.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.SetValueAsComboBoxOptions.UseQueryId">
            <summary>
            Use the QueryId passed to search the list item to be selected.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.SetValueAsComboBoxOptions.PressEnterAfterTyping">
            <summary>
            Do SendKeys of {Enter} after typing.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.SetValueAsComboBoxOptions.ExpandProgrammatically">
            <summary>
            Expand Combo Box programmatically.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITest.Extension.SetValueAsEditBoxOptions">
            <summary>
            These are flags used to configure options related to setting of value for EditBox.
            Since the ComboBox consists of Edit, these flags can be OR'ed with
            SetValueAsComboBoxOptions flags.
            </summary>
            <seealso cref="F:Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyElementOption.SetValueAsEditBoxOptions"/>
            <seealso cref="T:Microsoft.VisualStudio.TestTools.UITest.Extension.SetValueAsComboBoxOptions"/>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.SetValueAsEditBoxOptions.None">
            <summary>
            Use default.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.SetValueAsEditBoxOptions.DeleteContent">
            <summary>
            Ensure that editbox is empty before starting setvalue.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.SetValueAsEditBoxOptions.UseProgrammatic">
            <summary>
            Set value Programmatically.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.SetValueAsEditBoxOptions.UseWindowMessage">
            <summary>
            Use windows message WM_SETTEXT to set the value of editbox. this can be used only with windowed controls.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.SetValueAsEditBoxOptions.UseCopyPaste">
            <summary>
            Use clipboard to set the value in text. It uses CTRL+{Insert} to paste into the editbox.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.SetValueAsEditBoxOptions.UseSendKeys">
            <summary>
            Use SendKeys to set the value of editbox.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.SetValueAsEditBoxOptions.DoNotVerify">
            <summary>
            Do not verify the final value.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.SetValueAsEditBoxOptions.All">
            <summary>
            All SetValueAsEditBoxOptions options. Since ComboBox can use mix of
            SetValueAsComboBoxOptions and SetValueAsEditBoxOptions, this helps in
            extraction of only SetValueAsComboBoxOptions from the option.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITest.Extension.ScrollOptions">
            <summary>
            These are flags used to configure scrolling.
            </summary>
            <seealso cref="F:Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyElementOption.ScrollOptions"/>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.ScrollOptions.None">
            <summary>
            Use default.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.ScrollOptions.UseProgrammatic">
            <summary>
            Use IUITechnologyElement API for programmatic scrolling.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.ScrollOptions.UseMouseWheel">
            <summary>
            Use MouseWheel to scroll.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.ScrollOptions.UseScrollBar">
            <summary>
            Use Scrollbar to scroll.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.ScrollOptions.UseClickOnScrollBar">
            <summary>
            Do click on scrollbar (or scroll buttons) to do scrolling.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.ScrollOptions.UseKeyboard">
            <summary>
            Use Keyboard (PageUp, PageDown, Up, Down) keys to scroll.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITest.Extension.CheckUncheckOptions">
            <summary>
            These are flags used to configure flags for check/uncheck of CheckBox, RadioButton, etc.
            </summary>
            <remarks>TODO: We need to get this also from UITechnologyElement.</remarks>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.CheckUncheckOptions.None">
            <summary>
            Use default.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.CheckUncheckOptions.VerifyFinalState">
            <summary>
            Verify Final State.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.CheckUncheckOptions.UseClick">
            <summary>
            Use Click to set Checked State.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.CheckUncheckOptions.UseSpace">
            <summary>
            Use SendKeys {SPACE} to set Checked State.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.CheckUncheckOptions.SetIndeterminate">
            <summary>
            Set State Indeterminate.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITest.Extension.PluginRegistration">
            <summary>
            Used to configure default technology manager initialization
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.PluginRegistration.NoInitialization">
            <summary>
            This value will cause no plugins to be initialized
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.PluginRegistration.Unregistered">
            <summary>
            This value will cause only plugins that support unregistred mode to 
            be initialized. 
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.PluginRegistration.Registered">
            <summary>
            This value will cause all plugins to be initialized. Plugins that support 
            registration will default to using this mode for initialization
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITest.Extension.PluginType">
            <summary>
            Specifies the type of the plugin
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.PluginType.Managed">
            <summary>
            Instructs the engine to use managed APIs to initialize the plugin
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.PluginType.Unmanaged">
            <summary>
            Instructs the engine to use unmanaged to initialize the plugin
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITest.Extension.IUITechnologyPluginManager">
            <summary>
            Plugin Manager interface.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.IUITechnologyPluginManager.StartSession(System.Boolean)">
            <summary>
            Performs any initialization routines required by the plugins before starting
            the current session.
            </summary>
            <param name="recordingSession">True if this is recording session, false otherwise like for playback session.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.IUITechnologyPluginManager.StopSession">
            <summary>
            Performs any cleanup routines required by the plugin for the current session.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.IUITechnologyPluginManager.GetTechnologyManagerByName(System.String)">
            <summary>
            Get Technology Manager given a Technology name from active technology managers list.
            </summary>
            <param name="technologyName">Technology Name.</param>
            <returns>The technology manager interface.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.IUITechnologyPluginManager.GetTechnologyManagerByTypeInAll(System.String)">
            <summary>
            Get technology manager from all the registered technology managers list by type name.
            </summary>
            <param name="typeName">type name.</param>
            <returns>The technology manager for the type.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.IUITechnologyPluginManager.GetTechnologyManagerByAutomationElementOrWindowHandle(System.Object)">
            <summary>
            Get Technology Manager given Automation Element or Window handle.
            </summary>
            <param name="automationElement">The automation element / window handle.</param>
            <returns>The technology manager interface.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.IUITechnologyPluginManager.StartSessionAndAdd(Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyManager,System.Boolean)">
            <summary>
            Adds the technology manager after starting the session.
            </summary>
            <param name="technologyManager">The technology manager to add.</param>
            <param name="recordingSession">True if this is recording session, false otherwise like for playback session.</param>
            <returns>True if successful, false otherwise.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.IUITechnologyPluginManager.StopSessionAndRemove(Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyManager)">
            <summary>
            Removes the technology manager after stopping the session.
            </summary>
            <param name="technologyManager">The technology manager to add.</param>
            <returns>True if successful, false otherwise.</returns>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.IUITechnologyPluginManager.TechnologyManagers">
            <summary>
            Get the list of all active technology managers.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.IUITechnologyPluginManager.TechnologyManagerNames">
            <summary>
            Gets the names of all the technology managers.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.IUITechnologyPluginManager.DefaultTechnologyManager">
            <summary>
            Get and set the default technology manager.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyElement">
            <summary>
            The abstract base class for implementing UITest technology element for recorder and playback.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyElement.AllAccessibleStates">
            <summary>
            Constant denoting all the AccessibleStates.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyElement.GetNativeControlType(Microsoft.VisualStudio.TestTools.UITest.Extension.NativeControlTypeKind)">
            <summary>
            Gets the native control type of this element. This can be used in
            tandem with the universal type got via GetControlType() in cases
            where just the ControlType is not enough to differentiate a control.
            For example, if the native technology element is HTML, this could be the tag name.
            </summary>
            <param name="nativeControlTypeKind">The kind of the native control type requested.</param>
            <returns>If supported, the native type of the control or else null.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyElement.GetBoundingRectangle(System.Int32@,System.Int32@,System.Int32@,System.Int32@)">
            <summary>
            Gets the coordinates of the rectangle that completely encloses this element.
            </summary>
            <remarks>This is in screen coordinates and never cached.</remarks>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyElement.GetClickablePoint(System.Int32@,System.Int32@)">
            <summary>
            Gets a clickable point for this element.  The framework will use
            this to get clickable point if UITechnologyElement.GetOption(UITechnologyElementOption.GetClickablePointFrom)
            returns GetClickablePointFromTechnologyManager. To use the default algorithm
            provided by the framework, throw NotSupportedException.
            </summary>
            <param name="pointX">The x-coordinate of clickable point.</param>
            <param name="pointY">The y-coordinate of clickable point.</param>
            <exception cref="T:System.NotSupportedException">Throws System.NotSupportedException
            if this operation is not supported.</exception>
            <seealso cref="F:Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyElementOption.GetClickablePointFrom"/>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyElement.Equals(Microsoft.VisualStudio.TestTools.UITest.Extension.IUITechnologyElement)">
            <summary>
            Determines whether the specified object is equal to the current object.
            </summary>
            <param name="element">The object to compare with the current object.</param>
            <returns>True if the specified object is equal to the current object; otherwise, false.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyElement.GetRequestedState(Microsoft.VisualStudio.TestTools.UITest.Extension.State.AccessibleStates)">
            <summary>
            Gets the current state information of this element for the given requested states.
            If the element does not support querying only the selective states, it can
            return the complete state information.
            </summary>
            <param name="requestedState">The states for which to check.</param>
            <returns>The information about the given requested state or complete state information.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyElement.InvokeProgrammaticAction(Microsoft.VisualStudio.TestTools.UITest.Extension.ProgrammaticActionOption)">
            <summary>
            Performs programmatic action, based on the ProgrammaticActionOption passed, on this element.
            </summary>
            <param name="programmaticActionOption">The option corresponding the action to perform.</param>
            <exception cref="T:System.NotSupportedException">Throws System.NotSupportedException
            if the action is not supported.</exception>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyElement.EnsureVisibleByScrolling(System.Int32,System.Int32,System.Int32@,System.Int32@)">
            <summary>
            Scrolls this element into view.
            If the technology manager does not support scrolling multiple containers, 
            then the outPointX and outPointY should be returned as -1, -1.
            </summary>
            <param name="pointX">The relative x coordinate of point to make visible.</param>
            <param name="pointY">The relative y coordinate of point to make visible.</param>
            <param name="outPointX">The relative x coordinate of the point with respect to top most container after scrolling.</param>
            <param name="outPointY">The relative y coordinate of the point with respect to top most container after scrolling.</param>
            <seealso cref="F:Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyManagerProperty.ContainerScrollingSupported"/>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyElement.GetPropertyValue(System.String)">
            <summary>
            Gets the value for the specified property for this element.
            </summary>
            <param name="propertyName">The name of the property.</param>
            <returns>The value of the property.</returns>
            <exception cref="T:System.NotSupportedException">Throws System.NotSupportedException
            if the property is not supported.</exception>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyElement.SetFocus">
            <summary>
            Sets the focus on this element.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyElement.WaitForReady">
            <summary>
            Waits for the element to be ready for user action.
            </summary>
            <seealso cref="F:Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyElementOption.WaitForReadyOptions"/>
            <exception cref="T:System.TimeoutException">
            Throws TimeoutException if control is not ready in alloted time.
            </exception>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyElement.GetRightToLeftProperty(Microsoft.VisualStudio.TestTools.UITest.Extension.RightToLeftKind)">
            <summary>
            Gets the true/false value for right to left format based on the kind specified.
            </summary>
            <param name="rightToLeftKind">Either the layout or text kind to check for.</param>
            <returns>True if layout or text based on the RightToLeftKind passed is right to left,
            false otherwise.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyElement.InitializeProgrammaticScroll">
            <summary>
            Initializes this element to do programmatic scrolling.
            </summary>
            <returns>True if element supports programmatic scrolling and
            initialization is successful, false otherwise.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyElement.ScrollProgrammatically(Microsoft.VisualStudio.TestTools.UITest.Extension.ScrollDirection,Microsoft.VisualStudio.TestTools.UITest.Extension.ScrollAmount)">
            <summary>
            Does the programmatic scrolling for this element.
            </summary>
            <param name="scrollDirection">The direction to scroll.</param>
            <param name="scrollAmount">The amount to scroll.</param>
            <seealso cref="M:Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyElement.InitializeProgrammaticScroll"/>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyElement.GetScrolledPercentage(Microsoft.VisualStudio.TestTools.UITest.Extension.ScrollDirection,Microsoft.VisualStudio.TestTools.UITest.Extension.IUITechnologyElement)">
            <summary>
            Gets the amount scrolled in percentage.
            </summary>
            <param name="srollDirection">The direction for which data is required.</param>
            <param name="scrollElement">The element which is either the vertical or horizontal scroll bar.</param>
            <returns>The amount in percentage.</returns>
            <seealso cref="M:Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyElement.InitializeProgrammaticScroll"/>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyElement.GetQueryIdForRelatedElement(Microsoft.VisualStudio.TestTools.UITest.Extension.UITestElementKind,System.Object,System.Int32@)">
            <summary>
            Gets the QueryId for the related element specified by UITestElementKind.
            </summary>
            <param name="relatedElement">The kind of related element.</param>
            <param name="additionalInfo">Any additional information required.
            For example, when relatedElement is UITestElementKind.Child, this gives the name of the child.</param>
            <param name="maxDepth">The maximum depth to search under this element to find the required component.</param>
            <returns>The QueryId of the element.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyElement.CacheProperties">
            <summary>
            Caches all the common properties of this element for future use so that these
            properties can be used later even when the underlining UI control no longer exists.
            This typically includes properties like Name, ClassName, ControlType, QueryId
            and other properties used in identification string.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyElement.GetOption(Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyElementOption)">
            <summary>
            Gets the option for this IUITechnologyElement.
            </summary>
            <param name="technologyElementOption">The element option to get.</param>
            <returns>The value of this element option. </returns>
            <exception cref="T:System.NotSupportedException">Throws System.NotSupportedException
            if the element option is not supported.</exception>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyElement.SetOption(Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyElementOption,System.Object)">
            <summary>
            Sets the option for this IUITechnologyElement.
            </summary>
            <param name="technologyElementOption">The element option to set.</param>
            <param name="optionValue">The value of this element option.</param>
            <exception cref="T:System.NotSupportedException">Throws System.NotSupportedException
            if the element option is not supported.</exception>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyElement.IsInteractable">
            <summary>
            Checks if the element is visible and interactable at this instance.
            The plugins should overload this generic implementation to be more accurate and performant.
            </summary>
            <returns>It can return null, if it cannot decide for sure.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyElement.SetPropertyValue(System.String,System.Object)">
            <summary>
            Performs a SetProperty action
            </summary>
            <param name="propertyName">The property name.</param>
            <param name="propertyValue">The property value.</param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyElement.CopyOptionsTo(Microsoft.VisualStudio.TestTools.UITest.Extension.IUITechnologyElement)" -->
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyElement.GetTechnologyElementOption(Microsoft.VisualStudio.TestTools.UITest.Extension.IUITechnologyElement,Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyElementOption)">
            <summary>
            Gets the given option from UITechnologyElement. If fails to get it returns null.
            </summary>
            <param name="element">The UITechnologyElement to get option from.</param>
            <param name="option">The UITechnologyElementOption to get value for.</param>
            <returns>The value for option or null.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyElement.IsState(Microsoft.VisualStudio.TestTools.UITest.Extension.IUITechnologyElement,Microsoft.VisualStudio.TestTools.UITest.Extension.State.AccessibleStates)">
            <summary>
            Fetches and verifies the state of technology element.
            Note: Do not use this to verify OR state. For example, IsState(element, StateA|StateB);
            Instead use IsAnyState() function.
            </summary>
            <param name="element">Technology element.</param>
            <param name="state">State to verify.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyElement.IsAnyState(Microsoft.VisualStudio.TestTools.UITest.Extension.IUITechnologyElement,Microsoft.VisualStudio.TestTools.UITest.Extension.State.AccessibleStates[])">
            <summary>
            Fetches the element state and verifies that it matches at least one of the 'states'.
            </summary>
            <param name="element">Technology element.</param>
            <param name="states">States to match the element state.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyElement.Cast(Microsoft.VisualStudio.TestTools.UITest.Extension.IUITechnologyElement)">
            <summary>
            Casts IUITechnologyElement to UITechnologyElement.
            </summary>
            <param name="element">The IUITechnologyElement to cast.</param>
            <returns>The corresponding UITechnologyElement.</returns>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyElement.supportLevel">
            <summary>
            The support level of this element by it's technology manager.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyElement.options">
            <summary>
            The property bag to store the options.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyElement.ChildIndex">
            <summary>
            Gets the 0-based position in the parent element's collection.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyElement.IsLeafNode">
            <summary>
            Gets whether this element is a leaf node (i.e. does not have any children) or not.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyElement.TechnologyManager">
            <summary>
            Gets the corresponding technology manager.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyElement.ClassName">
            <summary>
            Gets the class name of this element as assigned by the author.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyElement.ControlTypeName">
            <summary>
            Gets the universal control type of this element.
            </summary>
            <remarks>This is technology agnostic. For example a button is always
            reported as a button in all technologies.</remarks>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyElement.TechnologyName">
            <summary>
            Gets the name of the corresponding technology.
            This value should be same as IUITechnologyManager.TechnologyName.
            </summary>
            <seealso cref="P:Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyManager.TechnologyName"/>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyElement.IsPassword">
            <summary>
            Gets a value that indicates whether this element contains protected content or not.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyElement.Name">
            <summary>
            Gets the name of this element.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyElement.WindowHandle">
            <summary>
            Gets the handle to the Win32 window containing this element.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyElement.QueryId">
            <summary>
            Gets a QueryId that can be used to uniquely identify/find this element.
            In some cases, like TreeItem, the QueryIds might contain the entire element hierarchy
            but in most cases it will contain only important ancestors of the element.
            The technology manager needs to choose which ancestor to capture in the hierarchy
            by appropriately setting the QueryId.Ancestor property of each element.
            
            The APIs in condition classes like AndCondition.ToString() and AndCondition.Parse()
            may be used to convert from this class to string or vice-versa.
            </summary>
            <seealso cref="T:Microsoft.VisualStudio.TestTools.UITest.Extension.QueryElement"/>
            <seealso cref="T:Microsoft.VisualStudio.TestTools.UITest.Extension.QueryCondition"/>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyElement.Value">
            <summary>
            Gets the value of this element.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyElement.NativeElement">
            <summary>
            Gets the underlying native technology element (like IAccessible) corresponding this element.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyElement.FriendlyName">
            <summary>
            Gets the user-friendly name for this element like display text that
            will help the user to quickly recognize the element on the screen. 
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyElement.SwitchingElement">
            <summary>
            Gets or sets the container element if one technology is hosted inside another technology.
            This is used by the framework.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyElement.IsTreeSwitchingRequired">
            <summary>
            Gets whether the tree switching is required for window-less tree switching cases.
            </summary>
            <remarks>
            An example of this would be an ActiveX control hosted inside the browser.
            The technology manager of the browser should return true when queried about this
            property for HTML OBJECT tag. This will allow the framework to switch to a different
            technology manager to support the hosted ActiveX control.
            </remarks>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyElement.TopLevelElement">
            <summary>
            Gets or sets the top level window corresponding to this element. The top level windows
            are typically children of desktop. If this is not set, the framework will set this to
            the top-most ancestor of the element (after ignoring the desktop as ancestor).
            </summary>
            <returns>The top level window.</returns>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyElement.AutomationElement">
            <summary>
            Gets the AutomationElement corresponding to a technology element.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyElement.WindowTitles">
            <summary>
            Gets the window titles of the top level window.  The element is located 
            under a top level window which has any of these titles.
            </summary> 
            <remarks>This property is for use by the recorder alone.</remarks>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyElement.SupportLevel">
            <summary>
            Gets or sets the support level of this element by the corresponding UITechnologyManager.
            This value should match the value returned by UITechnologyManager.GetControlSupportLevel()
            method for this element.
            </summary>
            <seealso cref="M:Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyManager.GetControlSupportLevel(System.IntPtr)"/>
            <seealso cref="M:Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyManager.GetControlSupportLevel(System.Windows.Automation.AutomationElement)"/>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyManager">
            <summary>
            The abstract base class for implementing UITest Technology Manager for recorder and playback.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITest.Extension.IUITechnologyManager">
            <summary>
            Internally used interface for the implementing UITest Technology Manager.
            Do not implement this interface directly, instead use UITechnologyManager class.
            This interface may not be supported in the future release of the product.
            </summary>
            <seealso cref="T:Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyManager"/>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.IUITechnologyManager.StartSession(System.Boolean)">
            <summary>
            Performs any initialization required by this technology manager for starting a session.
            </summary>
            <param name="recordingSession">True if this is recording session, false otherwise like for playback session.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.IUITechnologyManager.StopSession">
            <summary>
            Performs any cleanup required by this technology manager for stopping the current session.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.IUITechnologyManager.GetElementFromNativeElement(System.Object)">
            <summary>
            Gets the element from the given native (underlying) technology element.
            </summary>
            <param name="nativeElement">The native technology element (like IAccessible).</param>
            <returns>The IUITechnologyElement from the native element.</returns>
            <seealso cref="P:Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyElement.NativeElement"/>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.IUITechnologyManager.GetChildren(Microsoft.VisualStudio.TestTools.UITest.Extension.IUITechnologyElement,System.Object)">
            <summary>
            Gets the enumerator for children of the given IUITechnologyElement.
            </summary>
            <param name="element">The IUITechnologyElement whose child enumerator is needed.</param>
            <param name="parsedQueryIdCookie">The cookie of previously parsed QueryId to filter matching children.</param>
            <returns>The enumerator for children.</returns>
            <seealso cref="M:Microsoft.VisualStudio.TestTools.UITest.Extension.IUITechnologyManager.ParseQueryId(System.String,System.Object@)"/>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.IUITechnologyManager.GetElementFromWindowHandle(System.IntPtr)">
            <summary>
            Gets the element from the given window handle.
            </summary>
            <param name="handle">The window handle.</param>
            <returns>The IUITechnologyElement from the window handle.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.IUITechnologyManager.GetElementFromPoint(System.Int32,System.Int32)">
            <summary>
            Gets the element at the given screen coordinates.
            </summary>
            <param name="pointX">The x-coordinate of the screen location.</param>
            <param name="pointY">The y-coordinate of the screen location.</param>
            <returns>The IUITechnologyElement at the screen coordinates specified.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.IUITechnologyManager.GetParent(Microsoft.VisualStudio.TestTools.UITest.Extension.IUITechnologyElement)">
            <summary>
            Gets the parent of the given element in the user interface hierarchy.
            </summary>
            <param name="element">The element whose parent is needed.</param>
            <returns>The parent element or null if the element passed is the
            root element in this technology.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.IUITechnologyManager.GetNextSibling(Microsoft.VisualStudio.TestTools.UITest.Extension.IUITechnologyElement)">
            <summary>
            Gets the next sibling of the given element in the user interface hierarchy.
            </summary>
            <param name="element">The element whose next sibling is needed.</param>
            <returns>The next sibling or null if none is present.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.IUITechnologyManager.GetPreviousSibling(Microsoft.VisualStudio.TestTools.UITest.Extension.IUITechnologyElement)">
            <summary>
            Gets the previous sibling of the given element in the user interface hierarchy.
            </summary>
            <param name="element">The element whose previous sibling is needed.</param>
            <returns>The previous sibling or null if none is present.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.IUITechnologyManager.GetFocusedElement(System.IntPtr)">
            <summary>
            Gets the focused element i.e. the element that will receive keyboard events at this instance.
            </summary>
            <returns>The element that has the focus or null if there is no element with focus.</returns>
            <param name="handle">The handle of the window which has the focus.
            The element which has focus could be the window itself or a
            descendant of this window.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.IUITechnologyManager.AddEventHandler(Microsoft.VisualStudio.TestTools.UITest.Extension.IUITechnologyElement,Microsoft.VisualStudio.TestTools.UITest.Extension.UITestEventType,Microsoft.VisualStudio.TestTools.UITest.Extension.IUITestEventNotify)">
            <summary>
            Adds an event handler.
            </summary>
            <param name="element">The element and its descendants for which this event should be fired.</param>
            <param name="eventType">The type of event to listen to.</param>
            <param name="eventSink">The event sink which should be notified
            when the event occurs.</param>
            <returns>True if the eventType is supported and add is successful, false otherwise.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.IUITechnologyManager.RemoveEventHandler(Microsoft.VisualStudio.TestTools.UITest.Extension.IUITechnologyElement,Microsoft.VisualStudio.TestTools.UITest.Extension.UITestEventType,Microsoft.VisualStudio.TestTools.UITest.Extension.IUITestEventNotify)">
            <summary>
            Removes an event handler.
            </summary>
            <param name="element">The element and its descendants for which this event should be removed.</param>
            <param name="eventType">The type of event to listen to.</param>
            <param name="eventSink">The event sink interface that was registered.</param>
            <returns>True if the eventType is supported and remove is successful, false otherwise.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.IUITechnologyManager.GetSynchronizationWaiter(Microsoft.VisualStudio.TestTools.UITest.Extension.IUITechnologyElement,Microsoft.VisualStudio.TestTools.UITest.Extension.UITestEventType)">
            <summary>
            Gets a synchronization waiter for given UITestEventType on this element.
            </summary>
            <param name="element">The element to get synchronization waiter for.</param>
            <param name="eventType">The event for which synchronization waiter is required.</param>
            <returns>
            The synchronization waiter for specified event or null if event/waiter is not supported.
            </returns>
            <exception cref="T:System.NotSupportedException">
            This is an optional method and if the technology manager does not support
            this method it should throw System.NotSupportedException exception.
            </exception>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Microsoft.VisualStudio.TestTools.UITest.Extension.IUITechnologyManager.Search(System.Object,Microsoft.VisualStudio.TestTools.UITest.Extension.IUITechnologyElement,System.Int32)" -->
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.IUITechnologyManager.ParseQueryId(System.String,System.Object@)">
            <summary>
            Parses the query element string and returns the parsedQueryIdCookie to be
            used later during Search() or MatchElement() or GetChildren() call for
            either searching or matching or getting children that has the same query string.
            </summary>
            <param name="queryElement">The query element string to parse.</param>
            <param name="parsedQueryIdCookie">The cookie of the parsed QueryId to be used later.</param>
            <returns>The remaining part of query element string that is not supported
            by this technology manager. The framework may or may not support the remaining part.</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Microsoft.VisualStudio.TestTools.UITest.Extension.IUITechnologyManager.MatchElement(Microsoft.VisualStudio.TestTools.UITest.Extension.IUITechnologyElement,System.Object,System.Boolean@)" -->
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.IUITechnologyManager.GetLastInvocationInfo">
            <summary>
            Gets the information about the most recent invocation of the technology manager.
            </summary>
            <returns>Information about the most recent invocation of the technology manager.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.IUITechnologyManager.CancelStep">
            <summary>
            Cancels any wait or search operation being performed by this technology manager
            because of call to WaitForReady or Search methods.
            </summary>
            <remarks>
            This call is made on another thread as both the WaitForReady and Search methods are blocking.
            </remarks>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.IUITechnologyManager.GetTechnologyManagerProperty(Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyManagerProperty)">
            <summary>
            Gets the given property of technology manager.
            </summary>
            <param name="propertyName">The property to get.</param>
            <returns>The value of the property.</returns>
            <exception cref="T:System.NotSupportedException">Throws System.NotSupportedException
            if the property is not supported.</exception>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.IUITechnologyManager.SetTechnologyManagerProperty(Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyManagerProperty,System.Object)">
            <summary>
            Sets the given property of technology manager.
            </summary>
            <param name="propertyName">The property to set.</param>
            <param name="propertyValue">The property value to set.</param>
            <exception cref="T:System.NotSupportedException">Throws System.NotSupportedException
            if the property is not supported.</exception>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.IUITechnologyManager.ConvertToThisTechnology(Microsoft.VisualStudio.TestTools.UITest.Extension.IUITechnologyElement,System.Int32@)">
            <summary>
            Converts the given element of another technology to new element of this technology manager.
            This is used for operations like switching between hosted and hosting technologies.
            </summary>
            <param name="elementToConvert">The element to convert.</param>
            <param name="supportLevel">The level of support provided for the
            converted element by this technology manager.</param>
            <returns>The new converted element in this technology or null if no conversion is possible.</returns>
            <seealso cref="M:Microsoft.VisualStudio.TestTools.UITest.Extension.IUITechnologyManager.GetControlSupportLevel(System.IntPtr)"/>
            <seealso cref="T:Microsoft.VisualStudio.TestTools.UITest.Extension.ControlSupport"/>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.IUITechnologyManager.GetControlSupportLevel(System.IntPtr)">
            <summary>
            Gets the support level of this technology manager for the elements(s) in the given window.
            The framework uses this function to select the right technology manager for the element. 
            </summary>
            <param name="windowHandle">The window handle of the element.</param>
            <returns>An integer that indicates the level of support provided for the element
            by this technology manager. The higher the value the stronger the support.</returns>
            <seealso cref="T:Microsoft.VisualStudio.TestTools.UITest.Extension.ControlSupport"/>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.IUITechnologyManager.TechnologyName">
            <summary>
            Gets the name of the technology supported by this technology manager.
            This is the same as the IUITechnologyElement.TechnologyName. 
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyManager.StartSession(System.Boolean)">
            <summary>
            Performs any initialization required by this technology manager for starting a session.
            </summary>
            <param name="recordingSession">True if this is recording session, false otherwise like for playback session.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyManager.StopSession">
            <summary>
            Performs any cleanup required by this technology manager for stopping the current session.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyManager.GetElementFromNativeElement(System.Object)">
            <summary>
            Gets the element from the given native (underlying) technology element.
            </summary>
            <param name="nativeElement">The native technology element (like IAccessible).</param>
            <returns>The IUITechnologyElement from the native element.</returns>
            <seealso cref="P:Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyElement.NativeElement"/>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyManager.GetChildren(Microsoft.VisualStudio.TestTools.UITest.Extension.IUITechnologyElement,System.Object)">
            <summary>
            Gets the enumerator for children of the given IUITechnologyElement.
            </summary>
            <param name="element">The IUITechnologyElement whose child enumerator is needed.</param>
            <param name="parsedQueryIdCookie">The cookie of previously parsed QueryId to filter matching children.</param>
            <returns>The enumerator for children.</returns>
            <seealso cref="M:Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyManager.ParseQueryId(System.String,System.Object@)"/>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyManager.GetElementFromWindowHandle(System.IntPtr)">
            <summary>
            Gets the element from the given window handle.
            </summary>
            <param name="handle">The window handle.</param>
            <returns>The IUITechnologyElement from the window handle.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyManager.GetElementFromPoint(System.Int32,System.Int32)">
            <summary>
            Gets the element at the given screen coordinates.
            </summary>
            <param name="pointX">The x-coordinate of the screen location.</param>
            <param name="pointY">The y-coordinate of the screen location.</param>
            <returns>The IUITechnologyElement at the screen coordinates specified.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyManager.GetElementFromPoint(System.Int32,System.Int32,System.Windows.Automation.AutomationElement)">
            <summary>
            Gets the element at the given screen coordinates.
            </summary>
            <param name="pointX">The x-coordinate of the screen location.</param>
            <param name="pointY">The y-coordinate of the screen location.</param>
            <param name="ceilingElement">Teh Ceiling element in this technology until which the queryid should be created.</param>
            <returns>The IUITechnologyElement at the screen coordinates specified.</returns>
            <remarks>The queryid generated for the technology element should not cross the ceilingElement in order to honor other plugins claiming support.</remarks>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyManager.GetElementFromAutomationElement(System.Windows.Automation.AutomationElement,System.Windows.Automation.AutomationElement)">
            <summary>
            Gets the technology element from the given AutomationElement.
            </summary>
            <param name="element">The automation element.</param>
            <param name="ceilingElement">The ceiling element until which the plugin should generate queryid for the technology element.</param>
            <returns>The IUITechnologyElement at the screen coordinates specified.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyManager.GetParent(Microsoft.VisualStudio.TestTools.UITest.Extension.IUITechnologyElement)">
            <summary>
            Gets the parent of the given element in the user interface hierarchy.
            </summary>
            <param name="element">The element whose parent is needed.</param>
            <returns>The parent element or null if the element passed is the
            root element in this technology.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyManager.GetNextSibling(Microsoft.VisualStudio.TestTools.UITest.Extension.IUITechnologyElement)">
            <summary>
            Gets the next sibling of the given element in the user interface hierarchy.
            </summary>
            <param name="element">The element whose next sibling is needed.</param>
            <returns>The next sibling or null if none is present.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyManager.GetPreviousSibling(Microsoft.VisualStudio.TestTools.UITest.Extension.IUITechnologyElement)">
            <summary>
            Gets the previous sibling of the given element in the user interface hierarchy.
            </summary>
            <param name="element">The element whose previous sibling is needed.</param>
            <returns>The previous sibling or null if none is present.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyManager.GetFocusedElement(System.IntPtr)">
            <summary>
            Gets the focused element i.e. the element that will receive keyboard events at this instance.
            </summary>
            <returns>The element that has the focus or null if there is no element with focus.</returns>
            <param name="handle">The handle of the window which has the focus.
            The element which has focus could be the window itself or a
            descendant of this window.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyManager.GetFocusedElement(System.Windows.Automation.AutomationElement)">
            <summary>
            Gets the focused element i.e. the element that will receive keyboard events at this instance.
            </summary>
            <returns>The element that has the focus or null if there is no element with focus.</returns>
            <param name="ceilingElement">The ceiling element which represents a flag above which the focused element should talk to another plugin</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyManager.AddEventHandler(Microsoft.VisualStudio.TestTools.UITest.Extension.IUITechnologyElement,Microsoft.VisualStudio.TestTools.UITest.Extension.UITestEventType,Microsoft.VisualStudio.TestTools.UITest.Extension.IUITestEventNotify)">
            <summary>
            Adds an event handler.
            </summary>
            <param name="element">The element and its descendants for which this event should be fired.</param>
            <param name="eventType">The type of event to listen to.</param>
            <param name="eventSink">The event sink which should be notified
            when the event occurs.</param>
            <returns>True if the eventType is supported and add is successful, false otherwise.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyManager.RemoveEventHandler(Microsoft.VisualStudio.TestTools.UITest.Extension.IUITechnologyElement,Microsoft.VisualStudio.TestTools.UITest.Extension.UITestEventType,Microsoft.VisualStudio.TestTools.UITest.Extension.IUITestEventNotify)">
            <summary>
            Removes an event handler.
            </summary>
            <param name="element">The element and its descendants for which this event should be removed.</param>
            <param name="eventType">The type of event to listen to.</param>
            <param name="eventSink">The event sink interface that was registered.</param>
            <returns>True if the eventType is supported and remove is successful, false otherwise.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyManager.GetSynchronizationWaiter(Microsoft.VisualStudio.TestTools.UITest.Extension.IUITechnologyElement,Microsoft.VisualStudio.TestTools.UITest.Extension.UITestEventType)">
            <summary>
            Gets a synchronization waiter for given UITestEventType on this element.
            </summary>
            <param name="element">The element to get synchronization waiter for.</param>
            <param name="eventType">The event for which synchronization waiter is required.</param>
            <returns>
            The synchronization waiter for specified event or null if event/waiter is not supported.
            </returns>
            <exception cref="T:System.NotSupportedException">
            This is an optional method and if the technology manager does not support
            this method it should throw System.NotSupportedException exception.
            </exception>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyManager.Search(System.Object,Microsoft.VisualStudio.TestTools.UITest.Extension.IUITechnologyElement,System.Int32)" -->
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyManager.ParseQueryId(System.String,System.Object@)">
            <summary>
            Parses the query element string and returns the parsedQueryIdCookie to be
            used later during Search() or MatchElement() or GetChildren() call for
            either searching or matching or getting children that has the same query string.
            </summary>
            <param name="queryElement">The query element string to parse.</param>
            <param name="parsedQueryIdCookie">The cookie of the parsed QueryId to be used later.</param>
            <returns>The remaining part of query element string that is not supported
            by this technology manager. The framework may or may not support the remaining part.</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyManager.MatchElement(Microsoft.VisualStudio.TestTools.UITest.Extension.IUITechnologyElement,System.Object,System.Boolean@)" -->
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyManager.GetLastInvocationInfo">
            <summary>
            Gets the information about the most recent invocation of the technology manager.
            </summary>
            <returns>Information about the most recent invocation of the technology manager.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyManager.CancelStep">
            <summary>
            Cancels any wait or search operation being performed by this technology manager
            because of call to WaitForReady or Search methods.
            </summary>
            <remarks>
            This call is made on another thread as both the WaitForReady and Search methods are blocking.
            </remarks>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyManager.ConvertToThisTechnology(Microsoft.VisualStudio.TestTools.UITest.Extension.IUITechnologyElement,System.Int32@)">
            <summary>
            Converts the given element of another technology to new element of this technology manager.
            This is used for operations like switching between hosted and hosting technologies.
            </summary>
            <param name="elementToConvert">The element to convert.</param>
            <param name="supportLevel">The level of support provided for the
            converted element by this technology manager.</param>
            <returns>The new converted element in this technology or null if no conversion is possible.</returns>
            <seealso cref="T:Microsoft.VisualStudio.TestTools.UITest.Extension.ControlSupport"/>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyManager.GetControlSupportLevel(System.IntPtr)">
            <summary>
            Gets the support level of this technology manager for the elements(s) in the given window.
            The framework uses this function to select the right technology manager for the element. 
            </summary>
            <param name="windowHandle">The window handle of the element.</param>
            <returns>An integer that indicates the level of support provided for the element
            by this technology manager. The higher the value the stronger the support.</returns>
            <seealso cref="T:Microsoft.VisualStudio.TestTools.UITest.Extension.ControlSupport"/>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyManager.GetControlSupportLevel(System.Windows.Automation.AutomationElement)">
            <summary>
            Gets the support level of this technology manager for the element corresponding to the given Automation Element.
            The framework uses this function to select the right technology manager for the element. 
            </summary>
            <param name="element">The automation element corresponding the element.</param>
            <returns>An integer that indicates the level of support provided for the element
            by this technology manager. The higher the value the stronger the support.</returns>
            <seealso cref="T:Microsoft.VisualStudio.TestTools.UITest.Extension.ControlSupport"/>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyManager.GetTechnologyManagerProperty(Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyManagerProperty)">
            <summary>
            Gets the given property of technology manager.
            </summary>
            <param name="propertyName">The property to get.</param>
            <returns>The value of the property.</returns>
            <exception cref="T:System.NotSupportedException">Throws System.NotSupportedException
            if the property is not supported.</exception>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyManager.SetTechnologyManagerProperty(Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyManagerProperty,System.Object)">
            <summary>
            Sets the given property of technology manager.
            </summary>
            <param name="propertyName">The property to set.</param>
            <param name="propertyValue">The property value to set.</param>
            <exception cref="T:System.NotSupportedException">Throws System.NotSupportedException
            if the property is not supported.</exception>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyManager.GetRootElement">
            <summary>
            Root Element at the current state of device
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyManager.AddGlobalEventHandler(Microsoft.VisualStudio.TestTools.UITest.Extension.UITestEventType,Microsoft.VisualStudio.TestTools.UITest.Extension.IUITestEventNotify)">
            <summary>
            Adds a global sink to notifiy actions raised by the plugin
            </summary>
            <param name="eventType">The type of event to listen to.</param>
            <param name="eventSink">Sink used for notification</param>
            <returns>True if successful, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyManager.RemoveGlobalEventHandler(Microsoft.VisualStudio.TestTools.UITest.Extension.UITestEventType,Microsoft.VisualStudio.TestTools.UITest.Extension.IUITestEventNotify)">
            <summary>
            Removes a global sink to notifiy actions raised by the plugin
            </summary>
            <param name="eventType">The type of event to remove.</param>
            <param name="eventSink">Sink used for notification</param>
            <returns>True if successful, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyManager.ProcessMouseEnter(System.IntPtr)">
            <summary>
            Processes the process mouse enter event for the window.
            </summary>
            <param name="handle">The window handle.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyManager.GetTechnologyManagerProperty``1(Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyManagerProperty)">
            <summary>
            Gets the property of UITechnologyManager.
            </summary>
            <typeparam name="T">Type of property expected.</typeparam>
            <param name="propertyName">The UITechnologyManagerProperty to get value for.</param>
            <returns>The value for property as type T.</returns>
            <exception cref="T:System.NotSupportedException">If the property does not exists.</exception>
            <exception cref="T:System.ArgumentException">If the property value is not of expected type.</exception>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyManager.AreEqual(Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyManager,Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyManager)">
            <summary>
            Checks if two technology managers are equal or not.
            The equals here means that they have the same technology name.
            </summary>
            <param name="manager1">The first technology manager.</param>
            <param name="manager2">The second technology manager.</param>
            <returns>True if both are equal else false.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyManager.AreEqual(System.String,System.String)">
            <summary>
            Checks if two technology managers are equal or not.
            The equals here means that they have the same technology name.
            </summary>
            <param name="technologyName1">The first technology manager name.</param>
            <param name="technologyName2">The second technology manager name.</param>
            <returns>True if both are equal else false.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyManager.GetTechnologyManagerProperty``1(Microsoft.VisualStudio.TestTools.UITest.Extension.IUITechnologyManager,Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyManagerProperty)">
            <summary>
            Gets the property of UITechnologyManager. If fails to get it returns the default value.
            </summary>
            <typeparam name="T">Type of property expected.</typeparam>
            <param name="techManager">The UITechnologyManager to get property from.</param>
            <param name="property">The UITechnologyManagerProperty to get value for.</param>
            <returns>The value for property as type T.</returns>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyManager.properties">
            <summary>
            Dictionary to store the properties.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyManager.GetWindowedAncestor(System.Windows.Automation.AutomationElement)">
            <summary>
            Get an ancestor element that has a window handle. This is assuming that every top Level element has a window handle.
            This is to preserve our existent extensibility for already existent plugins.
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyManager.TechnologyName">
            <summary>
            Gets the name of the technology supported by this technology manager.
            This is the same as the IUITechnologyElement.TechnologyName. 
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyManagerProperty">
            <summary>
            Enum to configure various properties of IUITechnologyManager.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyManagerProperty.None">
            <summary>
            No Option
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyManagerProperty.SearchSupported">
            <summary>
            Denotes a boolean property to indicate whether the technology manager
            has in-built support for search or not. If this returns true, the 
            framework calls IUITechnologyManager.Search to search for the element.
            </summary>
            <seealso cref="M:Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyManager.Search(System.Object,Microsoft.VisualStudio.TestTools.UITest.Extension.IUITechnologyElement,System.Int32)"/>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyManagerProperty.ContainerScrollingSupported">
            <summary>
            Denotes a boolean property to indicate whether the technology manager
            has in-built support for container scrolling or not. If this returns true,
            the framework calls IUITechnologyElement.EnsureVisibleByScrolling() on the
            container element to get the element into view before trying other ways to scroll.
            </summary>
            <seealso cref="M:Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyElement.EnsureVisibleByScrolling(System.Int32,System.Int32,System.Int32@,System.Int32@)"/>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyManagerProperty.WaitForReadyTimeout">
            <summary>
            Denotes a integer property to specify the wait for ready timeout in milliseconds.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyManagerProperty.SearchTimeout">
            <summary>
            Denotes a integer property to specify the control search timeout in milliseconds.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyManagerProperty.SmartMatchOptions">
            <summary>
            Denotes the smart matching options for the element search.
            Data-Type: SmartMatchOptions
            </summary>
            <seealso cref="F:Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyManagerProperty.SmartMatchOptions"/>
        </member>
        <!-- Badly formed XML comment ignored for member "F:Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyManagerProperty.ExactQueryIdMatch" -->
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyManagerProperty.WaitForReadyLevel">
            <summary>
            Denotes the level to use for the WaitForReady() calls.
            Data-Type: WaitForReadyLevel.
            <see cref="F:Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyManagerProperty.WaitForReadyLevel"/>
            <see cref="M:Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyElement.WaitForReady"/>
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyManagerProperty.NumberOfSearchRetriesForFailFast">
            <summary>
            Denotes the number of retries a technology manager should do before failing
            if PlaybackSettings.ShouldSearchFailFast is true.
            Setting to -1 indicates that search should be performed till timeout.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyManagerProperty.WindowLessTreeSwitchingSupported">
            <summary>
            Denotes a boolean property to indicate whether the technology manager
            has support for window less tree switching or not.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "F:Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyManagerProperty.DoNotGenerateVisibleOnlySearchConfiguration" -->
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyManagerProperty.FilterPropertiesForSearchSupported">
            <summary>
            Denotes a boolean property to indicate whether the technology manager
            has in-built support for filter properties for search or not.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyManagerProperty.NavigationTimeout">
            <summary>
            Denotes an integer indicating the timeout for navigating to the next element
            in any direction. Default is -1 which means, navigation is done as long as it takes.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "F:Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyManagerProperty.MergeSingleSessionObjects" -->
        <member name="T:Microsoft.VisualStudio.TestTools.UITest.Extension.SmartMatchOptions">
            <summary>
            Enumeration for smart match options
            </summary>
            <seealso cref="F:Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyManagerProperty.SmartMatchOptions"/>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.SmartMatchOptions.None">
            <summary>
            No smart match is used.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.SmartMatchOptions.TopLevelWindow">
            <summary>
            Use smart match for top-level windows only. If this is specified,
            the framework uses smart algorithm to intelligently match specified
            top-level window title with various nearly same top-level windows.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.SmartMatchOptions.Control">
            <summary>
            Use smart match for controls only. If this is specified, the
            framework uses smart algorithm to intelligently match controls
            that have slightly different property than specified in search string.
            To use smart match for both top-level windows and controls,
            specify TopLevelWindow | Control.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITest.Extension.ControlSupport">
            <summary>
            This specifies guiding values to return for the level of support for the element
            by the technology managers in functions like IUITechnologyManager.GetControlSupportLevel().
            </summary>
            <seealso cref="M:Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyManager.GetControlSupportLevel(System.IntPtr)"/>
            <seealso cref="M:Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyManager.GetControlSupportLevel(System.Windows.Automation.AutomationElement)"/>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.ControlSupport.Unknown">
            <summary>
            The support level for this control is unknown or not computed.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.ControlSupport.NoSupport">
            <summary>
            The technology manager does not support this element.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.ControlSupport.DefaultSupport">
            <summary>
            The technology manager supports all the elements by default.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.ControlSupport.NativeSupport">
            <summary>
            The technology manager has native support for a class of controls.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.ControlSupport.ControlSpecificSupport">
            <summary>
            The technology manager has support for a specific control.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITest.Extension.WaitForReadyLevel">
            <summary>
            WaitForReady Level to be used for WaitForReady() calls during search
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.WaitForReadyLevel.Disabled">
            <summary>
            WaitForReady is disabled
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.WaitForReadyLevel.UIThreadOnly">
            <summary>
            Only the UI thread or foreground thread is checked for WaitForReady() calls.
            This is the default option
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.WaitForReadyLevel.AllThreads">
            <summary>
            All threads including background threads are checked for WaitForReady() calls.
            This may be required if the application is making asynchronous calls that results in UI changes.
            However, this may slow down the search playback if target application has background threads
            that are often busy and should be used judiciously.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITest.Extension.IUITestService">
            <summary>
            Technology Abstraction Layer's interface
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.IUITestService.StartSession(System.Boolean)">
            <summary>
            Performs any initialization routines required by the plugins before starting
            the current session.
            </summary>
            <param name="recordingSession">True if this is recording session, false otherwise like for playback session.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.IUITestService.StopSession">
            <summary>
            Performs any cleanup routines required by the plugin for the current session.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.IUITestService.Initialize">
            <summary>
            Performs global initialization requied accross TAL instances.
            </summary>
            <remarks>This is called when the parent application starts and is intended to be used
            when the TAL and the underlying plugins need to setup components across TAL instances.
            </remarks>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.IUITestService.Cleanup">
            <summary>
            Performs global cleanup requied accross TAL instances. This method can be called 
            multiple times 
            </summary>
            <remarks>This is called when the parent application closes and is intended to be used
            when the TAL and the underlying plugins need to cleanup components across TAL instances.
            </remarks>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.IUITestService.GetTopLevelElementUsingWindowTree(Microsoft.VisualStudio.TestTools.UITest.Extension.IUITechnologyElement)">
            <summary>
            Gets the top level element of the UITechnologyElement using window tree.
            </summary>
            <param name="element">The element.</param>
            <returns>The top level UITechnologyElement.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.IUITestService.ConvertTechnologyElement(Microsoft.VisualStudio.TestTools.UITest.Extension.IUITechnologyElement)">
            <summary>
            Convert the given IUITechnologyElement into managed UITechnologyElement if
            the given IUITechnologyElement is of MSAA plugin.
            </summary>
            <param name="element">The IUITechnologyElement to convert.</param>
            <returns>If the given IUITechnologyElement is of unmanaged MSAA, then corresponding
            managed MSAA UITechnologyElement, else return the given IUITechnologyElement.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.IUITestService.GetElementFromPoint(System.Int32,System.Int32)">
            <summary>
            Returns UITechnologyElement at a given screen coordinates
            </summary>
            <param name="pointX">x-coordinate of the screen location</param>
            <param name="pointY">y-coordinate of the screen location</param>
            <returns>UITechnologyElement that contains information about the UI Element</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.IUITestService.GetChildren(Microsoft.VisualStudio.TestTools.UITest.Extension.IUITechnologyElement,System.Object)">
            <summary>
            Gets the enumerator for children of the given UITechnologyElement.
            </summary>
            <param name="element">The UITechnologyElement whose child enumerator is needed.</param>
            <param name="parsedQueryIdCookie">The cookie of previously parsed QueryId.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.IUITestService.GetElementFromNativeElement(System.String,System.Object)">
            <summary>
            Gets the element from the given native (underlying) element.
            </summary>
            <param name="technologyName">The name of the technology.</param>
            <param name="nativeElement">The native element (like IAccessible).</param>
            <returns>The UITechnologyElement from the native element.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.IUITestService.GetParent(Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyElement)">
            <summary>
            Gets the parent of the given recorded element in the user interface hierarchy.
            </summary>
            <param name="element">The child UITechnologyElement.</param>
            <returns>The parent UITechnologyElement. In case element is the root then 
            null is returned.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.IUITestService.GetFirstChild(Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyElement)">
            <summary>
            Gets the first child of the given recorded element in the user interface hierarchy.
            </summary>
            <param name="element">The parent UITechnologyElement.</param>
            <returns>The first child of the UITechnologyElement. null is none is present.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.IUITestService.GetNextSibling(Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyElement)">
            <summary>
            Gets the next sibling of the given recorded element in the user interface hierarchy.
            </summary>
            <param name="element">The UITechnologyElement.</param>
            <returns>The next sibling of the UITechnologyElement. null if none is present.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.IUITestService.GetPreviousSibling(Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyElement)">
            <summary>
            Gets the previous sibling of the given recorded element in the user interface hierarchy.
            </summary>
            <param name="element">The UITechnologyElement.</param>
            <returns>The previous sibling of the UITechnologyElement. null if none is present.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.IUITestService.GetFocusedElement">
            <summary>
            Get the currently fucused UITechnologyElement. This is the control that get the
            Keyboard events.
            </summary>
            <returns>UITechnologyElement that has the focus. Null if no element has focus</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.IUITestService.AddGlobalEventHandler(Microsoft.VisualStudio.TestTools.UITest.Extension.UITestEventType,Microsoft.VisualStudio.TestTools.UITest.Extension.IUITestEventNotify)">
            <summary>
            Adds a global sink to notifiy actions raised by all the plugins
            </summary>
            <param name="eventType">The type of event to listen to.</param>
            <param name="eventSink">Sink used for notification</param>
            <returns>True if successful, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.IUITestService.RemoveGlobalEventHandler(Microsoft.VisualStudio.TestTools.UITest.Extension.UITestEventType,Microsoft.VisualStudio.TestTools.UITest.Extension.IUITestEventNotify)">
            <summary>
            Removes a global sink to notifiy actions raised by all the plugins
            </summary>
            <param name="eventType">The type of event to remove.</param>
            <param name="eventSink">Sink used for notification</param>
            <returns>True if successful, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.IUITestService.AddEventHandler(Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyElement,Microsoft.VisualStudio.TestTools.UITest.Extension.UITestEventType,Microsoft.VisualStudio.TestTools.UITest.Extension.IUITestEventNotify)">
            <summary>
            Adds a event handler.
            </summary>
            <param name="element">The UI element and its descendants for which 
            this event should be fired.</param>
            <param name="eventType">The type of event to listen to.</param>
            <param name="eventSink">The event sink which should be notified when the
            event occurs.</param>
            <returns>True if successful, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.IUITestService.RemoveEventHandler(Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyElement,Microsoft.VisualStudio.TestTools.UITest.Extension.UITestEventType,Microsoft.VisualStudio.TestTools.UITest.Extension.IUITestEventNotify)">
            <summary>
            Removes a event handler.
            </summary>
            <param name="element">The UI element and its descendants for which 
            this event should be removed.</param>
            <param name="eventType">The type of event to listen to.</param>
            <param name="eventSink">The event sink interface that was registered.</param>
            <returns>True if successful, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.IUITestService.TechnologyManagerByName(System.String)">
            <summary>
            Get plugin by name.
            </summary>
            <param name="technologyName">The name of the technology.</param>
            <returns>Plugin instance supporting given technology name.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.IUITestService.GetExtensions``1">
            <summary>
            Get a list of extensions of a given type.
            </summary>
            <typeparam name="T">The type of extension manager needed.</typeparam>
            <returns>List of extensions of the specified type.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.IUITestService.AddExtensionToCoreTechnologyMapping(System.String,System.String)">
            <summary>
            Adds mapping between the extension technology and the core technology.
            </summary>
            <param name="extensionTechnologyName">Extension technology name.</param>
            <param name="coreTechnologyName">Core technology name.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.IUITestService.GetCoreTechnologyName(System.String)">
            <summary>
            Gets the core techology name for the given extension technology name.
            </summary>
            <param name="extensionTechnologyName">Extension technology name.</param>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.IUITestService.RootElement">
            <summary>
            Gets the root of the UI tree.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.IUITestService.PluginManager">
            <summary>
            Gets the current Plugin Manager
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.IUITestService.EatNavigationTimeoutException">
            <summary>
            Being used by CUIT to track NavigationTimedout
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.IUITestService.IsSessionStarted">
            <summary>
            Gets the value indicating if session has started
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITest.Extension.IUniformResourceLocator">
            <summary>
            Interface used for getting the URL of pinned site shortcuts.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITest.Extension.UITestExtensionPackage">
            <summary>
            Represents an abstract class that enables incorporating third party extensions into
            the Visual Studio environment for Coded UI Test.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.UITestExtensionPackage.GetService(System.Type)">
            <summary>
            Gets the service object of the specified type.
            </summary>
            <param name="serviceType">An object that specifies the type of service object to get.</param>
            <returns>
            A service object of type serviceType or null if there is no service object of type serviceType.
            </returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.UITestExtensionPackage.Dispose">
            <summary>
            Performs application-defined tasks of cleaning up resources.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.UITestExtensionPackage.PackageName">
            <summary>
            Gets the name of the package.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.UITestExtensionPackage.PackageDescription">
            <summary>
            Gets the short description of the package.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.UITestExtensionPackage.PackageVersion">
            <summary>
            Gets the version of the package.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.UITestExtensionPackage.PackageVendor">
            <summary>
            Gets the name of the vendor of the package.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.UITestExtensionPackage.VSVersion">
            <summary>
            Gets the version of Visual Studio supported by this package.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.IUISynchronizationWaiter.Wait(System.Int32,System.Object)">
            <summary>
            To wait on an event
            </summary>
            <param name="timeout">The amount of time to wait before the event fires</param>
            <param name="data">data about event to wait on. Waiter might return 
            immidiatly based on data</param>
            <returns>The success of the event fired or data is not appropriate for wait.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.IUISynchronizationWaiter.Remove">
            <summary>
            Disposes the Waiter
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.IUISynchronizationWaiter.Reset">
            <summary>
            Reset all the events.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITesting.PropertyExpression">
            <summary>
            PropertyExpression class is used to represent a key/value pair of search properties
            with an optional PropertyExpressionOperator
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITesting.PropertyExpression.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITesting.PropertyExpression.#ctor(System.String,System.String)">
            <summary>
            Construct PropertyExpression from property name and value. 
            </summary>
            <param name="propertyName">Name of the property</param>
            <param name="propertyValue">Value of the property</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITesting.PropertyExpression.#ctor(System.String,System.String,Microsoft.VisualStudio.TestTools.UITesting.PropertyExpressionOperator)">
            <summary>
            Construct PropertyExpression from property name, value and operator.
            </summary>
            <param name="propertyName">Name of the property</param>
            <param name="propertyValue">Value of the property</param>
            <param name="propertyOperator">Operator to use for matching value.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITesting.PropertyExpression.Clone">
            <summary>
            Returns a PropertyExpression which is a clone of the current instance. 
            </summary>
            <returns>An object which is a clone of the current instance.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITesting.PropertyExpression.Equals(System.Object)">
            <summary>
            Determines if the PropertyExpression is equal to the specified object.
            </summary>
            <param name="other">The other object for equals comparison.</param>
            <returns>True if the other object is equal to this PropertyExpression, false otherwise.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITesting.PropertyExpression.GetHashCode">
            <summary>
            Gets the hashcode of the property expression.
            </summary>
            <returns>Hashcode of the property expression</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITesting.PropertyExpression.ToString">
            <summary>
            Returns a string representation of the object.
            </summary>
            <returns>String representation of the object.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITesting.PropertyExpression.#ctor(Microsoft.VisualStudio.TestTools.UITest.Extension.PropertyCondition)">
            <summary>
            Construct PropertyExpression from PropertyCondition
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITesting.PropertyExpression.ToPropertyCondition">
            <summary>
            Returns corresponding PropertyCondition for this PropertyExpression
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITesting.PropertyExpression.FirePropertyChange(System.String)">
            <summary>
            Fires property changed event.
            </summary>
            <param name="changedPropertyName"></param>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITesting.PropertyExpression.PropertyName">
            <summary>
            Gets or sets the property name. 
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITesting.PropertyExpression.PropertyValue">
            <summary>
            Gets or sets the property value. 
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITesting.PropertyExpression.PropertyOperator">
            <summary>
            Gets or sets the PropertyExpressionOperator. 
            </summary>
        </member>
        <member name="E:Microsoft.VisualStudio.TestTools.UITesting.PropertyExpression.PropertyChanged">
            <summary>
            Notifies any change in the PropertyName, PropertyValue and PropertyOperator properties.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITesting.PropertyExpressionOperator">
            <summary>
            The operator to use for matching the property value.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITesting.PropertyExpressionOperator.EqualTo">
            <summary>
            The target and property value are equal.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITesting.PropertyExpressionOperator.Contains">
            <summary>
            The property value contains the target.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITesting.PropertyExpressionCollection">
            <summary>
            Contains searchable properties of UITestControl. 
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITesting.PropertyExpressionCollection.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITesting.PropertyExpressionCollection.#ctor(System.Collections.Generic.List{Microsoft.VisualStudio.TestTools.UITest.Extension.PropertyCondition})">
            <summary>
            Construct collection from property condition list.
            </summary>
            <param name="list"></param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITesting.PropertyExpressionCollection.Add(System.String,System.String)">
            <summary>
            Add new property, value pair to property collection.
            If the property with same name already exists, then updates its value.
            </summary>
            <param name="propertyName">The name of the property.</param>
            <param name="propertyValue">Value of the property.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITesting.PropertyExpressionCollection.Add(System.String,System.String,Microsoft.VisualStudio.TestTools.UITesting.PropertyExpressionOperator)">
            <summary>
            Add new property, value pair and a PropertyExpressionOperator to property collection.
            If the property with same name already exists, then updates its value.
            </summary>
            <param name="propertyName">The name of the property.</param>
            <param name="propertyValue">Value of the property.</param>
            <param name="conditionOperator">The opearator e.g. Contains.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITesting.PropertyExpressionCollection.Add(Microsoft.VisualStudio.TestTools.UITesting.PropertyExpression)">
            <summary>
            Add new PropertyExpression to the collection.
            If the property with same name already exists, then updates its value.
            </summary>
            <param name="propertyExpression">PropertyExpression to be added.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITesting.PropertyExpressionCollection.Add(System.String[])">
            <summary>
            Add multiple property, value pairs to property collection.
            If the property with same name already exists, then updates its value.
            </summary>
            <param name="nameValuePairs">Name value pairs to be added.</param>
            <remarks>
            e.g. PropertyExpressionCollection collection = new PropertyExpressionCollection();
                 collection.Add("ControlType", "Hyperlink", "Id", "foo");
            </remarks>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITesting.PropertyExpressionCollection.AddRange(Microsoft.VisualStudio.TestTools.UITesting.PropertyExpression[])">
            <summary>
            Add a range of PropertyExpressions to the collection.
            If the property with same name already exists, then updates its value.
            </summary>
            <param name="propertyExpressions">PropertyExpressions to be added</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITesting.PropertyExpressionCollection.AddRange(Microsoft.VisualStudio.TestTools.UITesting.PropertyExpressionCollection)">
            <summary>
            Add a range of PropertyExpressions from another collection.
            If the property with same name already exists, then updates its value.
            </summary>
            <param name="propertyExpressions">PropertyExpressions to be added</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITesting.PropertyExpressionCollection.Find(System.String)">
            <summary>
            Returns the assiociated PropertyExpression in the collection for the given property name
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITesting.PropertyExpressionCollection.Contains(Microsoft.VisualStudio.TestTools.UITesting.PropertyExpression)">
            <summary>
            Checks whether PropertyExpression with same name, value and operator is present in the collection
            </summary>
            <param name="item">Item to check for presence</param>
            <returns>True if present.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITesting.PropertyExpressionCollection.Contains(System.String)">
            <summary>
            Check whether the given property is present in the collection
            </summary>
            <param name="propertyName">Property name to be found.</param>
            <returns>True if present.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITesting.PropertyExpressionCollection.CopyTo(Microsoft.VisualStudio.TestTools.UITesting.PropertyExpression[],System.Int32)">
            <summary>
            Copy collections to a PropertyExpression array.
            </summary>
            <param name="expressionArray">Array to be copied to.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITesting.PropertyExpressionCollection.Remove(Microsoft.VisualStudio.TestTools.UITesting.PropertyExpression)">
            <summary>
            Removes the PropertyExpression with the same name, value and operator from the collection
            </summary>
            <param name="propertyExpression">PropertyExpression to remove</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITesting.PropertyExpressionCollection.Remove(System.String)">
            <summary>
            Remove PropertyExpression with the given name from the collection.
            </summary>
            <param name="propertyName">Property name to remove.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITesting.PropertyExpressionCollection.Equals(System.Object)">
            <summary>
            Object.Equals override
            </summary>
            <param name="other">The other object for equals comparison.</param>
            <returns>True if the other object is equal to this PropertyExpressionCollection, false otherwise.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITesting.PropertyExpressionCollection.GetHashCode">
            <summary>
            Hashcode of the PropertyExpressionCollection
            </summary>
            <returns>Hashcode for the PropertyExpressionCollection</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITesting.PropertyExpressionCollection.GetEnumerator">
            <summary>
            Gets an enumerator to iterate through the collection
            </summary>
            <returns>IEnumerator reference for iteration</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITesting.PropertyExpressionCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Gets an enumerator to iterate through the collection
            </summary>
            <returns>IEnumerator reference for iteration</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITesting.PropertyExpressionCollection.Clear">
            <summary>
            Removes all objects.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITesting.PropertyExpressionCollection.GetProperties(Microsoft.VisualStudio.TestTools.UITest.Extension.IQueryCondition,Microsoft.VisualStudio.TestTools.UITesting.PropertyExpressionCollection@,Microsoft.VisualStudio.TestTools.UITesting.PropertyExpressionCollection@)">
            <summary>
            Gets primary and secondary properties out of the query condition.
            </summary>
            <param name="queryConditions">Query condition to be processed.</param>
            <param name="primaryProperties"></param>
            <param name="secondaryProperties"></param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITesting.PropertyExpressionCollection.ToPropertyConditionArray">
            <summary>
            Return an array of property conditions from PropertyExpressionCollection
            </summary>
            <param name="propertyExpressions"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITesting.PropertyExpressionCollection.GetProperties(Microsoft.VisualStudio.TestTools.UITest.Extension.IQueryCondition,Microsoft.VisualStudio.TestTools.UITesting.PropertyExpressionCollection,Microsoft.VisualStudio.TestTools.UITesting.PropertyExpressionCollection,System.Boolean)">
            <summary>
            Helper methods to get primary and secondary properties from query condition
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITesting.PropertyExpressionCollection.GetProperties(Microsoft.VisualStudio.TestTools.UITest.Extension.PropertyCondition,Microsoft.VisualStudio.TestTools.UITesting.PropertyExpressionCollection,Microsoft.VisualStudio.TestTools.UITesting.PropertyExpressionCollection,System.Boolean)">
            <summary>
            Helper method to populate collection with a property condition
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITesting.PropertyExpressionCollection.OnPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Listen for property changed of PropertyExpression.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITesting.PropertyExpressionCollection.FireCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Fires CollectionChanged event.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITesting.PropertyExpressionCollection.Item(System.String)">
            <summary>
            Gets or sets the property value for search.
            </summary>
            <param name="propertyName">The property name.</param>
            <returns>Property value.</returns>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITesting.PropertyExpressionCollection.IsReadOnly">
            <summary>
            Gets if the collection is readonly
            </summary>
        </member>
        <member name="E:Microsoft.VisualStudio.TestTools.UITesting.PropertyExpressionCollection.CollectionChanged">
            <summary>
            Event fired when this collection is changed.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITesting.PropertyExpressionCollection.Count">
            <summary>
            Gets the number of elements instance.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITest.Extension.AndCondition">
            <summary>
            Defines the AndCondition class
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITest.Extension.QueryCondition">
            <summary>
            Abstract class implementation for IQueryCondition.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITest.Extension.IQueryCondition">
            <summary>
            Internally used interface definition for a Query Condition
            Do not implement this interface directly, instead use QueryCondition class.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.IQueryCondition.Match(Microsoft.VisualStudio.TestTools.UITest.Extension.IUITechnologyElement)">
            <summary>
            Checks if the element matches the current condition
            </summary>
            <param name="element">Element Node to be checked against the condition</param>
            <returns>True if the element satisfies the condition</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.IQueryCondition.GetPropertyValue(System.String)">
            <summary>
            Gets the value of the property if it exists in the query condition
            </summary>
            <param name="nameOfProperty">Name of the property for which value is needed</param>
            <returns>Value of the property if it exists, else null</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.IQueryCondition.BindParameters(Microsoft.VisualStudio.TestTools.UITest.Extension.ValueMap)">
            <summary>
            Bind parameters used in the properties of the object
            </summary>
            <param name="valueMap">value map</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.IQueryCondition.ParameterizeProperty(System.String,System.String)">
            <summary>
            Paramterize a property of the object.
            </summary>
            <param name="nameOfProperty">The name of the property to be parameterized.</param>
            <param name="nameOfParameter">The parameter name with which to parameterize.</param>
            <returns>true if parameterization is successful.</returns>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.IQueryCondition.Name">
            <summary>
            Name of the condition
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.IQueryCondition.Conditions">
            <summary>
            List of nested conditions
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.QueryCondition.#ctor">
            <summary>
            For serialization
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.QueryCondition.#ctor(Microsoft.VisualStudio.TestTools.UITest.Extension.IQueryCondition[])">
            <summary>
            Constructor
            </summary>
            <param name="conditions">List of nested conditions</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.QueryCondition.Match(Microsoft.VisualStudio.TestTools.UITest.Extension.IUITechnologyElement)">
            <summary>
            Checks if the element matches the current condition
            </summary>
            <param name="element">Element Node to be checked against the condition</param>
            <returns>True if the element satisfies the condition</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.QueryCondition.GetPropertyValue(System.String)">
            <summary>
            Gets the value of the property if it exists in the query condition
            </summary>
            <param name="nameOfProperty">Name of the property for which value is needed</param>
            <returns>Value of the property if it exists, else null</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.QueryCondition.BindParameters(Microsoft.VisualStudio.TestTools.UITest.Extension.ValueMap)">
            <summary>
            Bind parameters used in the properties of the object
            </summary>
            <param name="valueMap">value map</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.QueryCondition.ParameterizeProperty(System.String,System.String)">
            <summary>
            Paramterize a property of the object.
            </summary>
            <param name="nameOfProperty">The name of the property to be parameterized.</param>
            <param name="nameOfParameter">The parameter name with which to parameterize.</param>
            <returns>true if parameterization is successful.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.QueryCondition.Equals(System.Object)">
            <summary>
            Object.Equals override
            </summary>
            <param name="other">The other object for equals comparison.</param>
            <returns>True if the other object is equal to this QueryCondition, false otherwise.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.QueryCondition.GetHashCode">
            <summary>
            Hashcode of the QueryCondition
            </summary>
            <returns>Hashcode for the QueryCondition</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.QueryCondition.ToString">
            <summary>
            String representation of QueryCondition.
            </summary>
            <returns>String representation of QueryCondition.</returns>
            <remarks>Overridden and made abstract to force each derive class to implement it.</remarks>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.QueryCondition.queryConditions">
            <summary>
            Nested conditions
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.QueryCondition.name">
            <summary>
            Condition Name
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.QueryCondition.Name">
            <summary>
            Condition Name
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.QueryCondition.Conditions">
            <summary>
            Nested Conditions
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.QueryCondition.ConditionsWrapper">
            <summary>
            WRapper over the Conditions property used for
            serialization.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.AndCondition.#ctor">
            <summary>
            For serialiazation
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.AndCondition.#ctor(Microsoft.VisualStudio.TestTools.UITest.Extension.IQueryCondition[])">
            <summary>
            Constructor that just calls the base QueryCondition cons
            </summary>
            <param name="conditions">Query Conditions</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.AndCondition.Match(Microsoft.VisualStudio.TestTools.UITest.Extension.IUITechnologyElement)">
            <summary>
            Checks if the element matches the current condition
            </summary>
            <param name="element">Element Node to be checked against the condition</param>
            <returns>True if the element satisfies the condition</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Microsoft.VisualStudio.TestTools.UITest.Extension.AndCondition.ToString" -->
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.AndCondition.Parse(System.String)">
            <summary>
            Parse the string to get the AndCondition.
            If the string is not proper, this will throw ArgumentException.
            </summary>
            <param name="queryElement">string representation of condition</param>
            <returns>The constructed AndCondition.</returns>
            <exception cref="T:System.ArgumentNullException">
            If the queryElement string is null or empty.
            </exception>
            <exception cref="T:System.ArgumentException">
            If the queryElement string does not match the expected pattern.
            </exception>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.AndCondition.ConditionDelimiter">
            <summary>
            Delimiter between the nested conditions within an AndCondition.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.AndCondition.ConditionDelimiterRegex">
            <summary>
            Delimter between the primary conditions
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITest.Extension.AndConditionBuilder">
            <summary>
            Simple utility class to build AndCondition out of individual conditions.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.AndConditionBuilder.Append(Microsoft.VisualStudio.TestTools.UITest.Extension.IQueryCondition)">
            <summary>
            Appends a condition to the list used for building AndCondition.
            </summary>
            <param name="condition">The condition to add.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.AndConditionBuilder.Append(System.String,System.Object)">
            <summary>
            Appends a new property condition to the list used for building AndCondition.
            </summary>
            <param name="propertyName">The name of the property.</param>
            <param name="propertyValue">The value of the property.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.AndConditionBuilder.Build">
            <summary>
            Builds the AndCondition out of the list of conditions collected so far.
            </summary>
            <returns>The AndContion built.</returns>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.AndConditionBuilder.Count">
            <summary>
            Gets the number of conditions already appended.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITest.Extension.FilterCondition">
            <summary>
            Defines the FilterCondition class
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.FilterCondition.#ctor">
            <summary>
            For Serialiation
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.FilterCondition.#ctor(Microsoft.VisualStudio.TestTools.UITest.Extension.IQueryCondition[])">
            <summary>
            Constructor that just calls the base QueryCondition cons
            </summary>
            <param name="conditions">Conditions</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.FilterCondition.Match(Microsoft.VisualStudio.TestTools.UITest.Extension.IUITechnologyElement)">
            <summary>
            Checks if the element matches the current condition
            </summary>
            <param name="element">Element Node to be checked against the condition</param>
            <returns>True if the element satisfies the condition</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.FilterCondition.ToString">
            <summary>
            Returns a string representation of the object.
            TODO:Close on the string format.
            </summary>
            <returns>String representation of the object.</returns>
            <remarks>Generates a string similar to:-
            FilterCondition(accesskey='ALT+t', type='singleline', tabindex='0')
            </remarks>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.FilterCondition.Parse(System.String)">
            <summary>
            Parse the string to get the FilterCondition.
            If the string is not proper, this will throw ArgumentException.
            </summary>
            <param name="queryElement">The string representation of condition.</param>
            <returns>The constructed FilterCondition.</returns>
            <exception cref="T:System.ArgumentNullException">
            If the queryElement string is null or empty.
            </exception>
            <exception cref="T:System.ArgumentException">
            If the queryElement string does not match the expected pattern.
            </exception>
            <remarks>Presently, this supports only PropertyCondition.</remarks>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.FilterCondition.TryParse(System.String,Microsoft.VisualStudio.TestTools.UITest.Extension.FilterCondition@)">
            <summary>
            Try and parse a string as FilterCondition Condition object
            </summary>
            <param name="queryElement">string representation of condition</param>
            <param name="condition">Parsed FilterCondition condition</param>
            <returns>true if Parse succeeds</returns>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.FilterCondition.ConditionDelimiter">
            <summary>
            Delimiter between the nested conditions within an FilterCondition condition.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "F:Microsoft.VisualStudio.TestTools.UITest.Extension.FilterCondition.OrderedMatchFormat" -->
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.FilterCondition.ConditionDelimiterRegex">
            <summary>
            Regex to match the condition delimiter
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITest.Extension.PropertyCondition">
            <summary>
            Defines the PropertyCondition class
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.PropertyCondition.MaxPropertyValueLength">
            <summary>
            Maximum length of inner Text to be used in identification.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.PropertyCondition.XmlTextEscapeString">
            <summary>
            Escape string for the ValueWrapper property that is of type
            XmlText
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.PropertyCondition.EqualToOperatorString">
            <summary>
            String representation of EqualTo operator.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.PropertyCondition.ContainsOperatorString">
            <summary>
            String representation of EqualTo operator.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "F:Microsoft.VisualStudio.TestTools.UITest.Extension.PropertyCondition.PropertyValueStartEndMarker" -->
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.PropertyCondition.PropertyMetaCharacterEscapeChar">
            <summary>
            Charchter (\) used to Escape MetaChar in the Value string.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.PropertyCondition.#ctor">
            <summary>
            For Serialization
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.PropertyCondition.#ctor(System.String,System.Object)">
            <summary>
            Constructor that assigns the name and value
            </summary>
            <param name="name">Name of the property</param>
            <param name="value">Value of the property</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.PropertyCondition.#ctor(System.String,System.Object,Microsoft.VisualStudio.TestTools.UITest.Extension.PropertyConditionOperator)">
            <summary>
            Constructor that assigns the name and value
            </summary>
            <param name="name">Name of the property</param>
            <param name="value">Value of the property</param>
            <param name="op">Operator for matching</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.PropertyCondition.Match(Microsoft.VisualStudio.TestTools.UITest.Extension.IUITechnologyElement)">
            <summary>
            Checks if the element matches the current condition
            </summary>
            <param name="element">Element Node to be checked against the condition</param>
            <returns>True if the element satisfies the condition</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.PropertyCondition.GetPropertyValue(System.String)">
            <summary>
            Gets the value of the property if it exists in the query condition
            </summary>
            <param name="nameOfProperty">Name of the property for which value is needed</param>
            <returns>Value of the property if it exists, else null</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.PropertyCondition.BindParameters(Microsoft.VisualStudio.TestTools.UITest.Extension.ValueMap)">
            <summary>
            Bind parameters used in the properties of the object
            </summary>
            <param name="valueMap">value map</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.PropertyCondition.ParameterizeProperty(System.String,System.String)">
            <summary>
            Paramterize a property of the object.
            </summary>
            <param name="nameOfProperty">The name of the property to be parameterized.</param>
            <param name="nameOfParameter">The parameter name with which to parameterize.</param>
            <returns>true if parameterization is done successfully.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.PropertyCondition.Equals(System.Object)">
            <summary>
            Object.Equals override
            </summary>
            <param name="other">The other object for equals comparison.</param>
            <returns>True if the other object is equal to this PropertyCondition, false otherwise.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.PropertyCondition.GetHashCode">
            <summary>
            Hashcode of the QueryCondition
            </summary>
            <returns>Hashcode for the QueryCondition</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.PropertyCondition.ToString">
            <summary>
            Returns a string representation of the object.
            </summary>
            <returns>String representation of the object.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.PropertyCondition.Escape(System.String)">
            <summary>
            Puts escape character '\' before any special character encounterd in string. 
            </summary>
            <param name="input">string to escape</param>
            <returns>escaped string</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.PropertyCondition.Unescape(System.String)">
            <summary>
            removes escape character '\' before any special character encounterd in string. 
            </summary>
            <param name="input">string to UnEscape</param>
            <returns>UnEscaped string</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.PropertyCondition.Parse(System.String)">
            <summary>
            Parse the string to get the PropertyCondition.
            If the string is not proper, this will throw ArgumentException.
            </summary>
            <param name="queryElement">string representation of condition</param>
            <returns>The constructed PropertyCondition.</returns>
            <exception cref="T:System.ArgumentNullException">
            If the queryElement string is null or empty.
            </exception>
            <exception cref="T:System.ArgumentException">
            If the queryElement string does not match the expected pattern.
            </exception>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.PropertyCondition.ParseList(System.String,System.String,System.Text.RegularExpressions.Regex)">
            <summary>
            Parse the string to get the list of PropertyCondition.
            If the string is not proper, this will throw ArgumentException.
            </summary>
            <param name="queryElement">string representation of condition</param>
            <returns>The constructed list of PropertyCondition.</returns>
            <exception cref="T:System.ArgumentNullException">
            If the queryElement string is null or empty.
            </exception>
            <exception cref="T:System.ArgumentException">
            If the queryElement string does not match the expected pattern.
            </exception>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.PropertyCondition.IsMetachar(System.Char)">
            <summary>
            Returns true if input char is a MetaChar.
            consider only value 128 for Metachars
            </summary>
            <param name="ch">input char</param>
            <returns>true if input char is a MetaChar</returns>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.PropertyCondition.propertyName">
            <summary>
            Name of the property
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.PropertyCondition.parameterName">
            <summary>
            The parameter name with which to parameterize.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.PropertyCondition.propertyValue">
            <summary>
            Value of the property
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.PropertyCondition.propertyOperator">
            <summary>
            The operator for matching the property
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.PropertyCondition.category">
            <summary>
            defines catagory of a charachter.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.PropertyCondition.PropertyRegex">
            <summary>
            Regex for the property token format..(eg) Name = 'Text'
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.PropertyCondition.PropertyName">
            <summary>
            Name of the property
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.PropertyCondition.ParameterName">
            <summary>
            The name of parameter with which to parameterize
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.PropertyCondition.Value">
            <summary>
            Value of the property
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.PropertyCondition.ValueWrapper">
            <summary>
            Wrapper for Value of the property. Since blank spaces are 
            normalized (and eaten up) for XmlText during deserialization we need 
            to escape the "Value" to preserve the spaces. We prepend a "\" at the
            beginning of strings that contain only empty spaces or start with a "\".
            During set we remove the starting charecter if it is a "\".
            TODO: This is a hack. The right solution is to remove the XmlText
            attribute and treat this as xml data. This needs to be done at the time
            of developing the customserializer for UIMap.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.PropertyCondition.PropertyOperator">
            <summary>
            Operator of the property
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.PropertyCondition.PropertyOperatorWrapper">
            <summary>
            Wrapper for Operator of the property.
            This is done to prevent writing Operator when it is default (EqualTo).
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.PropertyCondition.Category">
            <summary>
            defines catagory of a charachter.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITest.Extension.PropertyConditionOperator">
            <summary>
            The operator to use for matching the property value.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.PropertyConditionOperator.EqualTo">
            <summary>
            The target and property value are equal.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.PropertyConditionOperator.Contains">
            <summary>
            The property value contains the target.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITest.Extension.IQueryElement">
            <summary>
            Internally used interface definition for the Query Element
            Do not implement this interface directly, instead use QueryElement class.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.IQueryElement.SearchConfigurations">
            <summary>
            A list of atrributes to help in search.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.IQueryElement.Ancestor">
            <summary>
            Query Elements that provide additonal information
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.IQueryElement.Condition">
            <summary>
            Condition for Query Element
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITest.Extension.QueryElement">
            <summary>
            Definition for the Query Element
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.QueryElement.#ctor">
            <summary>
            Defaullt Constructor
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.QueryElement.Equals(System.Object)">
            <summary>
            Object.Equals override
            </summary>
            <param name="other">The other object for equals comparison.</param>
            <returns>True if the other object is equal to this QueryElement, false otherwise.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.QueryElement.GetHashCode">
            <summary>
            Hashcode of the QueryElement
            </summary>
            <returns>Hashcode for the QueryElement</returns>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.QueryElement.condition">
            <summary>
            Condition for the Query Element
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.QueryElement.ancestorNode">
            <summary>
            Query Elements that provide additonal information
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.QueryElement.searchConfigurations">
            <summary>
            A list of atrributes to help in search.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.QueryElement.SearchConfigurations">
            <summary>
            A list of atrributes to help in search.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.QueryElement.Ancestor">
            <summary>
            Query Elements that provide additonal information
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.QueryElement.Condition">
            <summary>
            Condition used to evaluate the Query Element
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITest.Extension.SearchConfiguration">
            <summary>
            Helper class for Search Configuration
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.SearchConfiguration.ConfigurationExists(System.Collections.Generic.IEnumerable{System.String},System.String)">
            <summary>
            Helper method to check for a search configuration in a list
            </summary>
            <param name="configList">List of search configuration</param>
            <param name="configNameToSearch">Configuration to search</param>
            <returns>True if the configuration exists</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.SearchConfiguration.AreEqual(System.String[],System.String[])">
            <summary>
            Helper function to match two configuration list
            </summary>
            <param name="configList">Configuration List</param>
            <param name="configListToMatch">Configuration List</param>
            <returns>True if both match</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.SearchConfiguration.NameEquals(System.String,System.String)">
            <summary>
            Comparison method for two search configuration names
            </summary>
            <param name="configName1">Search Configuration</param>
            <param name="configName2">Search Configuration</param>
            <returns>True if both are same</returns>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.SearchConfiguration.VisibleOnly">
            <summary>
            Visible Only search configuration.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.SearchConfiguration.DisambiguateChild">
            <summary>
            Configuration to return the child node when both the parent and
            child have same properties
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.SearchConfiguration.ExpandWhileSearching">
            <summary>
            Expand the container control before searching in its heirarchy
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.SearchConfiguration.NextSibling">
            <summary>
            Configuration to Search in the sibling heirarchy of the container 
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.SearchConfiguration.AlwaysSearch">
            <summary>
            Configuration for playback not to use cached control for performing any action.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITest.Extension.UITestExtensionPackageBase">
            <summary>
            The abstract base class for IUIExtensionPackage interface.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.UITestExtensionPackageBase.GetService(System.Type)">
            <summary>
            Gets the service object of the specified type.
            </summary>
            <param name="serviceType">An object that specifies the type of service object to get.</param>
            <returns>
            A service object of type serviceType or null if there is no service object of type serviceType.
            </returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.UITestExtensionPackageBase.Dispose">
            <summary>
            Disposes the package and all the services provided by this package.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.UITestExtensionPackageBase.#ctor(System.String,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="extensionName">The name of the extension package.</param>
            <param name="extensionDescription">The description of the extension package.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.UITestExtensionPackageBase.#ctor(System.String,System.String,System.Version,System.String,System.Version)">
            <summary>
            Constructor
            </summary>
            <param name="extensionName">The name of the extension package.</param>
            <param name="extensionDescription">The description of the extension package.</param>
            <param name="extensionVersion">The version of the extension package.</param>
            <param name="vendorName">The vendor name of the extension package.</param>
            <param name="vsVersionSupported">The Visual Studio version supported by the extension package.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.UITestExtensionPackageBase.AddService(System.Type,System.Object)">
            <summary>
            Adds a service of type serviceType.
            </summary>
            <param name="serviceType">The type of the service.</param>
            <param name="service">The service.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.UITestExtensionPackageBase.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.UITestExtensionPackageBase.name">
            <summary>
            Name of the package.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.UITestExtensionPackageBase.description">
            <summary>
            Short description of the package.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.UITestExtensionPackageBase.version">
            <summary>
            Version of the package.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.UITestExtensionPackageBase.vendor">
            <summary>
            Vendor name.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.UITestExtensionPackageBase.vsVersion">
            <summary>
            The version of Visual Studio supported by this package.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.UITestExtensionPackageBase.supportedServices">
            <summary>
            The dictionary of services supported by this package.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.UITestExtensionPackageBase.PackageName">
            <summary>
            Gets the name of the package.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.UITestExtensionPackageBase.PackageDescription">
            <summary>
            Gets the description of the package.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.UITestExtensionPackageBase.PackageVersion">
            <summary>
            Gets the version of the package.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.UITestExtensionPackageBase.PackageVendor">
            <summary>
            Gets the vendor name of the package.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.UITestExtensionPackageBase.VSVersion">
            <summary>
            Gets the version of Visual Studio supported by this plugin.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITest.Extension.UITestExtensionPackageAttribute">
            <summary>
            The attribute that has to be applied to assembly that implements UITest
            extension package to help the UITest discover the extension package.
            </summary>
            <remarks>
            This is mainly needs to speed up the discovery of extension packages.
            </remarks>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.UITestExtensionPackageAttribute.#ctor(System.String,System.Type)">
            <summary>
            Constructor.
            </summary>
            <param name="name">The name of the attribute.</param>
            <param name="extensionPackageType">The type that implements UITestExtensionPackage abstract class.</param>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.UITestExtensionPackageAttribute.name">
            <summary>
            The name of the attribute.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.UITestExtensionPackageAttribute.extensionPackageType">
            <summary>
            The type that implements the IUITestPackage interface
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.UITestExtensionPackageAttribute.Name">
            <summary>
            The name of the package.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.UITestExtensionPackageAttribute.ExtensionPackageType">
            <summary>
            The type in the assembly that implements the UITestExtensionPackage.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITest.Extension.UITestMediaEventInfo">
            <summary>
            Represents event arguments for action on media controls.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.UITestMediaEventInfo.#ctor">
            <summary>
            Create new instance of MediaEventInfo
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.UITestMediaEventInfo.#ctor(Microsoft.VisualStudio.TestTools.UITest.Extension.MediaActionType,System.Object)">
            <summary>
            Create new instance of MediaEventInfo with the event type and event arguments.
            </summary>
            <param name="actionType">Type of media action</param>
            <param name="value">Value of action</param>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.UITestMediaEventInfo.ActionType">
            <summary>
            Gets or sets the media event type.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.UITestMediaEventInfo.Value">
            <summary>
            Gets or sets the value.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITest.Extension.MediaActionType">
            <summary>
            Events supported by Media controls.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.MediaActionType.Play">
            <summary>
            Media is played
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.MediaActionType.Pause">
            <summary>
            Media is paused
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.MediaActionType.Seek">
            <summary>
            Set the time
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.MediaActionType.VolumeChange">
            <summary>
            Set the volume
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.MediaActionType.Mute">
            <summary>
            Mute the media
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.MediaActionType.None">
            <summary>
            Default value
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITest.Extension.Utility.CommonPluginResources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.Utility.CommonPluginResources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.Utility.CommonPluginResources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.Utility.CommonPluginResources.AccessDenied">
            <summary>
              Looks up a localized string similar to Access is denied..
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITest.Extension.CommaListBuilder">
            <summary>
            Utility class to convert list of string values into one comma
            separated string and vice versa.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.CommaListBuilder.EscapeForComma(System.String)">
            <summary>
            Escape the string for comma.
            </summary>
            <param name="s">The string to escape.</param>
            <returns>The escaped string.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.CommaListBuilder.GetCommaSeparatedValues(System.String)">
            <summary>
            Get list of comma separate values from the string. The comma
            might be escaped by \ in which case it is not a separator.
            </summary>
            <param name="value">The string.</param>
            <returns>The list of string values.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.CommaListBuilder.AddValue(System.String)">
            <summary>
            Add value to the current list builder.
            </summary>
            <param name="value">The value to add.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.CommaListBuilder.AddValue(System.Object)">
            <summary>
            Add value to the current list builder.
            </summary>
            <param name="value">The value to add.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.CommaListBuilder.AddRange(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Add strings to CommaListBuilder.
            </summary>
            <param name="stringCollection"></param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.CommaListBuilder.AddRange(System.Collections.IEnumerable)">
            <summary>
            Add objects to CommaListBuilder.
            </summary>
            <param name="collection"></param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.CommaListBuilder.ToString">
            <summary>
            Gets the comma separated string. 
            </summary>
            <returns>The comma separated string.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.EncodeDecodeImpl.EncryptString(System.String)">
            <summary>
            Encrypt the input string to a byte array and then format the encrypted
            byte array as a Base64 string.
            </summary>
            <param name="str">string to be encrypted</param>
            <returns>The encrypted string in Base64 format</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.EncodeDecodeImpl.DecryptString(System.String)">
            <summary>
            Decrypt a string that was encrypted using the peer EncryptString method.
            </summary>
            <param name="str">A string encrtyped by the peer EncryptString</param>
            <returns>The original string passed to the EncryptString method</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.EncodeDecodeImpl.ReadKeyFile(System.String,System.Int32)">
            <summary>
            Read the file only on first pass
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.ExtensionUtilities.IsQueryConditionSubSetOfParent(System.String,Microsoft.VisualStudio.TestTools.UITest.Extension.IQueryCondition[],Microsoft.VisualStudio.TestTools.UITest.Extension.IUITechnologyElement)">
            <summary>
            Returns true if the Property condition of child Matches parent Property condition.
            </summary>
            <param name="elementTechnologyName">The name of the element's technology.</param>
            <param name="element">QueryCondition for element.</param>
            <param name="parent">parent element</param>
            <returns>true if QueryCondition is subset of parent.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.ExtensionUtilities.SanitizeFriendlyName(System.String)">
            <summary>
            Sanitizes the friendly name for invalid char and max length.
            </summary>
            <param name="friendlyName">The friendly name to sanitize.</param>
            <returns>The new friendly name.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.MultiScreenHelper.GetScreenRelativeBoundingRectangle(Microsoft.VisualStudio.TestTools.UITest.Input.Rectangle,Microsoft.VisualStudio.TestTools.UITest.Input.Rectangle)">
            <summary>
            Adjust bounding Rectangle to suit multi monitor scenarios.
            </summary>
            <param name="boundingRectangle"> The absoulte bounding rectangle of the element.</param>
            <returns>Bounding rectangle values relative to the active screen.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.MultiScreenHelper.GetActiveScreenLocationByElementBounds(Microsoft.VisualStudio.TestTools.UITest.Input.Rectangle,Microsoft.VisualStudio.TestTools.UITest.Input.Rectangle)">
            <summary>
            Active Screen Location for the element
            </summary>
            <param name="boundingRectangle">The bounding rectangle of the element.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.MultiScreenHelper.GetActiveScreenBoundsForElementSnapshot(Microsoft.VisualStudio.TestTools.UITest.Input.Rectangle,Microsoft.VisualStudio.TestTools.UITest.Input.Rectangle)">
            <summary>
            Active Screen for the element
            </summary>
            <param name="boundingRectangle">The bounding rectangle of the element.</param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITest.Extension.PropertyBag`1">
            <summary>
            A property bag or dictionary of objects of mixed type.
            </summary>
            <typeparam name="TProperty">The type of property name.</typeparam>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.PropertyBag`1.#ctor(System.String)">
            <summary>
            Constructs a property bag.
            </summary>
            <param name="propertBagName">The name of the property that this bag is holding.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.PropertyBag`1.AddProperty``1(`0,System.Object,System.Boolean)">
            <summary>
            Adds (or overwrites) the given property to the bag.
            </summary>
            <typeparam name="TValue">The expected type of the property value.</typeparam>
            <param name="property">The property to set.</param>
            <param name="propertyValue">The property value to set.</param>
            <param name="throwIfValueIsNull">Whether to throw exception if value is null or not.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.PropertyBag`1.GetProperty``1(`0)">
            <summary>
            Gets the given property from the bag.
            </summary>
            <typeparam name="TValue">The expected type of the property value.</typeparam>
            <param name="property">The property to get.</param>
            <returns>The value of the property.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.PropertyBag`1.ConvertToType``1(System.Object,System.Boolean)">
            <summary>
            If the value is of specified type, casts it. Else throws ArgumentException.
            </summary>
            <typeparam name="T">The type to convert to.</typeparam>
            <param name="value">The value to convert.</param>
            <param name="throwIfValueIsNull">Whether to throw exception if value is null or not.</param>
            <returns>Converted value.</returns>
            <exception cref="T:System.ArgumentException">If the value cannot be converted.</exception>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITest.Extension.OrderOfInvoke">
            <summary>
            This class helps to generate the order of invocation during recording
            or maintain the order during playback 
            This is a number signifying the order of interaction. It should only be called 
            for TopLevelWindows. If you have 2 windows with the same title, the window you
            interacted with first will have an order of invocation lower than the one you 
            interacted with later. This helps playback disambiguate between two windows
            with the same title.    
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.OrderOfInvoke.Initialize">
            <summary>
            Clears the maps, this should be called only if you want the cache to not be reset
            at the end of every recording or playback session
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.OrderOfInvoke.ClearCache">
            <summary>
            clears off the cache
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.OrderOfInvoke.ParseQueryId(System.String,System.String@)">
            <summary>
            This function tries to see if a queryId contains the OrderOfInvocation propery and if it does
            then returns the value of the orderOfInvocation
            It also populates the ancestor query ids (seperated by semicolon)
            
            </summary>
            <param name="queryId">Input Query Id</param>
            <param name="fixedQid">This is the queryId minus the OrderOfInvocation property</param>
            <returns>The Order Of Invocation property value</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.OrderOfInvoke.SetOrderMap(Microsoft.VisualStudio.TestTools.UITest.Extension.IUITechnologyElement,System.Int32)">
            <summary>
            set orderMap
            </summary>
            <param name="hwin"></param>
            <param name="value"></param>     
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.OrderOfInvoke.SetOrderMapPlayback(System.IntPtr,System.Int32)">
            <summary>
            set orderMapPlayback
            </summary>
            <param name="hwin"></param>
            <param name="value"></param>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.OrderOfInvoke.orderMap">
            <summary>
            this map maintains the mapping of window handle and order number
            throughtout the recording session (even multiple recording steps in MTR)
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.OrderOfInvoke.orderMapPlayback">
            <summary>
            this map maintains the mapping of window handle and order number
            throughtout the playback session 
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.OrderOfInvoke.isEnabled">
            <summary>
            This is set to false if you doonot want to generate or playback based on OrderOfInvocation
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.OrderOfInvoke.needsReset">
            <summary>
            If this is true you reset OrderOfInvocation at end of every recording session
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.OrderOfInvoke.regExOrder">
            <summary>
            regular expression used to search for orderofinvocation
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.OrderOfInvoke.IsEnabled">
            <summary>
            check whether to use OrderOfInvocation
            </summary>
            <returns></returns>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.OrderOfInvoke.NeedsReset">
            <summary>
            if this is true you reset the cache at the end of every recording session
            </summary>
            <returns></returns>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.OrderOfInvoke.OrderMap">
            <summary>
            getter setter for orderMap
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.OrderOfInvoke.OrderMapPlayback">
            <summary>
            getter setter for orderMapPlayback
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITest.Extension.OrderOfInvoke.TopLevelComparer">
            <summary>
            Compares two top level window using window handle.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.OrderOfInvoke.TopLevelComparer.Equals(Microsoft.VisualStudio.TestTools.UITest.Extension.IUITechnologyElement,Microsoft.VisualStudio.TestTools.UITest.Extension.IUITechnologyElement)">
            <summary>
            Compare with EqualsIgnoreContainer and set container.
            </summary>
            <param name="objLeft">left object to match.</param>
            <param name="objRight">right object to match.</param>
            <returns>true if equal false otherwise.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.OrderOfInvoke.TopLevelComparer.GetHashCode(Microsoft.VisualStudio.TestTools.UITest.Extension.IUITechnologyElement)">
            <summary>
            Get Hashcode for element
            </summary>
            <param name="obj">IUITechnologyElement to get hashcode for.</param>
            <returns>Hashcode for MSAAElement.</returns>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITest.Extension.StringKeys">
            <summary>
            This class defines string constants corresponding to Keys enum.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.StringKeys.IsValidKey(Microsoft.VisualStudio.TestTools.UITest.Input.Keys)">
            <summary>
            Checks whether the key is a valid Keys enum that can be converted to string.
            </summary>
            <param name="key">The key to check for.</param>
            <returns>True is the key is valid, false otherwise.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.StringKeys.KeyToText(Microsoft.VisualStudio.TestTools.UITest.Input.Keys)">
            <summary>
            Converts the key to appropriate string.
            </summary>
            <param name="key">The key to convert.</param>
            <returns>The string value.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.StringKeys.InitializeKeysToStringMap">
            <summary>
            Initializes the map for converting Keys to string.
            </summary>
            <returns>The map.</returns>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.StringKeys.mapOfKeysToString">
            <summary>
            The map for converting Keys to string.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITest.Extension.Resources.Messages">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.Resources.Messages.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.Resources.Messages.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.Resources.Messages.ActionException">
            <summary>
              Looks up a localized string similar to Unable to perform &apos;{4}&apos;on {0} {1} in - {2} {3}..
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.Resources.Messages.Common_EqtTraceReachedMaxEventLogEntries">
            <summary>
              Looks up a localized string similar to Trace has reached the maximum number of messages to log to the event log. Next messages will not be logged..
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.Resources.Messages.ControlBlockedByCurrentProcess">
            <summary>
              Looks up a localized string similar to Window &apos;{1}&apos; is blocking the control {0}. Please move the window &apos;{1}&apos; or make the control {0} visible and retry the action..
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.Resources.Messages.ControlNotFoundException">
            <summary>
              Looks up a localized string similar to Automation Playback Engine was not able to find the {0} {1} in - {2} {3}..
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.Resources.Messages.ControlNotFoundWithQidOrCondition">
            <summary>
              Looks up a localized string similar to The playback failed to find the control with the given search properties..
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.Resources.Messages.FailedToSendMessage">
            <summary>
              Looks up a localized string similar to Internal Error: Failed to send message to the control..
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.Resources.Messages.InvalidDateRange">
            <summary>
              Looks up a localized string similar to Invalid date range was specified..
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.Resources.Messages.InvalidIUnknownObject">
            <summary>
              Looks up a localized string similar to Invalid IUnknown object : {0}.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.Resources.Messages.InvalidKeySpecified">
            <summary>
              Looks up a localized string similar to Invalid value {0}, for Key was specified.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.Resources.Messages.MultipleControlsFoundException">
            <summary>
              Looks up a localized string similar to Automation Playback Engine was not able to uniquely find the {0} {1} in - {2} {3}..
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.Resources.Messages.Utility_IgnoredThrownException">
            <summary>
              Looks up a localized string similar to Exception thrown (ignored): {0} {1}..
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.Resources.Messages.Utility_ProcessNameWhenCannotGetIt">
            <summary>
              Looks up a localized string similar to (Error getting process name).
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.Resources.Messages.WindowNotFoundException">
            <summary>
              Looks up a localized string similar to Automation Playback Engine was not able to find the {0} - Window..
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITest.Extension.ValueMap">
            <summary>
            ValueMap class contains values of the parameter being used in the testcase.
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.ValueMap.#ctor">
            <summary>
            Construct Value map.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.ValueMap.Clear">
            <summary>
            Clear the value map
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.ValueMap.PopulateParametersDictionaryAfterDeserialization">
            <summary>
            Populating the Parameters Dictionary after deserialization of UITest 
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.ValueMap.Contains(System.String)">
            <summary>
            Checks if the given parameter exists in value map.
            </summary>
            <param name="parameterName">The paramater to be searched.</param>
            <returns>true if parameter exists, false otherwise.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.ValueMap.Add(Microsoft.VisualStudio.TestTools.UITest.Extension.ActionParameter)">
            <summary>
            Add given parameter to value map.
            </summary>
            <param name="parameter">The parameter to be added.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.ValueMap.Remove(System.String)">
            <summary>
            Remove given parameter from value map.
            </summary>
            <param name="parameterName">The parameter to be removed.</param>
            <returns>true if parmater removed false otherwise. returns false if parameter not found.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.ValueMap.TryGetParameterValue(System.String,System.Object@)">
            <summary>
            Retrieves a parameter's value given its name
            </summary>
            <param name="parameterName">Parameter's name</param>
            <param name="parameterValue">Parameter value for the requested parameter</param>
            <returns>True, if parameter found, else false</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Microsoft.VisualStudio.TestTools.UITest.Extension.ValueMap.SetParameterValue(System.String,System.Object)" -->
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.ValueMap.Initialize">
            <summary>
            Initialize ValueMap with appropriate initial settings.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.ValueMap.GetStringInProperFormat(System.String)">
            <summary>
            returns string in decided format.
            </summary>
            <param name="parameterName">string to be used as parameter name</param>
            <returns>string in decided format</returns>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.ValueMap.parameters">
            <summary>
            Dictionary of parameters being used in the parent test case.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Extension.ValueMap.parameterList">
            <summary>
            Dictionary of the parameters
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.ValueMap.ParameterList">
            <summary>
            Gets all the parameters in this value map
            This method is written for serialization/deserialization purposes
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.ValueMap.Parameters">
            <summary>
            Dictionary of the parameters
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITest.Extension.ContextEntry">
            <summary>
            Contains the definition of the context part of a action log entry.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITest.Extension.Entry">
            <summary>
            Contains the definition of Entry class. This can be used to store a value and its type.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.Entry.#ctor">
            <summary>
            Constructor for Entry class
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.Entry.#ctor(System.String)">
            <summary>
            Constructor for Entry class
            </summary>
            <param name="value">the value of entry</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.Entry.#ctor(System.String,System.Boolean)">
            <summary>
            Constructor for Entry class
            </summary>
            <param name="value">the value of the entry</param>
            <param name="isConstant">true if the entry is not from a resource. default is true</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.Entry.#ctor(System.Type,System.String)">
            <summary>
            Constructor for Entry class
            </summary>
            <param name="type">Type of the entry</param>
            <param name="value">the value of the entry</param>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Extension.Entry.EntryType">
            <summary>
            Type should be the expected type of ValueString or 
            ActionLogFormats/ActionNames enums in which case the string corresponding to those enums will be taken.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITest.Extension.UITestActionLogEntry">
            <summary>
            This contains the definition of UITestActionLogEntry.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.UITestActionLogEntry.GetPartialActionLogString">
            <summary>
            Gets the partial action log string for html files.
            </summary>
            <returns>Partial Action log string.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.UITestActionLogEntry.GetLocalizedString(System.String,System.Boolean)">
            <summary>
            Returns the localized string if it is present in resource file.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Extension.UITestActionLogEntry.GetLocalizedControlType(System.String)">
            <summary>
            Returns the localized control type.
            </summary>
            <param name="controlTypeActual"></param>
            <returns></returns>
        </member>
    </members>
</doc>
