<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>Microsoft.Data.Entity.Design.Extensibility</name>
  </assembly>
  <members>
    <member name="T:Microsoft.Data.Entity.Design.Extensibility.ChangeEntityDesignerSelectionEventArgs">
      <summary>Entity Designer에 대한 확장자가 선택을 프로그래밍 방식으로 구동할 수 있게 해주는 EventArgs를 정의합니다.</summary>
    </member>
    <member name="M:Microsoft.Data.Entity.Design.Extensibility.ChangeEntityDesignerSelectionEventArgs.#ctor(System.IServiceProvider,System.Collections.Generic.IEnumerable{System.String})">
      <summary>ChangeEntityDesignerSelectionEventArgs를 인스턴스화합니다.이 경우 'SelectionIdentifier'는 루트로부터 선택 항목의 계층에 해당하는 구분된 문자열입니다.예를 들어 엔터티 형식 'Bar'에서 'Foo' 속성을 선택하려는 경우 SelectionIdentifier는 Foo.Bar가 됩니다.</summary>
      <param name="layerServiceProvider">레이어 확장으로 제공된 서비스 공급자</param>
      <param name="selectionIdentifiers">Entity Designer에서 선택을 구동하기 위한 문자열 식별자 집합</param>
    </member>
    <member name="T:Microsoft.Data.Entity.Design.Extensibility.EntityDesignerChangeScope">
      <summary>Visual Studio에서 실행 취소 및 다시 실행 단추로 실행 취소하거나 다시 실행할 수 있는 작업 단위를 만듭니다.</summary>
    </member>
    <member name="M:Microsoft.Data.Entity.Design.Extensibility.EntityDesignerChangeScope.#ctor">
      <summary>
        <see cref="T:Microsoft.Data.Entity.Design.Extensibility.EntityDesignerChangeScope" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:Microsoft.Data.Entity.Design.Extensibility.EntityDesignerChangeScope.Complete">
      <summary>변경 범위 내의 모든 작업을 커밋합니다.</summary>
    </member>
    <member name="M:Microsoft.Data.Entity.Design.Extensibility.EntityDesignerChangeScope.Dispose">
      <summary>
        <see cref="T:Microsoft.Data.Entity.Design.Extensibility.EntityDesignerChangeScope" /> 클래스의 현재 인스턴스에서 사용하는 모든 리소스를 해제합니다.</summary>
    </member>
    <member name="T:Microsoft.Data.Entity.Design.Extensibility.EntityDesignerExtendedPropertyAttribute">
      <summary>엔터티 데이터 모델 디자이너나 모델 브라우저에서 사용자가 선택하면 주석이 달린 클래스의 <see cref="M:Microsoft.Data.Entity.Design.Extensibility.IEntityDesignerExtendedProperty.CreateProperty(System.Xml.Linq.XElement,Microsoft.Data.Entity.Design.Extensibility.PropertyExtensionContext)" /> 메서드가 호출되는 개체를 지정합니다.</summary>
    </member>
    <member name="M:Microsoft.Data.Entity.Design.Extensibility.EntityDesignerExtendedPropertyAttribute.#ctor(Microsoft.Data.Entity.Design.Extensibility.EntityDesignerSelection)">
      <summary>
        <see cref="T:Microsoft.Data.Entity.Design.Extensibility.EntityDesignerExtendedPropertyAttribute" /> 클래스의 새 인스턴스를 인스턴스화합니다.</summary>
      <param name="entityDesignerSelection">사용자가 선택하면 <see cref="M:Microsoft.Data.Entity.Design.Extensibility.IEntityDesignerExtendedProperty.CreateProperty" /> 메서드 호출을 트리거하는 엔터티 데이터 모델 디자이너나 모델 브라우저의 개체입니다.</param>
    </member>
    <member name="P:Microsoft.Data.Entity.Design.Extensibility.EntityDesignerExtendedPropertyAttribute.EntityDesignerSelection">
      <summary>사용자가 선택하면 <see cref="M:Microsoft.Data.Entity.Design.Extensibility.IEntityDesignerExtendedProperty.CreateProperty" /> 메서드 호출을 트리거하는 엔터티 데이터 모델 디자이너나 모델 브라우저의 개체입니다.</summary>
      <returns>선택하면 <see cref="M:Microsoft.Data.Entity.Design.Extensibility.IEntityDesignerExtendedProperty.CreateProperty" /> 메서드 호출을 트리거하는 엔터티 데이터 모델 디자이너의 개체입니다.</returns>
    </member>
    <member name="T:Microsoft.Data.Entity.Design.Extensibility.EntityDesignerLayerAttribute">
      <summary>확장이 특정 레이어에 속하는지를 지정하기 위해 사용되는 특성입니다.</summary>
    </member>
    <member name="M:Microsoft.Data.Entity.Design.Extensibility.EntityDesignerLayerAttribute.#ctor(System.String)">
      <summary>특정 레이어 이름이 지정된 EntityDesignerLayerAttribute를 만듭니다.</summary>
      <param name="layerName">레이어를 지정하는 고유 이름입니다(확장의 논리적 컬렉션).</param>
    </member>
    <member name="P:Microsoft.Data.Entity.Design.Extensibility.EntityDesignerLayerAttribute.LayerName">
      <summary>레이어를 지정하는 고유 이름입니다(확장의 논리적 컬렉션).</summary>
    </member>
    <member name="T:Microsoft.Data.Entity.Design.Extensibility.EntityDesignerSelection">
      <summary>엔터티 데이터 모델 디자이너나 모델 브라우저에서 선택 시 주석이 달린 클래스의 <see cref="M:Microsoft.Data.Entity.Design.Extensibility.IEntityDesignerExtendedProperty.CreateProperty(System.Xml.Linq.XElement,Microsoft.Data.Entity.Design.Extensibility.PropertyExtensionContext)" /> 메서드가 호출되는 개체 형식을 지정하는 데 사용되는 열거형입니다.</summary>
    </member>
    <member name="F:Microsoft.Data.Entity.Design.Extensibility.EntityDesignerSelection.ConceptualModelAssociation">
      <summary>엔터티 데이터 모델 디자이너나 모델 브라우저에서 개념적 모델 연결을 선택하면 <see cref="M:Microsoft.Data.Entity.Design.Extensibility.IEntityDesignerExtendedProperty.CreateProperty(System.Xml.Linq.XElement,Microsoft.Data.Entity.Design.Extensibility.PropertyExtensionContext)" /> 메서드가 호출되도록 지정합니다.</summary>
    </member>
    <member name="F:Microsoft.Data.Entity.Design.Extensibility.EntityDesignerSelection.ConceptualModelAssociationSet">
      <summary>모델 브라우저에서 개념적 모델 연결 집합을 선택하면 <see cref="M:Microsoft.Data.Entity.Design.Extensibility.IEntityDesignerExtendedProperty.CreateProperty(System.Xml.Linq.XElement,Microsoft.Data.Entity.Design.Extensibility.PropertyExtensionContext)" /> 메서드가 호출되도록 지정합니다.</summary>
    </member>
    <member name="F:Microsoft.Data.Entity.Design.Extensibility.EntityDesignerSelection.ConceptualModelComplexProperty">
      <summary>엔터티 데이터 모델 디자이너 또는 모델 브라우저에서 개념적 모델 복합 속성을 선택하면 <see cref="M:Microsoft.Data.Entity.Design.Extensibility.IEntityDesignerExtendedProperty.CreateProperty(System.Xml.Linq.XElement,Microsoft.Data.Entity.Design.Extensibility.PropertyExtensionContext)" /> 메서드가 호출되도록 지정합니다.</summary>
    </member>
    <member name="F:Microsoft.Data.Entity.Design.Extensibility.EntityDesignerSelection.ConceptualModelComplexType">
      <summary>모델 브라우저에서 개념적 모델 복합 형식을 선택하면 <see cref="M:Microsoft.Data.Entity.Design.Extensibility.IEntityDesignerExtendedProperty.CreateProperty(System.Xml.Linq.XElement,Microsoft.Data.Entity.Design.Extensibility.PropertyExtensionContext)" /> 메서드가 호출되도록 지정합니다.</summary>
    </member>
    <member name="F:Microsoft.Data.Entity.Design.Extensibility.EntityDesignerSelection.ConceptualModelEntityContainer">
      <summary>모델 브라우저에서 개념적 모델 엔터티 컨테이너를 선택하면 <see cref="M:Microsoft.Data.Entity.Design.Extensibility.IEntityDesignerExtendedProperty.CreateProperty(System.Xml.Linq.XElement,Microsoft.Data.Entity.Design.Extensibility.PropertyExtensionContext)" /> 메서드가 호출되도록 지정합니다.</summary>
    </member>
    <member name="F:Microsoft.Data.Entity.Design.Extensibility.EntityDesignerSelection.ConceptualModelEntitySet">
      <summary>모델 브라우저에서 개념적 모델 엔터티 집합을 선택하면 <see cref="M:Microsoft.Data.Entity.Design.Extensibility.IEntityDesignerExtendedProperty.CreateProperty(System.Xml.Linq.XElement,Microsoft.Data.Entity.Design.Extensibility.PropertyExtensionContext)" /> 메서드가 호출되도록 지정합니다.</summary>
    </member>
    <member name="F:Microsoft.Data.Entity.Design.Extensibility.EntityDesignerSelection.ConceptualModelEntityType">
      <summary>엔터티 데이터 모델 디자이너 또는 모델 브라우저에서 개념적 모델 엔터티 형식을 선택하면 <see cref="M:Microsoft.Data.Entity.Design.Extensibility.IEntityDesignerExtendedProperty.CreateProperty(System.Xml.Linq.XElement,Microsoft.Data.Entity.Design.Extensibility.PropertyExtensionContext)" /> 메서드가 호출되도록 지정합니다.</summary>
    </member>
    <member name="F:Microsoft.Data.Entity.Design.Extensibility.EntityDesignerSelection.ConceptualModelFunctionImport">
      <summary>모델 브라우저에서 개념적 모델 함수 가져오기를 선택하면 <see cref="M:Microsoft.Data.Entity.Design.Extensibility.IEntityDesignerExtendedProperty.CreateProperty(System.Xml.Linq.XElement,Microsoft.Data.Entity.Design.Extensibility.PropertyExtensionContext)" /> 메서드가 호출되도록 지정합니다.</summary>
    </member>
    <member name="F:Microsoft.Data.Entity.Design.Extensibility.EntityDesignerSelection.ConceptualModelFunctionImportParameter">
      <summary>모델 브라우저에서 개념적 모델 함수 가져오기 매개 변수를 선택하면 <see cref="M:Microsoft.Data.Entity.Design.Extensibility.IEntityDesignerExtendedProperty.CreateProperty(System.Xml.Linq.XElement,Microsoft.Data.Entity.Design.Extensibility.PropertyExtensionContext)" /> 메서드가 호출되도록 지정합니다.</summary>
    </member>
    <member name="F:Microsoft.Data.Entity.Design.Extensibility.EntityDesignerSelection.ConceptualModelNavigationProperty">
      <summary>엔터티 데이터 모델 디자이너 또는 모델 브라우저에서 개념적 모델 탐색 속성을 선택하면 <see cref="M:Microsoft.Data.Entity.Design.Extensibility.IEntityDesignerExtendedProperty.CreateProperty(System.Xml.Linq.XElement,Microsoft.Data.Entity.Design.Extensibility.PropertyExtensionContext)" /> 메서드가 호출되도록 지정합니다.</summary>
    </member>
    <member name="F:Microsoft.Data.Entity.Design.Extensibility.EntityDesignerSelection.ConceptualModelProperty">
      <summary>엔터티 데이터 모델 디자이너 또는 모델 브라우저에서 개념적 모델 속성을 선택하면 <see cref="M:Microsoft.Data.Entity.Design.Extensibility.IEntityDesignerExtendedProperty.CreateProperty(System.Xml.Linq.XElement,Microsoft.Data.Entity.Design.Extensibility.PropertyExtensionContext)" /> 메서드가 호출되도록 지정합니다.</summary>
    </member>
    <member name="F:Microsoft.Data.Entity.Design.Extensibility.EntityDesignerSelection.DesignerSurface">
      <summary>엔터티 데이터 모델 디자이너에서 엔터티 데이터 모델 디자이너 표면을 선택하면 <see cref="M:Microsoft.Data.Entity.Design.Extensibility.IEntityDesignerExtendedProperty.CreateProperty(System.Xml.Linq.XElement,Microsoft.Data.Entity.Design.Extensibility.PropertyExtensionContext)" /> 메서드가 호출되도록 지정합니다.</summary>
    </member>
    <member name="F:Microsoft.Data.Entity.Design.Extensibility.EntityDesignerSelection.StorageModelAssociation">
      <summary>모델 브라우저에서 저장소 모델 연결을 선택하면 <see cref="M:Microsoft.Data.Entity.Design.Extensibility.IEntityDesignerExtendedProperty.CreateProperty(System.Xml.Linq.XElement,Microsoft.Data.Entity.Design.Extensibility.PropertyExtensionContext)" /> 메서드가 호출되도록 지정합니다.</summary>
    </member>
    <member name="F:Microsoft.Data.Entity.Design.Extensibility.EntityDesignerSelection.StorageModelEntityContainer">
      <summary>모델 브라우저에서 저장소 모델 엔터티 컨테이너를 선택하면 <see cref="M:Microsoft.Data.Entity.Design.Extensibility.IEntityDesignerExtendedProperty.CreateProperty(System.Xml.Linq.XElement,Microsoft.Data.Entity.Design.Extensibility.PropertyExtensionContext)" /> 메서드가 호출되도록 지정합니다.</summary>
    </member>
    <member name="F:Microsoft.Data.Entity.Design.Extensibility.EntityDesignerSelection.StorageModelEntityType">
      <summary>모델 브라우저에서 저장소 모델 엔터티 형식을 선택하면 <see cref="M:Microsoft.Data.Entity.Design.Extensibility.IEntityDesignerExtendedProperty.CreateProperty(System.Xml.Linq.XElement,Microsoft.Data.Entity.Design.Extensibility.PropertyExtensionContext)" /> 메서드가 호출되도록 지정합니다.</summary>
    </member>
    <member name="F:Microsoft.Data.Entity.Design.Extensibility.EntityDesignerSelection.StorageModelFunction">
      <summary>모델 브라우저에서 저장소 모델 함수를 선택하면 <see cref="M:Microsoft.Data.Entity.Design.Extensibility.IEntityDesignerExtendedProperty.CreateProperty(System.Xml.Linq.XElement,Microsoft.Data.Entity.Design.Extensibility.PropertyExtensionContext)" /> 메서드가 호출되도록 지정합니다.</summary>
    </member>
    <member name="F:Microsoft.Data.Entity.Design.Extensibility.EntityDesignerSelection.StorageModelFunctionParameter">
      <summary>모델 브라우저에서 저장소 모델 함수 매개 변수를 선택하면 <see cref="M:Microsoft.Data.Entity.Design.Extensibility.IEntityDesignerExtendedProperty.CreateProperty(System.Xml.Linq.XElement,Microsoft.Data.Entity.Design.Extensibility.PropertyExtensionContext)" /> 메서드가 호출되도록 지정합니다.</summary>
    </member>
    <member name="F:Microsoft.Data.Entity.Design.Extensibility.EntityDesignerSelection.StorageModelProperty">
      <summary>모델 브라우저에서 저장소 모델 속성을 선택하면 <see cref="M:Microsoft.Data.Entity.Design.Extensibility.IEntityDesignerExtendedProperty.CreateProperty(System.Xml.Linq.XElement,Microsoft.Data.Entity.Design.Extensibility.PropertyExtensionContext)" /> 메서드가 호출되도록 지정합니다.</summary>
    </member>
    <member name="T:Microsoft.Data.Entity.Design.Extensibility.ExtensionContext">
      <summary>
        <see cref="T:Microsoft.Data.Entity.Design.Extensibility.ModelGenerationExtensionContext" />, <see cref="T:Microsoft.Data.Entity.Design.Extensibility.PropertyExtensionContext" />, <see cref="T:Microsoft.Data.Entity.Design.Extensibility.ModelTransformExtensionContext" /> 및 <see cref="T:Microsoft.Data.Entity.Design.Extensibility.ModelConversionExtensionContext" /> 클래스의 기본 클래스입니다.</summary>
    </member>
    <member name="M:Microsoft.Data.Entity.Design.Extensibility.ExtensionContext.#ctor">
      <summary>
        <see cref="T:Microsoft.Data.Entity.Design.Extensibility.ExtensionContext" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:Microsoft.Data.Entity.Design.Extensibility.ExtensionContext.EntityFrameworkVersion">
      <summary>지정된 버전의 Entity Framework입니다.</summary>
      <returns>지정된 버전의 Entity Framework입니다.</returns>
    </member>
    <member name="P:Microsoft.Data.Entity.Design.Extensibility.ExtensionContext.Project">
      <summary>현재 Visual Studio 프로젝트입니다.</summary>
      <returns>현재 Visual Studio 프로젝트입니다.</returns>
    </member>
    <member name="T:Microsoft.Data.Entity.Design.Extensibility.ExtensionError">
      <summary>엔터티 데이터 모델 디자이너의 기능을 확장하는 Visual Studio Extensions에 대한 사용자 지정 오류 정보를 캡슐화합니다.</summary>
    </member>
    <member name="M:Microsoft.Data.Entity.Design.Extensibility.ExtensionError.#ctor(System.String,System.Int32,Microsoft.Data.Entity.Design.Extensibility.ExtensionErrorSeverity)">
      <summary>
        <see cref="T:Microsoft.Data.Entity.Design.Extensibility.ExtensionError" />의 새 인스턴스를 인스턴스화합니다.</summary>
      <param name="message">오류를 설명하는 메시지입니다.</param>
      <param name="errorCode">오류에 연결된 오류 코드입니다.</param>
      <param name="severity">오류의 심각도입니다.</param>
    </member>
    <member name="M:Microsoft.Data.Entity.Design.Extensibility.ExtensionError.#ctor(System.String,System.Int32,Microsoft.Data.Entity.Design.Extensibility.ExtensionErrorSeverity,System.Int32,System.Int32)">
      <summary>
        <see cref="T:Microsoft.Data.Entity.Design.Extensibility.ExtensionError" />의 새 인스턴스를 인스턴스화합니다.</summary>
      <param name="message">오류를 설명하는 메시지입니다.</param>
      <param name="errorCode">오류에 연결된 오류 코드입니다.</param>
      <param name="severity">오류의 심각도입니다.</param>
      <param name="line">오류가 발생한 입력 또는 출력 문서의 줄입니다.</param>
      <param name="column">오류가 발생한 입력 또는 출력 문서의 열</param>
    </member>
    <member name="P:Microsoft.Data.Entity.Design.Extensibility.ExtensionError.Column">
      <summary>오류가 발생한 입력 또는 출력 문서의 열</summary>
      <returns>오류가 발생한 입력 또는 출력 문서의 열</returns>
    </member>
    <member name="P:Microsoft.Data.Entity.Design.Extensibility.ExtensionError.ErrorCode">
      <summary>오류에 연결된 오류 코드입니다.</summary>
      <returns>오류에 연결된 오류 코드입니다.</returns>
    </member>
    <member name="P:Microsoft.Data.Entity.Design.Extensibility.ExtensionError.Line">
      <summary>오류가 발생한 입력 또는 출력 문서의 줄입니다.</summary>
      <returns>오류가 발생한 입력 또는 출력 문서의 줄입니다.</returns>
    </member>
    <member name="P:Microsoft.Data.Entity.Design.Extensibility.ExtensionError.Message">
      <summary>오류를 설명하는 메시지입니다.</summary>
      <returns>오류를 설명하는 메시지입니다.</returns>
    </member>
    <member name="P:Microsoft.Data.Entity.Design.Extensibility.ExtensionError.Severity">
      <summary>오류의 심각도입니다.</summary>
      <returns>오류의 심각도입니다.</returns>
    </member>
    <member name="T:Microsoft.Data.Entity.Design.Extensibility.ExtensionErrorSeverity">
      <summary>
        <see cref="T:Microsoft.Data.Entity.Design.Extensibility.ExtensionError" />의 심각도를 설명하는 열거형입니다.</summary>
    </member>
    <member name="F:Microsoft.Data.Entity.Design.Extensibility.ExtensionErrorSeverity.Error">
      <summary>
        <see cref="T:Microsoft.Data.Entity.Design.Extensibility.ExtensionError" />의 심각도가 Error임을 나타냅니다.이 심각도가 지정된 <see cref="T:Microsoft.Data.Entity.Design.Extensibility.ExtensionError" />는 Visual Studio 오류 목록에 오류로 나타납니다.</summary>
    </member>
    <member name="F:Microsoft.Data.Entity.Design.Extensibility.ExtensionErrorSeverity.Message">
      <summary>
        <see cref="T:Microsoft.Data.Entity.Design.Extensibility.ExtensionError" />의 심각도가 Message임을 나타냅니다.이 심각도가 지정된 <see cref="T:Microsoft.Data.Entity.Design.Extensibility.ExtensionError" />는 Visual Studio 오류 목록에 메시지로 나타납니다.</summary>
    </member>
    <member name="F:Microsoft.Data.Entity.Design.Extensibility.ExtensionErrorSeverity.Warning">
      <summary>
        <see cref="T:Microsoft.Data.Entity.Design.Extensibility.ExtensionError" />의 심각도가 Warning임을 나타냅니다.이 심각도가 지정된 <see cref="T:Microsoft.Data.Entity.Design.Extensibility.ExtensionError" />는 Visual Studio 오류 목록에 경고로 나타납니다.</summary>
    </member>
    <member name="T:Microsoft.Data.Entity.Design.Extensibility.IEntityDesignerExtendedProperty">
      <summary>엔터티 데이터 모델 디자이너나 모델 브라우저에서 사용자에게 표시되는 개체에 속성을 추가하는 메서드를 노출합니다.</summary>
    </member>
    <member name="M:Microsoft.Data.Entity.Design.Extensibility.IEntityDesignerExtendedProperty.CreateProperty(System.Xml.Linq.XElement,Microsoft.Data.Entity.Design.Extensibility.PropertyExtensionContext)">
      <summary>엔터티 데이터 모델 디자이너나 모델 브라우저에서 선택한 개체의 새 속성을 만듭니다.</summary>
      <returns>Visual Studio 속성 창에 해당 공용 속성이 표시되는 개체.자세한 내용은 <see cref="T:System.Windows.Forms.PropertyGrid" />을 참조하십시오.</returns>
      <param name="xElement">엔터티 데이터 모델 디자이너나 모델 브라우저에서 선택한 개체를 정의하는 .edmx 파일의 요소입니다.</param>
      <param name="context">파일 및 프로젝트 정보를 제공합니다.</param>
    </member>
    <member name="T:Microsoft.Data.Entity.Design.Extensibility.IEntityDesignerLayer">
      <summary>이 클래스는 Entity Designer에서 '레이어' 표기법을 사용할 수 있게 해줍니다.레이어는 설정 또는 해제할 수 있습니다. 레이어는 (1) 기능에 대한 간단한 메타데이터, (2) 기능에 대해 실행할 수 있는 명령, (3) 핵심 속성 확장, (4) 디자이너에서 발생하는 작업에 대한 간단한 이벤트 싱크, (5) 기본 선택 메커니즘 드라이버로 구성됩니다.</summary>
    </member>
    <member name="E:Microsoft.Data.Entity.Design.Extensibility.IEntityDesignerLayer.ChangeEntityDesignerSelection">
      <summary>Entity Designer에서 선택 항목을 변경합니다.여기서 선택 식별자는 'EntityName', 'AssociationName' 또는 'EntityName.PropertyName'에 해당합니다.</summary>
    </member>
    <member name="P:Microsoft.Data.Entity.Design.Extensibility.IEntityDesignerLayer.IsSealed">
      <summary>타사 속성 확장이 이 레이어를 구독할 수 있는 위치를 결정합니다.</summary>
    </member>
    <member name="P:Microsoft.Data.Entity.Design.Extensibility.IEntityDesignerLayer.Name">
      <summary>레이어의 이름입니다.</summary>
    </member>
    <member name="M:Microsoft.Data.Entity.Design.Extensibility.IEntityDesignerLayer.OnAfterLayerLoaded(System.Xml.Linq.XObject)">
      <summary>레이어가 로드된 후에 발생합니다.</summary>
      <param name="xObject">활성 디자이너에서 선택한 개체이거나, 아무것도 선택하지 않은 경우 개념적 모델입니다.</param>
    </member>
    <member name="M:Microsoft.Data.Entity.Design.Extensibility.IEntityDesignerLayer.OnAfterTransactionCommitted(System.Collections.Generic.IEnumerable{System.Tuple{System.Xml.Linq.XObject,System.Xml.Linq.XObjectChange}})">
      <summary>트랜잭션이 커밋될 때 발생합니다.레이어 확장은 이 경우 소유 도구 창을 다시 로드하는 것과 같은 기본 작업을 수행할 수 있습니다.</summary>
    </member>
    <member name="M:Microsoft.Data.Entity.Design.Extensibility.IEntityDesignerLayer.OnBeforeLayerUnloaded(System.Xml.Linq.XObject)">
      <summary>레이어가 언로드되기 전에 발생합니다.</summary>
      <param name="conceptualModelXObject">개념적 모델입니다.</param>
    </member>
    <member name="M:Microsoft.Data.Entity.Design.Extensibility.IEntityDesignerLayer.OnSelectionChanged(System.Xml.Linq.XObject)">
      <summary>디자이너 화면에서 선택을 변경할 때 발생합니다.</summary>
      <param name="selection">활성 디자이너에서 선택한 개체이거나, 개념적 모델입니다.</param>
    </member>
    <member name="P:Microsoft.Data.Entity.Design.Extensibility.IEntityDesignerLayer.Properties">
      <summary>이 기능을 자동으로 구독하는 핵심 속성 확장입니다.</summary>
    </member>
    <member name="P:Microsoft.Data.Entity.Design.Extensibility.IEntityDesignerLayer.ServiceProvider">
      <summary>레이어는 선택 목적의 고유한 서비스 공급자를 제공할 수 있습니다.현재까지는 레이어가 하나의 사이트 서비스 공급자만 제공할 수 있습니다.</summary>
    </member>
    <member name="T:Microsoft.Data.Entity.Design.Extensibility.IModelConversionExtension">
      <summary>사용자 지정 파일 형식 및 엔터티 데이터 모델 디자이너에서 읽을 수 있는 .edmx 파일 형식 간 변환 메서드를 노출합니다.</summary>
    </member>
    <member name="M:Microsoft.Data.Entity.Design.Extensibility.IModelConversionExtension.OnAfterFileLoaded(Microsoft.Data.Entity.Design.Extensibility.ModelConversionExtensionContext)">
      <summary>사용자 지정 형식의 파일을 로드하고 .edmx 형식으로 변환하는 사용자 지정 기능을 정의합니다.</summary>
      <param name="context">파일 및 프로젝트 정보를 제공합니다.</param>
    </member>
    <member name="M:Microsoft.Data.Entity.Design.Extensibility.IModelConversionExtension.OnBeforeFileSaved(Microsoft.Data.Entity.Design.Extensibility.ModelConversionExtensionContext)">
      <summary>.edmx 파일을 저장하기 전에 사용자 지정 형식의 파일로 변환하는 사용자 지정 기능을 정의합니다.</summary>
    </member>
    <member name="T:Microsoft.Data.Entity.Design.Extensibility.IModelGenerationExtension">
      <summary>.edmx 파일의 생성을 사용자 지정하는 메서드를 노출합니다.</summary>
    </member>
    <member name="M:Microsoft.Data.Entity.Design.Extensibility.IModelGenerationExtension.OnAfterModelGenerated(Microsoft.Data.Entity.Design.Extensibility.ModelGenerationExtensionContext)">
      <summary>엔터티 데이터 모델 마법사에서 .edmx 파일이 생성된 후 실행되는 사용자 지정 기능을 정의합니다.</summary>
      <param name="context">파일 및 프로젝트 정보를 제공합니다.</param>
    </member>
    <member name="M:Microsoft.Data.Entity.Design.Extensibility.IModelGenerationExtension.OnAfterModelUpdated(Microsoft.Data.Entity.Design.Extensibility.UpdateModelExtensionContext)">
      <summary>모델 업데이트 마법사에서 .edmx 파일이 업데이트된 후 실행되는 기능을 정의합니다.</summary>
      <param name="context">파일 및 프로젝트 정보를 제공합니다.</param>
    </member>
    <member name="T:Microsoft.Data.Entity.Design.Extensibility.IModelTransformExtension">
      <summary>.edmx 파일의 로드 및 저장 프로세스를 확장하는 메서드를 노출합니다.</summary>
    </member>
    <member name="M:Microsoft.Data.Entity.Design.Extensibility.IModelTransformExtension.OnAfterModelLoaded(Microsoft.Data.Entity.Design.Extensibility.ModelTransformExtensionContext)">
      <summary>엔터티 데이터 모델 디자이너에 .edmx 파일이 로드되는 프로세스를 확장하는 기능을 제공합니다.</summary>
      <param name="context">파일 및 Visual Studio 프로젝트 정보를 제공합니다.</param>
    </member>
    <member name="M:Microsoft.Data.Entity.Design.Extensibility.IModelTransformExtension.OnBeforeModelSaved(Microsoft.Data.Entity.Design.Extensibility.ModelTransformExtensionContext)">
      <summary>엔터티 데이터 모델 디자이너에서 .edmx 파일을 저장하는 프로세스를 확장하는 기능을 정의합니다.</summary>
      <param name="context">파일 및 프로젝트 정보를 제공합니다.</param>
    </member>
    <member name="T:Microsoft.Data.Entity.Design.Extensibility.ModelConversionExtensionContext">
      <summary>사용자 지정 파일 형식을 로드하고 저장할 수 있는 Visual Studio Extensions에 파일 및 프로젝트 정보를 제공합니다.</summary>
    </member>
    <member name="M:Microsoft.Data.Entity.Design.Extensibility.ModelConversionExtensionContext.#ctor">
      <summary>
        <see cref="T:Microsoft.Data.Entity.Design.Extensibility.ModelConversionExtensionContext" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:Microsoft.Data.Entity.Design.Extensibility.ModelConversionExtensionContext.CurrentDocument">
      <summary>사용자 지정 파일 형식에서 변환된 후의 .edmx 문서를 반환합니다.</summary>
      <returns>사용자 지정 파일 형식에서 변환된 후의 .edmx 문서</returns>
    </member>
    <member name="P:Microsoft.Data.Entity.Design.Extensibility.ModelConversionExtensionContext.Errors">
      <summary>사용자 지정 파일 형식을 로드하고 사용자 지정 파일 형식으로 변환할 때 Visual Studio 오류 목록에 표시될 수 있는 오류의 목록입니다.</summary>
      <returns>사용자 지정 파일 형식을 로드하고 사용자 지정 파일 형식으로 변환할 때 Visual Studio 오류 목록에 표시될 수 있는 오류의 목록입니다.</returns>
    </member>
    <member name="P:Microsoft.Data.Entity.Design.Extensibility.ModelConversionExtensionContext.FileInfo">
      <summary>엔터티 데이터 모델 디자이너에서 처리 중인 사용자 지정 파일에 대한 정보를 반환합니다.</summary>
      <returns>엔터티 데이터 모델 디자이너에서 처리 중인 사용자 지정 파일에 대한 정보</returns>
    </member>
    <member name="P:Microsoft.Data.Entity.Design.Extensibility.ModelConversionExtensionContext.OriginalDocument">
      <summary>Entity Designer에서 열거나 저장한 원본 문서를 반환합니다.</summary>
      <returns>Entity Designer에서 열거나 저장한 원본 문서</returns>
    </member>
    <member name="P:Microsoft.Data.Entity.Design.Extensibility.ModelConversionExtensionContext.ProjectItem">
      <summary>현재 Visual Studio 프로젝트 항목입니다.</summary>
      <returns>현재 Visual Studio 프로젝트 항목입니다.</returns>
    </member>
    <member name="T:Microsoft.Data.Entity.Design.Extensibility.ModelFileExtensionAttribute">
      <summary>엔터티 데이터 모델 디자이너에서 로드하거나 저장할 수 있는 사용자 지정 파일 확장명을 지정합니다.</summary>
    </member>
    <member name="M:Microsoft.Data.Entity.Design.Extensibility.ModelFileExtensionAttribute.#ctor(System.String)">
      <summary>
        <see cref="T:Microsoft.Data.Entity.Design.Extensibility.ModelFileExtensionAttribute" /> 클래스의 새 인스턴스를 만듭니다.</summary>
      <param name="fileExtension">엔터티 데이터 모델 디자이너에서 로드하거나 저장할 수 있는 사용자 지정 파일 확장명입니다.</param>
    </member>
    <member name="P:Microsoft.Data.Entity.Design.Extensibility.ModelFileExtensionAttribute.FileExtension">
      <summary>엔터티 데이터 모델 디자이너에서 로드하거나 저장할 수 있는 사용자 지정 파일 확장명입니다.</summary>
      <returns>엔터티 데이터 모델 디자이너에서 로드하거나 저장할 수 있는 사용자 지정 파일 확장명입니다.</returns>
    </member>
    <member name="T:Microsoft.Data.Entity.Design.Extensibility.ModelGenerationExtensionContext">
      <summary>엔터티 데이터 모델 마법사의 .edmx 파일 생성 프로세스를 확장하는 Visual Studio Extensions에 파일 및 프로젝트 정보를 제공합니다.</summary>
    </member>
    <member name="M:Microsoft.Data.Entity.Design.Extensibility.ModelGenerationExtensionContext.#ctor">
      <summary>
        <see cref="T:Microsoft.Data.Entity.Design.Extensibility.ModelGenerationExtensionContext" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:Microsoft.Data.Entity.Design.Extensibility.ModelGenerationExtensionContext.CurrentDocument">
      <summary>수정할 .edmx 문서를 나타냅니다.</summary>
      <returns>수정할 .edmx 문서를 나타냅니다.</returns>
    </member>
    <member name="P:Microsoft.Data.Entity.Design.Extensibility.ModelGenerationExtensionContext.GeneratedDocument">
      <summary>엔터티 데이터 모델 마법사에서 생성된 원래 .edmx 파일을 나타냅니다.</summary>
      <returns>엔터티 데이터 모델 마법사에서 생성된 원래 .edmx 파일을 나타냅니다.</returns>
    </member>
    <member name="P:Microsoft.Data.Entity.Design.Extensibility.ModelGenerationExtensionContext.WizardKind">
      <summary>.edmx 파일 생성 또는 업데이트 프로세스를 시작한 마법사입니다.</summary>
      <returns>.edmx 파일 생성 또는 업데이트 프로세스를 시작한 마법사입니다.</returns>
    </member>
    <member name="T:Microsoft.Data.Entity.Design.Extensibility.ModelTransformExtensionContext">
      <summary>엔터티 데이터 모델 디자이너에서 .edmx 파일의 파일 로드 및 저장을 확장하는 Visual Studio Extensions에 파일과 프로젝트 정보를 제공합니다.</summary>
    </member>
    <member name="M:Microsoft.Data.Entity.Design.Extensibility.ModelTransformExtensionContext.#ctor">
      <summary>
        <see cref="T:Microsoft.Data.Entity.Design.Extensibility.ModelTransformExtensionContext" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:Microsoft.Data.Entity.Design.Extensibility.ModelTransformExtensionContext.CurrentDocument">
      <summary>Visual Studio Extensions가 작동할 수 있는 현재 .edmx 파일입니다.</summary>
      <returns>Visual Studio Extensions가 작동할 수 있는 현재 .edmx 파일입니다.</returns>
    </member>
    <member name="P:Microsoft.Data.Entity.Design.Extensibility.ModelTransformExtensionContext.Errors">
      <summary>엔터티 데이터 모델 디자이너가 .edmx 파일을 로드하거나 저장할 때 Visual Studio 오류 목록에 표시될 수 있는 오류의 목록입니다.</summary>
      <returns>엔터티 데이터 모델 디자이너가 .edmx 파일을 로드하거나 저장할 때 Visual Studio 오류 목록에 표시될 수 있는 오류의 목록입니다.</returns>
    </member>
    <member name="P:Microsoft.Data.Entity.Design.Extensibility.ModelTransformExtensionContext.OriginalDocument">
      <summary>메모리에 로드된 원래 .edmx 파일</summary>
      <returns>메모리에 로드된 원래 .edmx 파일</returns>
    </member>
    <member name="P:Microsoft.Data.Entity.Design.Extensibility.ModelTransformExtensionContext.ProjectItem">
      <summary>현재 Visual Studio 프로젝트 항목입니다.</summary>
      <returns>현재 Visual Studio 프로젝트 항목입니다.</returns>
    </member>
    <member name="T:Microsoft.Data.Entity.Design.Extensibility.PropertyExtensionContext">
      <summary>엔터티 데이터 모델 디자이너나 모델 브라우저에 표시된 개체에 사용자 지정 속성을 추가하는 Visual Studio Extensions에 파일 및 프로젝트 정보를 제공합니다.</summary>
    </member>
    <member name="M:Microsoft.Data.Entity.Design.Extensibility.PropertyExtensionContext.#ctor">
      <summary>
        <see cref="T:Microsoft.Data.Entity.Design.Extensibility.PropertyExtensionContext" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:Microsoft.Data.Entity.Design.Extensibility.PropertyExtensionContext.CreateChangeScope(System.String)">
      <summary>
        <see cref="T:Microsoft.Data.Entity.Design.Extensibility.EntityDesignerChangeScope" /> 개체를 만들고 Visual Studio에서 실행 취소 및 다시 실행 단추의 드롭다운 목록에 나타날 문자열을 설정합니다.</summary>
      <returns>EntityDesignerChangeScope의 인스턴스</returns>
      <param name="undoRedoDescription">Visual Studio에서 실행 취소 및 다시 실행 단추의 드롭다운 목록에 나타날 문자열입니다.</param>
    </member>
    <member name="P:Microsoft.Data.Entity.Design.Extensibility.PropertyExtensionContext.ProjectItem">
      <summary>현재 Visual Studio 프로젝트 항목입니다.</summary>
      <returns>현재 Visual Studio 프로젝트 항목입니다.</returns>
    </member>
    <member name="T:Microsoft.Data.Entity.Design.Extensibility.UpdateModelExtensionContext">
      <summary>모델 업데이트 마법사의 .edmx 파일 업데이트 프로세스를 확장하는 Visual Studio Extensions에 파일 및 프로젝트 정보를 제공합니다.</summary>
    </member>
    <member name="M:Microsoft.Data.Entity.Design.Extensibility.UpdateModelExtensionContext.#ctor">
      <summary>
        <see cref="T:Microsoft.Data.Entity.Design.Extensibility.UpdateModelExtensionContext" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="P:Microsoft.Data.Entity.Design.Extensibility.UpdateModelExtensionContext.OriginalDocument">
      <summary>모델 업데이트 마법사가 실행되기 전의 .edmx 파일을 나타냅니다.</summary>
      <returns>모델 업데이트 마법사가 실행되기 전의 .edmx 파일을 나타냅니다.</returns>
    </member>
    <member name="P:Microsoft.Data.Entity.Design.Extensibility.UpdateModelExtensionContext.ProjectItem">
      <summary>현재 Visual Studio 프로젝트 항목입니다.</summary>
      <returns>현재 Visual Studio 프로젝트 항목입니다.</returns>
    </member>
    <member name="P:Microsoft.Data.Entity.Design.Extensibility.UpdateModelExtensionContext.UpdateModelDocument">
      <summary>모델 업데이트 마법사가 실행된 후의 .edmx 파일을 나타냅니다.</summary>
      <returns>모델 업데이트 마법사가 실행된 후의 .edmx 파일을 나타냅니다.</returns>
    </member>
    <member name="T:Microsoft.Data.Entity.Design.Extensibility.WizardKind">
      <summary>.edmx 파일 생성 또는 업데이트 프로세스를 시작한 마법사에 대한 정보를 제공하는 열거형입니다.</summary>
    </member>
    <member name="F:Microsoft.Data.Entity.Design.Extensibility.WizardKind.Generate">
      <summary>엔터티 데이터 모델 마법사가 .edmx 파일 생성 프로세스를 시작했음을 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.Data.Entity.Design.Extensibility.WizardKind.None">
      <summary>.edmx 파일 수정 프로세스를 시작한 마법사가 없음을 나타냅니다.</summary>
    </member>
    <member name="F:Microsoft.Data.Entity.Design.Extensibility.WizardKind.UpdateModel">
      <summary>모델 업데이트 마법사가 .edmx 파일 업데이트 프로세스를 시작했음을 나타냅니다.</summary>
    </member>
  </members>
</doc>