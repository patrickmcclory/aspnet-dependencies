<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.VisualStudio.TestTools.WindowsStore.UITest.Common</name>
    </assembly>
    <members>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.ISqmUpdater.UpdateSqmForElement(Microsoft.VisualStudio.TestTools.UITest.Extension.IUITechnologyElement)">
            <summary>
            Updates the element info for SQM logging.
            </summary>
            <param name="element">Element to be logged.</param>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Common.UniqueNameHelper.UniqueNameDictionary">
            <summary>
            Dictionary that holds the uniquename map for each IUITechnologyElement in this UIMAP.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIMapUtil">
            <summary>
            Utility class for UI map.
            </summary>
            <summary>
            Utility class for UI map.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIMapUtil.UIMapIdSeperator">
            <summary>
            Separator used in UI Map
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIMapUtil.MaxIdLength">
            <summary>
            Maximum length of an identifier in the UIMap.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIMapUtil.NameString">
            <summary>
            Name
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIMapUtil.UIObjectIdPrefix">
            <summary>
            Prefix for each UIObject Identifier
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIMapUtil.GetSpecialControlType(Microsoft.VisualStudio.TestTools.UITest.Extension.IUITechnologyElement)">
            <summary>
            Get the special control type.
            </summary>
            <param name="element">uielement of top level window.</param>
            <returns>The top level window type.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIMapUtil.GenerateId(Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIObject,System.Collections.Generic.Dictionary{System.String,Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIObject})">
            <summary>
            Generate unique id for object in UI map.
            </summary>
            <param name="obj">Id will be generated for this object.</param>
            <param name="idHash">The ID hash table.</param>
            <returns>unique id of object in its scope.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIMapUtil.GenerateId(Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIObject,System.Collections.Generic.Dictionary{System.String,Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIObject},System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Generate unique id for object in UI map.
            </summary>
            <param name="obj">Id will be generated for this object.</param>
            <param name="idHash">The ID hash table.</param>
            <param name="idExclude">List of Ids that shouldn't be generated.
            Use null in case there is no such list.</param>
            <returns>unique id of object in its scope.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIMapUtil.CompareUIObjects(Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIObject,Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIObject)">
            <summary>
            Compare two UIObject based on primary properties.
            </summary>
            <param name="firstObject">first object.</param>
            <param name="secondObject">second object.</param>
            <returns>true if objects are equal false otherwise.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIMapUtil.FromUIElement(Microsoft.VisualStudio.TestTools.UITest.Extension.IUITechnologyElement)">
            <summary>
            Create object from given uielement.
            </summary>
            <param name="element">the uielement.</param>
            <returns>The uiobject with property assigned from given uielement.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIMapUtil.FromUIElement(Microsoft.VisualStudio.TestTools.UITest.Extension.IUITechnologyElement,Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIObject)">
            <summary>
            Assign property of uiobject from uielement.
            </summary>
            <param name="element">the uielement.</param>
            <param name="obj">The object whose properties will be assigned from uielement.</param>
            <returns>The UIObject.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIMapUtil.FillTopLevelElementFromUIElement(Microsoft.VisualStudio.TestTools.UITest.Extension.IUITechnologyElement,Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.TopLevelElement,System.Boolean)">
            <summary>
            Assign property of the given TechnologyElement to the input TopLevelElement.
            </summary>
            <param name="element">The input IUITechnologyElement</param>
            <param name="obj">The TopLevelElement to which needs to be fiiled</param>
            <returns>the TopLevelElement corresponding to the input IUITechnologyElement</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIMapUtil.UpdateProperties(Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIObject,Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIObject)">
            <summary>
            Update the property of UIObject from another UIObject.
            </summary>
            <param name="targetObject">target object.</param>
            <param name="sourceObject">source object.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIMapUtil.CompareString(System.String,System.String,System.StringComparison)">
            <summary>
            Compare two string.
            </summary>
            <param name="firstString">The first string.</param>
            <param name="secondString">The second string.</param>
            <returns>If both string are either null or empty return true. 
            Otherwise do standard string comparison.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIMapUtil.GetUniqueName(Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIObject,System.String)">
            <summary>
            Generate the . separated unique name of an UIObject.
            </summary>
            <param name="uiObject">The UIObject.</param>
            <param name="uiMapId">The UIMap for which to generate the unique Id.</param>
            <returns>. separated unique name.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIMapUtil.GetNextId(System.String,System.String@)">
            <summary>
            This method gets the next portion of the Id for a given
            uiobject id. For eg: if the input is abc.xyz.lmn
            this returns "abc". 
            The remaining part of the Id is set to the output param
            in the above example, remaningId  is set to "xyz.lmn".
            </summary>
            <param name="uiObjectId">the ui object Id</param>
            <param name="remainingId">the remaining id or string.empty if there is
            only a single Id in the input uiObjectId</param>
            <returns>The first portion of the Id in the input uiobjectId</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIMapUtil.GetLastId(System.String,System.String@)">
            <summary>
            This is a complement of the GetNextId method.
            Given a "." seperated UIObject Id, this returns the 
            last part 
            ie:
            Passing "A.B.C" , "C" is returned and previousUIMapId="A.B"
            </summary>
            <param name="uiObjectId">The UIObject Id</param>
            <param name="previousUIMapId">The remaining prefix portion 
            of the Id</param>
            <returns>The last part/suffix portion of the Id</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIMapUtil.GetCompleteQueryId(Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyElement)">
            <summary>
            Helper method to create the complete QID
            </summary>
            <param name="pluginNode">UI Element object</param>
            <returns>Complete QID of the element</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIMapUtil.GetCondition(Microsoft.VisualStudio.TestTools.UITest.Extension.IQueryCondition,System.String)">
            <summary>
            Gets the property condition with the given property name.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIMapUtil.FillPropertyFromUIElement(Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIObject,Microsoft.VisualStudio.TestTools.UITest.Extension.IUITechnologyElement)">
            <summary>
            Fill the property of uiobject from uielement.
            </summary>
            <param name="obj">the uiobject.</param>
            <param name="element">the uielement.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIMapUtil.FillPropertyOfTopLevelElementFromUIElement(Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIObject,Microsoft.VisualStudio.TestTools.UITest.Extension.IUITechnologyElement)">
            <summary>
            Fill the property of uiobject from uielement assuming that the element
            is a toplevelElement. The difference is that the ancestor nodes have to
            be included for the TopLevelElement whereas for other uiobjects it is null.
            </summary>
            <param name="obj">the uiobject.</param>
            <param name="element">the uielement.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.QualityTools.CodedUITest.Agent.SerializationHelper.SerializeActionRequest(Microsoft.VisualStudio.TestTools.UITest.Common.Service.ActionRequest)">
            <summary>
            Serialize Action Request object
            </summary>
            <param name="actionRequest">ActionRequest object</param>
            <returns>ActionRequest XML</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.QualityTools.CodedUITest.Agent.SerializationHelper.DeSerializeActionRequest(System.String)">
            <summary>
            Deserialize Action Request message for playback action processing
            </summary>
            <param name="actionRequestMessage">ActionRequest XML Message</param>
            <returns>ActionRequest object</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.QualityTools.CodedUITest.Agent.SerializationHelper.SerializeActionResult(Microsoft.VisualStudio.TestTools.UITest.Common.Service.ActionResult)">
            <summary>
            Serialize ActionResult for callback
            </summary>
            <param name="actionResult">ActionResult object</param>
            <returns>ActionResult XML Message</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.QualityTools.CodedUITest.Agent.SerializationHelper.DeSerializeActionResult(System.String)">
            <summary>
            DeSerialize ActionResult for callback processing
            </summary>
            <param name="actionResult">ActionResult XML Message</param>
            <returns>ActionResult Object</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.QualityTools.CodedUITest.Agent.SerializationHelper.SerializeObject(System.Object,System.Xml.Serialization.XmlSerializer)">
            <summary>
            Serialize object to XML string
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.QualityTools.CodedUITest.Agent.SerializationHelper.DeSerializeXmlString(System.String,System.Xml.Serialization.XmlSerializer)">
            <summary>
            DeSerialize XML to object
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.EncodeDecode.SetEncryptionKeyLocation(System.String,System.Int32)">
            <summary>
            generate the key from the keyfile
            </summary>
            <param name="location">key file location</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.EncodeDecode.EncodeString(System.String)">
            <summary>
            Encrypts String using TripleDES algorithm
            </summary>
            <param name="dataToEncode">String to encrypt</param>
            <returns>Encrypted String</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.EncodeDecode.DecodeString(System.String)">
            <summary>
            Decrypts the string that was encrypted before using TripleDES
            </summary>
            <param name="dataToDecode">String to decrypt</param>
            <returns>Decrypted String</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.EncodeDecode.InitializeDefaultSettings">
            <summary>
            Helper method to the initialize the member variables used in encoding
            and decoding to initial values
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.EncodeDecode.ReadKeyFile">
            <summary>
            Read Custom Encryption Key file
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITest.Common.MouseActionType">
            <summary>
            The various types of mouse actions.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Common.MouseActionType.ButtonDown">
            <summary>
            Mouse button down.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Common.MouseActionType.ButtonUp">
            <summary>
            Mouse button up.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Common.MouseActionType.Click">
            <summary>
            Mouse button click.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Common.MouseActionType.DoubleClick">
            <summary>
            Mouse button double click.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Common.MouseActionType.Drag">
            <summary>
            Mouse button drag.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Common.MouseActionType.WheelRotate">
            <summary>
            Mouse wheel rotate.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Common.MouseActionType.Hover">
            <summary>
            Mouse Hover.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITest.Common.ErrorAction">
            <summary>
            Error action class.
            This class is used by the recorded to signal that it was not able to record an action
            correctly.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITest.Common.UITestAction">
            <summary>
            The base class of all the differnt types of actions supported by the Recorder.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UITestAction.#ctor">
            <summary>
            Creates an instance of the UITestAction class.
            Use this class when there is no UITechnologyElement corresponding to a given action.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UITestAction.#ctor(Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyElement)">
            <summary>
            Creates an instance of the UITestAction Class for an action on a given UITechnologyElement
            </summary>
            <param name="uiElement">The element on which the action occured.</param>
            <seealso cref="T:Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyElement"/>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UITestAction.CleanupPropertyChangeHandler">
            <summary>
            Cleanup all internal handlers.
            This is usually called when the action has been poped.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UITestAction.MatchParameter(System.String)">
            <summary>
            Matches the Parameter of the action with the specified object.
            </summary>
            <param name="specifiedParameter">The Specified Object.</param>
            <returns>True if the Parameter matches the specified Parameter.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UITestAction.NotifyPropertyChanged(System.String)">
            <summary>
            Helper method used by derived classes that calls eventhandlers registered for 
            the PropertChanged event.
            </summary>
            <param name="propertyName">Name of the property that changed.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UITestAction.GetParameterString">
            <summary>
            Gets the parameter string.
            </summary>
            <returns>The parameter string.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UITestAction.GetUIElementCollection">
            <summary>
            Returns the list of UIElements that this action references.
            If sub types refer to more than they can override 
            and add to this collection.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UITestAction.FixUIObjectName(System.Collections.Generic.IDictionary{Microsoft.VisualStudio.TestTools.UITest.Extension.IUITechnologyElement,System.String})">
            <summary>
            This method takes a dictionary of UITechnologyElement names and then assigns the proper
            name to the uiobjectname property from the dictionary. This is virual as there might
            be more elements and correspoding properties that need to be named by action subtypes
            </summary>
            <param name="uniqueNameDictionary">Dictionary with UITechnologyElement to name mapping</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UITestAction.FixUIObject">
            <summary>
            Instantiate UITechnologyElement property from UI map by using UIElementName as ID.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UITestAction.ValidateParameter">
            <summary>
            Validate the parameters used in this action
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UITestAction.BindParameter(Microsoft.VisualStudio.TestTools.UITest.Extension.ValueMap,Microsoft.VisualStudio.TestTools.UITesting.ControlType)">
            <summary>
            Do paramter binding for parameterized actions
            </summary>
            <param name="valueMap">Store containing values of all the parameters</param>
            <param name="controlType">The control type that needs to be binded.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UITestAction.BindWithCurrentValues">
            <summary>
            Do paramter binding with default values for parameterized actions
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UITestAction.ShallowCopy(Microsoft.VisualStudio.TestTools.UITest.Common.UITestAction,System.Boolean)">
            <summary>
            Copy source action properties to the destination action.
            </summary>
            <param name="source">The source action.</param>
            <param name="isSeparateAction">If time stamps etc are to be changed.</param>
            <remarks>
            This method does semi-cloning.  It is not full cloning because -
                1) The source and the destination may be of different types.
                2) Not all source properties are set on the destination.
            </remarks>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UITestAction.GetUniqueId">
            <summary>
            This method returns a unique id generated from the time tiks. It keeps 
            a record of the last id generated so that if this function is called
            again in the same tick, it increments the id by one and returns it. In case
            the current time tick is greater than the last id it is directly returned.
            </summary>
            <returns>unique id</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UITestAction.Invoke(Microsoft.VisualStudio.TestTools.UITest.Common.UITestActionInvoker,Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIMap)">
            <summary>
            This method will invoke the action.
            The action subtypes need to override this method
            and pass an implmentation of the actionInvoker interface
            to this method to playback this action.
            </summary>
            <param name="actionInvoker">object that contains an
            implementation of the UITestActionInvoker interface that contains
            specifics about invoking this particular action type.</param>
            <param name="queryId">query id for the UIobject on which
            this action needs to be invoked.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UITestAction.Equals(System.Object)">
            <summary>
            Overrides Object.Equals. Two UITestAction are equal if they have the same Id
            </summary>
            <param name="other">The other object for equals comparison.</param>
            <returns>True if the other object is equal to this UITestAction, false otherwise.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UITestAction.op_Equality(Microsoft.VisualStudio.TestTools.UITest.Common.UITestAction,Microsoft.VisualStudio.TestTools.UITest.Common.UITestAction)">
            <summary>
            Operator overload for == operator
            </summary>
            <param name="left">LValue of the expression</param>
            <param name="right">RValue of the expression</param>
            <returns>true if both are equal</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UITestAction.op_Inequality(Microsoft.VisualStudio.TestTools.UITest.Common.UITestAction,Microsoft.VisualStudio.TestTools.UITest.Common.UITestAction)">
            <summary>
            Operator overload for != operator
            </summary>
            <param name="left">LValue of the expression</param>
            <param name="right">RValue of the expression</param>
            <returns>true is both are not equal</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UITestAction.GetHashCode">
            <summary>
            Overrides object.GetHashCode
            </summary>
            <returns>The hashcode of the UITestAction</returns>
            <remarks>Overriden as you have to override GetHashCode if you override Equals
            </remarks>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UITestAction.ToString">
            <summary>
            Returns the string description of the action.
            </summary>
            <returns>The string description.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UITestAction.ImageEntry_PropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Callback when the Image Entry properties are changed.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The event args.</param>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Common.UITestAction.parameterName">
            <summary>
            Name of parameter associated with this action
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Common.UITestAction.isParameterizedBound">
            <summary>
            Whether the parameter is bound to a value or not
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Common.UITestAction.startTimestamp">
            <summary>
            Action's start timestamp as given by the low level message.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Common.UITestAction.endTimestamp">
            <summary>
            Action's end timestamp as given by the low level message.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Common.UITestAction.elapsedTime">
            <summary>
            The timespan of the action w.r.t. video being generated for the test case
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Common.UITestAction.thinkTime">
            <summary>
            Think time for this action.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Common.UITestAction.actualThinkTime">
            <summary>
            Actual ThinkTime used for this action.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Common.UITestAction.lastId">
            <summary>
            The list of recently created ids.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Common.UITestAction.tags">
            <summary>
            The property bag for any additional information about the action
            that is needed during recording, aggregation and/or post-processing.
            Note that this is not persisted and is not available during playback.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.UITestAction.UIObjectName">
            <summary>
            Name of the UITechnologyElement on which the action happened.
            This field is empty when doing low-level recording where there is no object recognition.
            </summary>
            <remarks>This element is not filled during recording. At the end of recording the
            manager module pushes the objects into the ObjRep and then updates this field.</remarks>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.UITestAction.UIElement">
            <summary>
            UITechnologyElement on which the action happened.
            This field is null when doing low-level recording where there is no object recognition.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.UITestAction.Comment">
            <summary>
            Comment for this action.
            </summary>
            <remarks>This field can be set using the recorder UI. In recording mode, when the user
            does any action the details of it are shown in the recorder UI. The user can select it 
            and say add comment. This is when this field is updated. These comments should be 
            emited in the generated code.</remarks>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.UITestAction.Id">
            <summary>
            Unique Id for this action. Id's are unique. Actions that occured later has a higher id than
            an action that occured earlier.
            </summary>
            <remarks>Actions can be sorted on ID to yield a list of actions sorted in chronological order
            of occurance. These Id are reported to the recorder UI. The action editor uses this to
            indicate which actions need to be modified or deleted.</remarks>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.UITestAction.ElapsedTime">
            <summary>
            The timespan of the action w.r.t. video being generated for the test case
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.UITestAction.StartTimestamp">
            <summary>
            Action start timestamp
            </summary>
            <remarks>This is typically set from the lowlevel message timestamp.</remarks>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.UITestAction.Timestamp">
            <summary>
            The timestamp of this action.
            </summary>
            <remarks>This is required to figure out which action occured before </remarks>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.UITestAction.EndTimestamp">
            <summary>
            Action end time-stamp.
            </summary>
            <remarks>This can be either same or greater than StartTimestamp.</remarks>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.UITestAction.ThinkTimeString">
            <summary>
            The think time string for this action.
            </summary>
            <remarks>This is used to ensure that we do not have the attribute in the 
            serialized file in case it is 0.</remarks>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.UITestAction.ThinkTime">
            <summary>
            The think time for this action.
            </summary>
            <remarks>This is set to XmlIgnore because we serialize ThinkTimeString
            which is the string format of the same value but uses a string type
            to ensure that it is not in the xml file when the value is zero.</remarks>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.UITestAction.ActualThinkTime">
            <summary>
            Actual think time for this action after processing the thinktime and other 
            playback parameters like think-time multiplier, default time, etc...
            </summary>
            <remarks>This is set by the interpreter so that action log and other loggers
            can show the actual think time.</remarks>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.UITestAction.ActionName">
            <summary>
            The name of the UITestAction.
            </summary>
            <returns>The name of the action.</returns>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.UITestAction.ValueAsString">
            <summary>
            The value of the UITestAction.
            </summary>
            <returns>The value of the action.</returns>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.UITestAction.AdditionalInfo">
            <summary>
            The additional info - used in certain cases by aggregator.
            </summary>
            <returns>Additional Info.</returns>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.UITestAction.NeedFiltering">
            <summary>
            Checks whether the action can be filtered or not. This can be set
            to false to prevent any further processing on this action by UITestActionFilters.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.UITestAction.ContinueOnError">
            <summary>
            Flag is set to true if user wants to continue
            even if this action fails.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.UITestAction.ContinueOnErrorWrapper">
            <summary>
            This is a wrapper over continueonerror just for
            serialization. We return null if continueonerror
            is false so that the element does not appear in the
            xml.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.UITestAction.IsParameterizable">
            <summary>
            This returns true for the actions which can be parameterized
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.UITestAction.ParameterName">
            <summary>
            This is the name of the parameter for the action value.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.UITestAction.UITestActionExtension">
            <summary>
            Sets or gets the an instance of UITestActionExtension which contains properties related to actions.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.UITestAction.ActionLogEntry">
            <summary>
            Gets or sets the action log entry for the action.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.UITestAction.IsParameterBound">
            <summary>
            Is the action parameter bound
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.UITestAction.IsParameterized">
            <summary>
            Is the action parameterized
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.UITestAction.Tags">
            <summary>
            The property bag for any additional information about the action
            that is needed during recording, aggregation and/or post-processing.
            Note that this is not persisted and is not available during playback.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.UITestAction.ImageEntry">
            <summary>
            Gets or set the ImageEntry related information.
            </summary>
        </member>
        <member name="E:Microsoft.VisualStudio.TestTools.UITest.Common.UITestAction.PropertyChanged">
            <summary>
            Propert Change notification event
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.ErrorAction.#ctor">
            <summary>
            Construtor only to be used for xml serilaizer/deserializer.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.ErrorAction.#ctor(System.String)">
            <summary>
            Creates an instance of the error action.
            </summary>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.ErrorAction.#ctor(System.String,System.String)">
            <summary>
            Creates an instance of the error action
            </summary>
            <param name="message">The error message</param>
            <param name="idTag">The id string</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.ErrorAction.#ctor(System.String,Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyElement)">
            <summary>
            Creates an instance of the error action.
            </summary>
            <param name="message">The error message.</param>
            <param name="uiElement">The UITechnologyElement for this error.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.ErrorAction.Invoke(Microsoft.VisualStudio.TestTools.UITest.Common.UITestActionInvoker,Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIMap)">
            <summary>
            Invokes the Error action.
            </summary>
            <param name="actionInvoker"></param>
            <param name="queryId"></param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.ErrorAction.GetParameterString">
            <summary>
            Gets the parameter string.
            </summary>
            <returns>The parameter string.</returns>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.ErrorAction.Message">
            <summary>
            The error message.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.ErrorAction.IdTag">
            <summary>
            The id.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITest.Common.ManipulationType">
            <summary>
            Manipulation type.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITest.Common.VerifyConfigurationAction">
            <summary>
            Defines the VerifyConfigurationAction action.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.VerifyConfigurationAction.Invoke(Microsoft.VisualStudio.TestTools.UITest.Common.UITestActionInvoker,Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIMap)">
            <summary>
            Invokes the verifyconfiguration action.
            </summary>
            <param name="actionInvoker"></param>
            <param name="map"></param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.VerifyConfigurationAction.GetParameterString">
            <summary>
            Gets the parameter string.
            </summary>
            <returns>The parameter string.</returns>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Common.VerifyConfigurationAction.SourceConfiguration">
            <summary>
            The configuration against which the system configuration needs to be compared.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.VerifyConfigurationAction.MinimumWarningLevel">
            <summary>
            Minimum warninglevel to use when comparing the configuration settings.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITest.Common.WarningAction">
            <summary>
            Warning action class.
            This class is used by the recorded to signal that it was not able to record an action
            correctly.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.WarningAction.#ctor">
            <summary>
            Construtor only to be used for xml serilaizer/deserializer.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.WarningAction.#ctor(System.String)">
            <summary>
            Creates an instance of the Warning action.
            </summary>
            <param name="message">The Warning message.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.WarningAction.#ctor(System.String,System.String)">
            <summary>
            Creates an instance of the warning action
            </summary>
            <param name="message">The warning message</param>
            <param name="idTag">The id string</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.WarningAction.#ctor(System.String,Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyElement)">
            <summary>
            Creates an instance of the warning action.
            </summary>
            <param name="message">The Warning message.</param>
            <param name="uiElement">The UITechnologyElement for this Warning.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.WarningAction.Invoke(Microsoft.VisualStudio.TestTools.UITest.Common.UITestActionInvoker,Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIMap)">
            <summary>
            Invokes the Warning action.
            </summary>
            <param name="actionInvoker"></param>
            <param name="queryId"></param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.WarningAction.GetParameterString">
            <summary>
            Gets the parameter string.
            </summary>
            <returns>The parameter string.</returns>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.WarningAction.Message">
            <summary>
            The warning message.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.WarningAction.IdTag">
            <summary>
            The id.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITest.Common.StringAssertAction">
            <summary>
            Definition of StringAssertAction
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITest.Common.ValidationAction">
            <summary>
            Definition of ValidationAction
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.ValidationAction.#ctor">
            <summary>
            Parameterless constructor only to be used for xml serialization/deserialization.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.ValidationAction.#ctor(Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyElement,System.String,System.String)">
            <summary>
            Constructor for ValidationAction
            </summary>
            <param name="uiElement">The element on which the action occured.</param>
            <param name="propertyName">The name of the property.</param>
            <param name="expectedValue">The expected value of the property.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.ValidationAction.BindParameter(Microsoft.VisualStudio.TestTools.UITest.Extension.ValueMap,Microsoft.VisualStudio.TestTools.UITesting.ControlType)">
            <summary>
            Do some initializations at deserialization time
            <param name="valueMap">The Value Map.</param>
            <param name="controltType">The ControlType</param>
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.ValidationAction.PropertyName">
            <summary>
            Gets or sets the name of the property of the element to be validated
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.ValidationAction.ExpectedValue">
            <summary>
            Gets or sets the expected value of the validation.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.ValidationAction.MessageOnValidationFailure">
            <summary>
            Gets or sets the message which will be displayed when the validation fails;
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.ValidationAction.IsParameterizable">
            <summary>
            This returns true for the actions which can be parameterized
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.StringAssertAction.#ctor">
            <summary>
            Parameterless constructor only to be used for xml serialization/deserialization.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.StringAssertAction.#ctor(Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyElement,System.String,System.String,Microsoft.VisualStudio.TestTools.UITest.Common.StringAssertCondition,System.StringComparison)">
            <summary>
            Constructor for StringAssertAction
            </summary>
            <param name="uiElement">The element on which the action occured.</param>
            <param name="propertyName">The name of the property.</param>
            <param name="expectedValue">The expected value of the property.</param>
            <param name="propertyCondition">The condition for doing the string assert.</param>
            <param name="comparison">The StringComparison to use.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.StringAssertAction.Invoke(Microsoft.VisualStudio.TestTools.UITest.Common.UITestActionInvoker,Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIMap)">
            <summary>
            Invokes the StringAssertAction
            </summary>
            <param name="actionInvoker"></param>
            <param name="map"></param>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.StringAssertAction.Comparison">
            <summary>
            The StringComparison type to be used when doing a StringAssert
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITest.Common.StringAssertCondition">
            <summary>
            The various conditions for string assertion.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Common.StringAssertCondition.Matches">
            <summary>
            Use to assert that the expected value and the actual value matches.
            This condition supports .NET regular expression syntax.
            </summary>
            <seealso cref="T:System.Text.RegularExpressions.Regex"/>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Common.StringAssertCondition.DoesNotMatch">
            <summary>
            Use to assert that the expected value and the actual value does not match.
            This condition supports .NET regular expression syntax.
            </summary>
            <seealso cref="T:System.Text.RegularExpressions.Regex"/>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Common.StringAssertCondition.StartsWith">
            <summary>
            Use to assert that the actual value starts with the expected value.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Common.StringAssertCondition.EndsWith">
            <summary>
            Use to assert that the actual value ends with the expected value.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Common.StringAssertCondition.Contains">
            <summary>
            Use to assert that the actual value contains the expected value.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITest.Common.AssertAction">
            <summary>
            Defines an assert action.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.AssertAction.#ctor">
            <summary>
            Parameterless constructor only to be used for xml serialization/deserialization.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.AssertAction.#ctor(Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyElement,System.String,System.String,Microsoft.VisualStudio.TestTools.UITest.Common.AssertCondition,System.Type)">
            <summary>
            Creates an AssertAction
            </summary>
            <param name="uiElement">The element on which the action occured.</param>
            <param name="propertyName">The name of the property.</param>
            <param name="expectedValue">The expected value of the property.</param>
            <param name="propertyCondition">The condition for the assertion.</param>
            <param name="type">The expected data type of the property.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.AssertAction.Invoke(Microsoft.VisualStudio.TestTools.UITest.Common.UITestActionInvoker,Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIMap)">
            <summary>
            Invokes the AssertAction
            </summary>
            <param name="actionInvoker">The invoker.</param>
            <param name="map">The UIMap.</param>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.AssertAction.TypeName">
            <summary>
            Gets or sets the data type name of the objects to be compared.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.AssertAction.ValueType">
            <summary>
            Gets the data type of the objects to be compared.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.AssertAction.ExpectedValue">
            <summary>
            Gets or sets the expected value of this assertion.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.AssertAction.PropertyCondition">
            <summary>
            Gets or sets the property condition for this assertion.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITest.Common.AssertCondition">
            <summary>
            The various conditions that can be asserted.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Common.AssertCondition.AreEqual">
            <summary>
            Use to assert that the expected value and the actual value are equal.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Common.AssertCondition.AreNotEqual">
            <summary>
            Use to assert that the expected value and the actual value are not equal.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Common.AssertCondition.IsNull">
            <summary>
            Use to assert that the actual value is null.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Common.AssertCondition.IsNotNull">
            <summary>
            Use to assert that the actual value is not null.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Common.AssertCondition.IsInstanceOfType">
            <summary>
            Use to assert that the actual value is an instance of given type.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITest.Common.UITestActionExtension">
            <summary>
            A class that contains information related to the action.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UITestActionExtension.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.UITestActionExtension.ExtendedProperties">
            <summary>
            Gets or sets the ExtendedProperties.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.NoOperationAction.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.NoOperationAction.Invoke(Microsoft.VisualStudio.TestTools.UITest.Common.UITestActionInvoker,Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIMap)">
            <summary>
            Invokes the Nop action.
            </summary>
            <param name="actionInvoker">The action invoker for this action.</param>
            <param name="map">The UIMap for the action.</param>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITest.Common.MarkerAction">
            <summary>
            The MarkerAction action class. This class is used to insert markers inside an action sequence
            and the playback framework considers it as a NOP.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.MarkerAction.#ctor">
            <summary>
            Create an instance of MarkerAction action. 
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.MarkerAction.#ctor(System.String)">
            <summary>
            Create an instance of the MarkerAction action for a given test step information.
            </summary>
            <param name="markerInfo">MarkerAction information</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.MarkerAction.Invoke(Microsoft.VisualStudio.TestTools.UITest.Common.UITestActionInvoker,Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIMap)">
            <summary>
            Invokes the MarkerAction action.
            </summary>
            <param name="actionInvoker">The action invoker for this action.</param>
            <param name="map">The UIMap for the action.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.MarkerAction.GetParameterString">
            <summary>
            Get the parameter string for this action.
            </summary>
            <returns>Returns the parameter string</returns>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.MarkerAction.MarkerInformation">
            <summary>
            Information associated with this marker. 
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITest.Common.TestStepMarkerAction">
            <summary>
            The TestStepMarkerAction action class. This class is used to insert TestStepMarkers
            inside an action sequence and the playback framework considers it as a NOP.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Common.TestStepMarkerAction.NoStepId">
            <summary>
            Constant for denoting no step id.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.TestStepMarkerAction.#ctor">
            <summary>
            Create an instance of TestStepMarkerAction action. 
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.TestStepMarkerAction.#ctor(System.Int32,System.String,System.String)">
            <summary>
            Create an instance of the TestStepMarkerAction action for a given test step information.
            </summary>
            <param name="TestStepMarkerInfo">TestStepMarkerAction information</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.TestStepMarkerAction.Equals(System.Object)">
            <summary>
            Overrides Object.Equals. Two TestStepMarkers are equal if they have the step id
            </summary>
            <param name="other">The other object for equals comparison.</param>
            <returns>True if the other object is equal to this TestStepMarkerAction, false otherwise.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.TestStepMarkerAction.GetHashCode">
            <summary>
            Overrides object.GetHashCode
            </summary>
            <returns>The hashcode of the TestStepMarkerAction.</returns>
            <remarks>Overriden as you have to override GetHashCode if you override Equals
            </remarks>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.TestStepMarkerAction.Invoke(Microsoft.VisualStudio.TestTools.UITest.Common.UITestActionInvoker,Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIMap)">
            <summary>
            Invokes the TestStepMarkerAction action.
            </summary>
            <param name="actionInvoker">The action invoker for this action.</param>
            <param name="map">The UIMap for the action.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.TestStepMarkerAction.ToString">
            <summary>
            ToString override function for use in debugging/tracing situations
            </summary>
            <returns>The string description.</returns>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Common.TestStepMarkerAction.stepId">
            <summary>
            Stores the id of the test step associated with this marker.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Common.TestStepMarkerAction.outcome">
            <summary>
            Step outcome
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Common.TestStepMarkerAction.direction">
            <summary>
            MarkerAction direction flag
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Common.TestStepMarkerAction.disabled">
            <summary>
            Markers disabled or not
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Common.TestStepMarkerAction.workItemId">
            <summary>
            Associated work item id.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Common.TestStepMarkerAction.regionType">
            <summary>
            Type of marker region.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.TestStepMarkerAction.StepId">
            <summary>
            Gets or Sets the id of the test step associated with this marker.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.TestStepMarkerAction.Direction">
            <summary>
            The direction of the marker.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.TestStepMarkerAction.Outcome">
            <summary>
            Outcome of a step
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.TestStepMarkerAction.Disabled">
            <summary>
            MarkerAction disabled or not
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.TestStepMarkerAction.WorkItemId">
            <summary>
            Id of associated work item.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.TestStepMarkerAction.MarkerRegionType">
            <summary>
            The marker region type.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITest.Common.MarkerDirections">
            <summary>
            The direction of the marker.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITest.Common.MarkerRegionType">
            <summary>
            Defines the type of marker region. The marker region may contain
            recorded actions, assertions or mixed.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITest.Common.MouseAction">
            <summary>
            Contains information about atomic mouse actions.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITest.Common.InputAction">
            <summary>
            Base class for all Text based actions
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.InputAction.#ctor">
            <summary>
            Creates an instance of a InputAction class.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.InputAction.#ctor(Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyElement)">
            <summary>
            Creates an instance of a TextActin class for a give UITechnologyElement.
            </summary>
            <param name="uiElement">The element on which the action occured.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.InputAction.ShallowCopy(Microsoft.VisualStudio.TestTools.UITest.Common.UITestAction,System.Boolean)">
            <summary>
            Copy source action properties to the destination action.
            </summary>
            <param name="source">The source action.</param>
            <param name="isSeparateAction">If the timestamps etc are to be changed.</param>
            <remarks>
            This method does semi-cloning.  It is not full cloning because -
                1) The source and the destination may be of different types.
                2) Not all source properties are set on the destination.
            </remarks>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.InputAction.ModifierKeys">
            <summary>
            Specifies which modifier key combinations were pressed.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.InputAction.IsGlobalHotkey">
            <summary>
            Is this a Global HotKey
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.MouseAction.#ctor">
            <summary>
            Parameterless constructor only to be used for xml serialization/deserialization.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.MouseAction.#ctor(Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyElement,Microsoft.VisualStudio.TestTools.UITest.Input.MouseButtons,Microsoft.VisualStudio.TestTools.UITest.Common.MouseActionType)">
            <summary>
            Creates an instance of the MouseAction class.
            </summary>
            <param name="button">The mouse button used for this action.</param>
            <param name="actionType">The type of the mouse action.</param>
            <param name="uiElement">The UITechnologyElement on which the action occured.</param>
            <seealso cref="T:Microsoft.VisualStudio.TestTools.UITest.Common.MouseActionType"/>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.MouseAction.#ctor(Microsoft.VisualStudio.TestTools.UITest.Input.MouseButtons,Microsoft.VisualStudio.TestTools.UITest.Common.MouseActionType,Microsoft.VisualStudio.TestTools.UITest.Input.Point)">
            <summary>
            Creates a MouseAction class.
            Use this constructor when there is no valid UITechnologyElement for this action.
            </summary>
            <param name="button">The mouse button used for this action.</param>
            <param name="actionType">The type of the mouse action.</param>
            <seealso cref="T:Microsoft.VisualStudio.TestTools.UITest.Common.MouseActionType"/>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.MouseAction.#ctor(Microsoft.VisualStudio.TestTools.UITest.Input.MouseButtons,Microsoft.VisualStudio.TestTools.UITest.Common.MouseActionType)">
            <summary>
            Creates a MouseAction class.
            Use this constructor when there is no valid UITechnologyElement for this action.
            </summary>
            <param name="button">The mouse button used for this action.</param>
            <param name="actionType">The type of the mouse action.</param>
            <seealso cref="T:Microsoft.VisualStudio.TestTools.UITest.Common.MouseActionType"/>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.MouseAction.Invoke(Microsoft.VisualStudio.TestTools.UITest.Common.UITestActionInvoker,Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIMap)">
            <summary>
            Invokes the Mouse action.
            </summary>
            <param name="actionInvoker"></param>
            <param name="queryId"></param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.MouseAction.ShallowCopy(Microsoft.VisualStudio.TestTools.UITest.Common.UITestAction,System.Boolean)">
            <summary>
            Copies the properties from source to current MouseAction.
            </summary>
            <param name="source">Action from which properties are to be copied.</param>
            <param name="isSeparateAction">If the timestamps etc are to be changed.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.MouseAction.GetParameterString">
            <summary>
            Gets the parameter string.
            </summary>
            <returns>The parameter string.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.MouseAction.IsImplicitHover(Microsoft.VisualStudio.TestTools.UITest.Common.UITestAction)">
            <summary>
            Helper method to determine if an action is a implicitly recorded hover.
            </summary>
            <param name="recordedAction">Action to be checked</param>
            <returns>true if the action is an implicit hover action</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.MouseAction.IsExplicitHover(Microsoft.VisualStudio.TestTools.UITest.Common.UITestAction)">
            <summary>
            Helper methods to determine if an action is an explicit mouse hover
            action.
            </summary>
            <param name="recordedAction">action to be checked</param>
            <returns>true if explicitmousehover/ false otherwise</returns>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Common.MouseAction.location">
            <summary>
            Relative location within the element
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Common.MouseAction.absLocation">
            <summary>
            Absolute location on the screen (where action took place)
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Common.MouseAction.actionType">
            <summary>
            Type of mouse action
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Common.MouseAction.mouseButton">
            <summary>
            Mouse buttons used in action
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Common.MouseAction.wheelDirection">
            <summary>
            Mouse wheel direction
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Common.MouseAction.implicitHover">
            <summary>
            Implicit hover (Not user recorded hover)
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Common.MouseAction.absoluteMouseDownLocation">
            <summary>
            Location of the mouse down for this mouse action. It is set to
            -100,-100 so that it is out of range of doubleclick if not explicitly
            set.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Common.MouseAction.mouseDownTimeStamp">
            <summary>
            Timestamp of mousedown for this mouseaction.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.MouseAction.Location">
            <summary>
            Relative location where the pointer action took place
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.MouseAction.AbsoluteLocation">
            <summary>
            Absolute screen location where the pointer action took place
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.MouseAction.WheelDirection">
            <summary>
            If the message is MouseWheel then a positive value indicates that the wheel is rotated
            forward, away from the user; a negative value indicates that the wheel was rotated 
            backward, toward the user.
            One wheel click is defined as WHEEL_DELTA, which is 120.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.MouseAction.ActionType">
            <summary>
            The type of the mouse action.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.MouseAction.MouseButton">
            <summary>
            The mouse button used for the action.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.MouseAction.ActionName">
            <summary>
            The name of the UITestAction.
            </summary>
            <returns>The name of the action.</returns>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.MouseAction.ImplicitHover">
            <summary>
            True if the hover action was recorded implicitly
            without user input (pressing Ctrl + Shift + hover key)
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.MouseAction.AbsoluteMouseDownLocation">
            <summary>
            Location of the mouse down for this mouse action.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.MouseAction.MouseDownTimeStamp">
            <summary>
            Timestamp of mousedown for this mouseaction.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITest.Common.TouchAction">
            <summary>
            Contains information about touch actions.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.TouchAction.#ctor">
            <summary>
            The constructor.
            Use setters on properties to set proper values for the instance.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.TouchAction.Invoke(Microsoft.VisualStudio.TestTools.UITest.Common.UITestActionInvoker,Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIMap)">
            <summary>
            Invokes the Mouse action.
            </summary>
            <param name="actionInvoker"></param>
            <param name="queryId"></param>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Common.TouchAction.actionName">
            <summary>
            The name of the UITestAction.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Common.TouchAction.isGestureComplete">
            <summary>
            Flag to indicate if this action marks the completion of a gesture.
            If so, the information about gesture [in properties below] is reliable.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Common.TouchAction.gestureType">
            <summary>
            The type of the gesture which was observed by the touch interaction engine.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Common.TouchAction.manipulations">
            <summary>
            In case, the interaction was a manipulation, following array represents the
            specific manipulations [zoom/pan/rotate] observed in the manipulation.
            As there could be more than one, they are ordered in their relative significance.
            manipulations[0] is the most dominant: the index works as priority and not importance.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.TouchAction.ActionName">
            <summary>
            The name of the UITestAction.
            </summary>
            <returns>The name of the action.</returns>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITest.Common.DelayAction">
            <summary>
            Specifies delay's between actions
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.DelayAction.#ctor">
            <summary>
            Construtor only to be used for xml serilaizer/deserializer.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.DelayAction.#ctor(System.Int32)">
            <summary>
            Creates an instance of Delay with a given duration.
            </summary>
            <param name="duration">The duration of the delay in milli second. This has to be a 
            postive integer or -1 to inidicate a NOP action.</param>
            <remarks>This action has no IUIElement.</remarks>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.DelayAction.Invoke(Microsoft.VisualStudio.TestTools.UITest.Common.UITestActionInvoker,Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIMap)">
            <summary>
            Invokes the delay action.
            </summary>
            <param name="actionInvoker"></param>
            <param name="queryId"></param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.DelayAction.GetParameterString">
            <summary>
            Gets the parameter string.
            </summary>
            <returns>The parameter string.</returns>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.DelayAction.Duration">
            <summary>
            Duration of the delay in milisecond.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITest.Common.DragAction">
            <summary>
            Mouse Drag action.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.DragAction.#ctor">
            <summary>
            Construtor only to be used for xml serilaizer/deserializer.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.DragAction.#ctor(Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyElement,Microsoft.VisualStudio.TestTools.UITest.Input.MouseButtons)">
            <summary>
            Creates a Drag.
            </summary>
            <param name="uiElement">UITechnologyElement where the drag started.</param>
            <param name="mouseButton">The mouse button used.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.DragAction.Invoke(Microsoft.VisualStudio.TestTools.UITest.Common.UITestActionInvoker,Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIMap)">
            <summary>
            Invokes the Drag action.
            </summary>
            <param name="actionInvoker"></param>
            <param name="queryId"></param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.DragAction.ShallowCopy(Microsoft.VisualStudio.TestTools.UITest.Common.UITestAction,System.Boolean)">
            <summary>
            Copies the properties from source to current Drag action.
            </summary>
            <param name="source">Action from which properties are to be copied.</param>
            <param name="isSeparateAction">If the timestamps etc are to be changed.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.DragAction.GetParameterString">
            <summary>
            Gets the parameter string.
            </summary>
            <returns>The parameter string.</returns>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.DragAction.MouseButton">
            <summary>
            The mouse button used for the drag action.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.DragAction.StartLocation">
            <summary>
            The start location for the drag action.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.DragAction.MoveBy">
            <summary>
            The amount by which the drag locations moves.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITest.Common.DragDropAction">
            <summary>
            Drag-n-Drop aggregated action.
            </summary>
            <remarks>This is different from Drag. Drag-n-drop is a aggregated action which is 
            used when dragging starts on a object and ends on another one. All the intermediate 
            path coodinates are stipped of. This can be used for recording File Explorer file 
            drag-n-drop across folder kind of scenario.</remarks>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.DragDropAction.#ctor">
            <summary>
            Construtor only to be used for xml serilaizer/deserializer.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.DragDropAction.#ctor(Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyElement,Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyElement,Microsoft.VisualStudio.TestTools.UITest.Input.MouseButtons)">
            <summary>
            Creates a DragDrop.
            This action is used only when there is are valid start and stop UITechnologyElement.
            For capturing mouse drags in the same element or when there were no
            valid UITechnologyElement use Drag instead.
            </summary>
            <param name="sourceUIElement">UITechnologyElement where the drag started.</param>
            <param name="targetUIElement">UITechnologyElement where the drag ended</param>
            <param name="mouseButton">The mouse button used.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.DragDropAction.Invoke(Microsoft.VisualStudio.TestTools.UITest.Common.UITestActionInvoker,Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIMap)">
            <summary>
            Invokes the Dragdrop action.
            </summary>
            <param name="actionInvoker"></param>
            <param name="queryId"></param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.DragDropAction.GetParameterString">
            <summary>
            Gets the parameter string.
            </summary>
            <returns>The parameter string.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.DragDropAction.ShallowCopy(Microsoft.VisualStudio.TestTools.UITest.Common.UITestAction,System.Boolean)">
            <summary>
            Copies the properties from source to current DragDrop action.
            </summary>
            <param name="source">Action from which properties are to be copied.</param>
            <param name="isSeparateAction">If the timestamps etc are to be changed.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.DragDropAction.GetUIElementCollection">
            <summary>
            Add the target UIElement for the dragdrop action to the uielement collection.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.DragDropAction.FixUIObjectName(System.Collections.Generic.IDictionary{Microsoft.VisualStudio.TestTools.UITest.Extension.IUITechnologyElement,System.String})">
            <summary>
            Assigns the target element name to the TargetElementName property.
            </summary>
            <param name="uniqueNameDictionary">Dictionary with UITechnologyElement to name mapping</param>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.DragDropAction.TargetElementName">
            <summary>
            IUIElement name on which the drag-n-drop action terminated.
            </summary>
            <remarks>This element is not filled during recording. At the end of recording the
            manager module pushes the objects into the ObjRep and then updates this field.</remarks>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.DragDropAction.TargetElement">
            <summary>
            UITechnologyElement on which the drag-n-drop action terminated.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.DragDropAction.SourceElementName">
            <summary>
            UITechnologyElement name on which the drag-n-drop action started.
            </summary>
            <remarks>This is the same as the UIElementName in the base UITestAction class.
            This property is just a call forwarder and is added to make the class symmetrical.
            </remarks>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.DragDropAction.SourceElement">
            <summary>
            UITechnologyElement on which the drag-n-drop action started.
            </summary>
            <remarks>This is the same as the UITechnologyElement in the base UITestAction class.
            This property is just a call forwarder and is added to make the class symmetrical.
            </remarks>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.DragDropAction.MouseButton">
            <summary>
            The mouse button used for the action.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.DragDropAction.StartLocation">
            <summary>
            Relative location inside the SourceElement where the drag started.
            </summary>
            <seealso cref="P:Microsoft.VisualStudio.TestTools.UITest.Common.DragDropAction.SourceElement"/>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.DragDropAction.StopLocation">
            <summary>
            Relative location inside the TargetElement where the drag stopped.
            </summary>
            <seealso cref="P:Microsoft.VisualStudio.TestTools.UITest.Common.DragDropAction.TargetElement"/>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITest.Common.SetBaseAction">
            <summary>
            Common base class of SetValue and SetState Actions.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITest.Common.AggregatedAction">
            <summary>
            Common base class of all aggregated actions.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.AggregatedAction.#ctor(Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyElement)">
            <summary>
            Creates an instance of a aggregated action for a given UITechnologyElement.
            </summary>
            <param name="uiElement">The UITechnologyElement on which the action occured.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.AggregatedAction.#ctor">
            <summary>
            Creates an instance of a aggregated action.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.SetBaseAction.#ctor(Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyElement)">
            <summary>
            Creates an instance of a SetBaseAction action for a given UITechnologyElement.
            </summary>
            <param name="uiElement">The UITechnologyElement on which the action occured.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.SetBaseAction.#ctor">
            <summary>
            Creates an instance of a SetBaseAction action.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Common.SetBaseAction.sourceElement">
            <summary>
            The element that is the source of the SetState event.
            </summary>
            <remarks>
            In most cases, the source and target element will be the same.
            However, this may not be always the case. For example, clicking
            on a label for checkbox, changes the state of the checkbox. Here,
            the source is label and target is checkbox. Similar, when target
            is ComboBox, the source could be the Edit or List within it.
            </remarks>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Common.SetBaseAction.sourceElements">
            <summary>
            The elements that are the sources of the SetValue or SetState event.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.SetBaseAction.SourceElement">
            <summary>
            The source of the SetValue event.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.SetBaseAction.SourceElements">
            <summary>
            The source elements of the SetValue event.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITest.Common.SetValueAction">
            <summary>
            Defines a set value action.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.SetValueAction.#ctor">
            <summary>
            Construtor only to be used for xml serilaizer/deserializer.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.SetValueAction.#ctor(Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyElement,System.Object)">
            <summary>
            Creates an instance of SetValue calls for a UITechnologyElement with the given value.
            </summary>
            <param name="uiElement">The IUIElement on which the value is set.</param>
            <param name="value">The value to be set on the IUIElement.</param>
            <remarks>
            The SetValue is not supported for analog recording and hence there is no
            constructor overload that allows creation of a SetValue with out a IUIElement.
            </remarks>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.SetValueAction.Invoke(Microsoft.VisualStudio.TestTools.UITest.Common.UITestActionInvoker,Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIMap)">
            <summary>
            Invokes the SetValue action.
            </summary>
            <param name="actionInvoker"></param>
            <param name="queryId"></param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.SetValueAction.GetValueAsCurrentCultureString(Microsoft.VisualStudio.TestTools.UITesting.ControlType)">
            <summary>
            Gest the Value of the object is CurrentCulture. The ValueAsString and this will
            return same string except for cases of DateTimePicker and Calendar Controls.
            </summary>
            <param name="controlType">The Control Type of the control.</param>
            <returns>The value of the Object in current Culture.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.SetValueAction.MatchParameter(System.String)">
            <summary>
            Compares the object specified with the Object given in SetValue action.
            </summary>
            <param name="obj">The string that needs to be compared.</param>
            <returns>True if matches.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.SetValueAction.MatchControlSpecificParameters(System.String)">
            <summary>
            Matches the string specified with the Object in the action, based on Culture specified.
            Note: Used only for DateTimePicker and Calendar controls.
            </summary>
            <param name="specifiedString">string that needs to be compared.</param>
            <returns>True if matches.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.SetValueAction.IsActionOnProtectedElement">
            <summary>
            Check if the UIElement being worked upon is protected
            </summary>
            <returns>true/false</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.SetValueAction.GetParameterString">
            <summary>
            Gets the parameter string.
            </summary>
            <returns>The parameter string.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.SetValueAction.BindParameter(Microsoft.VisualStudio.TestTools.UITest.Extension.ValueMap,Microsoft.VisualStudio.TestTools.UITesting.ControlType)">
            <summary>
            Do paramter binding for parameterized actions
            </summary>
            <param name="valueMap">Store containing values of all the parameters</param>
            <param name="controlType">The control type that needs to be binded.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.SetValueAction.GetValueInRequiredVSTTFormat(Microsoft.VisualStudio.TestTools.UITesting.ControlType,System.String)">
            <summary>
            Gets the Value of the string in Format in which RnP engines work.
            </summary>
            <param name="controlType">The ControlType of the element on which actions needs to be performed.</param>
            <param name="paramValue">The Param that needs to be changed.</param>
            <returns>Value in the Culture Required.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.SetValueAction.TryValueAsString(System.String@)">
            <summary>
            Gets the Value. If value is encoded, decodes it and
            returns it. If not, returns the original value.
            If there is an exception during decoding, returns
            the original value and method returns false. In
            all other cases, method returns true.
            </summary>
            <param name="valueAsString">value of the string</param>
            <returns>false if decoding fails when the strin is 
            encoded, otherwise, false</returns>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Common.SetValueAction.encryptedInfo">
            <summary>
            stores information regarding the encryption
            object is populated only during plaback
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Common.SetValueAction.objectValue">
            <summary>
            The value to be set.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Common.SetValueAction.preferEdit">
            <summary>
            The select/edit flag (for comboBox)
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Common.SetValueAction.canDecodeStringBeCalled">
            <summary>
            Indicates whether EncodeDecode.DecodeString can be called
            Make sure this is set to false when playbacklog.xml is generated
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.SetValueAction.IsParameterizable">
            <summary>
            This returns true for the actions which can be parameterized
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.SetValueAction.Value">
            <summary>
            The value of to be set.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.SetValueAction.ValueAsString">
            <summary>
            The value of to be set as string.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.SetValueAction.TextValue">
            <summary>
            Especially for the searilizer
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.SetValueAction.IsEncoded">
            <summary>
            Is the value encrypted.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.SetValueAction.Type">
            <summary>
            The type of the Value.
            </summary>
            <seealso cref="P:Microsoft.VisualStudio.TestTools.UITest.Common.SetValueAction.Value"/>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.SetValueAction.ObjectValue">
            <summary>
            The value to be set.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.SetValueAction.PreferEdit">
            <summary>
            Prefer edit instead of select (for comboBox)
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.SetValueAction.PreferEditWrapper">
            <summary>
            This is a wrapper over PreferEdit just for
            serialization. Return null if preferEdit
            is false so that the element does not appear in the
            xml.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITest.Common.LaunchWindowsStoreAppAction">
            <summary>
            Contains information regaring a launch application action.
            TODO - Placeholder: Convert to Public once recording is enabled
            </summary>
            <remarks>This is a aggregated action.</remarks>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.LaunchWindowsStoreAppAction.#ctor">
            <summary>
            Construtor only to be used for xml serilaizer/deserializer.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.LaunchWindowsStoreAppAction.#ctor(System.String)">
            <summary>
            Creates an instance of LaunchWindowsStoreAppAction for a give Application.
            </summary>
            <param name="AppId">AppId of the Windows Store App.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.LaunchWindowsStoreAppAction.#ctor(System.String,System.String)">
            <summary>
            Creates an instance of LaunchWindowsStoreAppAction for a given Application.
            </summary>
            <param name="packageFamilyName">AppId of the Windows Store App.</param>
            <param name="arguments">Arguments to be passed on to the app.</param>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Common.LaunchWindowsStoreAppAction.m_packageFamilyName">
            <summary>
            The name of the file to launch.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.LaunchWindowsStoreAppAction.PackageFamilyName">
            <summary>
            Gets or sets the AppId.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.LaunchWindowsStoreAppAction.Arguments">
            <summary>
            Gets or sets the arguments used to launch the Application.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITest.Common.InvokeAction">
            <summary>
            This class contains action related to invoke action.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.InvokeAction.#ctor">
            <summary>
            Invoke action parameterless contructer
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.InvokeAction.#ctor(Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyElement,System.Object)">
            <summary>
            Invoke action constructer
            </summary>
            <param name="uiElement"></param>
            <param name="value"></param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.InvokeAction.Invoke(Microsoft.VisualStudio.TestTools.UITest.Common.UITestActionInvoker,Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIMap)">
            <summary>
            Invokes invoke action
            </summary>
            <param name="actionInvoker">The UITestActionInvoker instance</param>
            <param name="map">Map containing objects and actions</param>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.InvokeAction.SourceElement">
            <summary>
            Element on which the actual action happened.
            For example, on an image list item, the actual action happens on a image but invoke if fired on the item.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.SharedStepsReferenceAction.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.SharedStepsReferenceAction.#ctor(System.Int32)">
            <summary>
            Creates a shared steps reference action using the id of the shared steps.
            </summary>
            <param name="id">The shared steps id.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.SharedStepsReferenceAction.Invoke(Microsoft.VisualStudio.TestTools.UITest.Common.UITestActionInvoker,Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIMap)">
            <summary>
            Invokes the shared steps reference action.
            </summary>
            <param name="actionInvoker">The action invoker for this action.</param>
            <param name="map">The UIMap for the action.</param>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.SharedStepsReferenceAction.SharedSetSetId">
            <summary>
            Gets or sets the shared steps Id.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITest.Common.SetStateAction">
            <summary>
            Set state action.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.SetStateAction.#ctor">
            <summary>
            Construtor only to be used for xml serilaizer/deserializer.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.SetStateAction.#ctor(Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyElement,System.Object)">
            <summary>
            Creates an instance of SetState calls for a UITechnologyElement with the given state.
            </summary>
            <param name="uiElement">The IUIElement on which the state is set.</param>
            <param name="value">The state to be set on the IUIElement.</param>
            <remarks>
            The SetState is not supported for analog recording and hence there is no
            constructor overload that allows creation of a SetState with out a IUIElement.
            </remarks>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.SetStateAction.Invoke(Microsoft.VisualStudio.TestTools.UITest.Common.UITestActionInvoker,Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIMap)">
            <summary>
            Invokes the SetState action.
            </summary>
            <param name="actionInvoker"></param>
            <param name="queryId"></param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.SetStateAction.GetParameterString">
            <summary>
            Gets the parameter string.
            </summary>
            <returns>The parameter string.</returns>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Common.SetStateAction.objectState">
            <summary>
            The value to be set.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.SetStateAction.State">
            <summary>
            The state of to be set.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.SetStateAction.StateAsString">
            <summary>
            The state of to be set as string.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.SetStateAction.States">
            <summary>
            The States of an Element.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.SetStateAction.ObjectState">
            <summary>
            The state to be set.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITest.Common.MediaAction">
            <summary>
            Defines a Media action
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.MediaAction.#ctor">
            <summary>
            Creates new MediaAction
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.MediaAction.#ctor(Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyElement,Microsoft.VisualStudio.TestTools.UITest.Extension.UITestMediaEventInfo)">
            <summary>
            Creates an instance of MediaAction for a UITechnologyElement with specified media event.
            </summary>
            <param name="element">Element on which MediaAction was done.</param>
            <param name="eventType">The media event.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.MediaAction.Invoke(Microsoft.VisualStudio.TestTools.UITest.Common.UITestActionInvoker,Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIMap)">
            <summary>
            Invokes Media action
            </summary>
            <param name="actionInvoker">The UITestActionInvoker instance</param>
            <param name="map">Map containing objects and actions</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.MediaAction.SetValue(Microsoft.VisualStudio.TestTools.UITest.Extension.MediaActionType,System.Object)">
            <summary>
            Sets the appropriate value based on action type
            </summary>
            <param name="actionType"></param>
            <param name="value"></param>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.MediaAction.ActionType">
            <summary>
            Gets or sets the action type.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.MediaAction.Time">
            <summary>
            Gets or sets the current time when the event took place.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.MediaAction.TimeWrapper">
            <summary>
            Used for serialization.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.MediaAction.Volume">
            <summary>
            Gets or sets the volume.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.MediaAction.VolumeWrapper">
            <summary>
            Used for serialization
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.MediaAction.Mute">
            <summary>
            Gets or sets the value of mute.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.MediaAction.MuteWrapper">
            <summary>
            Used for serialization
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITest.Common.SendKeysAction">
            <summary>
            SendKeys action - sends a string of text or an array of keys.
            </summary>
            <remarks>
            When making changes to this class, test the following scenarios
            1. Recording sendkeys on textbox
            2. Playback of above using Camano
            2. Recording sendkeys on password
            3. Playback of above using Camano
            4. Playback of sendkeys on password with corrupted Text
            5. Verify actionLog and exceptions also in all cases.
            </remarks>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.SendKeysAction.#ctor">
            <summary>
            Construtor only to be used for xml serilaizer/deserializer.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.SendKeysAction.#ctor(Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyElement)">
            <summary>
            Creates an instance of SendKeys call for a UITechnologyElement.
            </summary>
            <param name="element">The UITechnologyElement on which the keys are sent.</param>
            <remarks>
            The SendKeys is not supported for analog recording and hence there
            is no constructor overload that allows creation without a UITechnologyElement.
            </remarks>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.SendKeysAction.Invoke(Microsoft.VisualStudio.TestTools.UITest.Common.UITestActionInvoker,Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIMap)">
            <summary>
            Invokes the SendKeys action.
            </summary>
            <param name="actionInvoker"></param>
            <param name="queryId"></param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.SendKeysAction.IsActionOnProtectedElement">
            <summary>
            Check if the UIElement being worked upon is protected
            If Yes then make sure that the aciton is not Tab/Clear/Backspace/Enter
            </summary>
            <returns>true/false</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.SendKeysAction.GetParameterString">
            <summary>
            Gets the parameter string.
            </summary>
            <returns>The parameter string.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.SendKeysAction.ShallowCopy(Microsoft.VisualStudio.TestTools.UITest.Common.UITestAction,System.Boolean)">
            <summary>
            Copy source action properties to the destination action.
            </summary>
            <param name="source">The source action.</param>
            <remarks>
            This method does semi-cloning.  It is not full cloning because -
                1) The source and the destination may be of different types.
                2) Not all source properties are set on the destination.
            </remarks>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.SendKeysAction.BindParameter(Microsoft.VisualStudio.TestTools.UITest.Extension.ValueMap,Microsoft.VisualStudio.TestTools.UITesting.ControlType)">
            <summary>
            Do some initializations at deserialization time
            <param name="valueMap">The Value Map.</param>
            <param name="controltType">The ControlType</param>
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.SendKeysAction.MatchParameter(System.String)">
            <summary>
            Overriden match parameter function to handle sendkeys on password field in a special way.
            </summary>
            <param name="specifiedParameter">The data value to match against the sendkeys value.</param>
            <returns>true - Match successful. false - Match failure.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.SendKeysAction.RemoveSpecialStringKeys(System.String)">
            <summary>
            Removes any special string keys. 
            </summary>
            <param name="value">string to be processed.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.SendKeysAction.IsParameterizableValue">
            <summary>
            Check if the value is one among the values not allowed. 
            </summary>
            <returns>true/false</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.SendKeysAction.IsKeyToBeIgnored(System.String)">
            <summary>
            Returns true if Key pressed was to be ignored.
            </summary>
            <param name="value">string to be verified.</param>
            <returns>true if Key pressed was to be ignored</returns>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Common.SendKeysAction.text">
            <summary>
            The input text corresponding to this action.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Common.SendKeysAction.hasNonPrintableChars">
            <summary>
            The input is made up of non-printable chars.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Common.SendKeysAction.encryptedInfo">
            <summary>
            stores information regarding the encryption
            object is populated only during plaback
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Common.SendKeysAction.canDecodeStringBeCalled">
            <summary>
            Indicates whether EncodeDecode.DecodeString can be called
            Make sure this is set to false when playbacklog.xml is generated
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.SendKeysAction.Text">
            <summary>
            The text to be sent to the control.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.SendKeysAction.TextInternal">
            <summary>
            Used only for xml read-write. 
            Purposefully made private.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.SendKeysAction.TextValue">
            <summary>
            Especially for the searilizer
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.SendKeysAction.IsParameterizable">
            <summary>
            This returns true for the actions which can be parameterized
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.SendKeysAction.IsEncoded">
            <summary>
            Is the value encrypted.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.SendKeysAction.ValueAsString">
            <summary>
            The value of the UITestAction.
            </summary>
            <returns>The value of the action.</returns>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.SendKeysAction.AdditionalInfo">
            <summary>
            The additional info - used in certain cases by aggregator.
            </summary>
            <returns>Additional Info.</returns>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.SendKeysAction.ParameterizedText">
            <summary>
            The wrapper on private 'text' field. This is to be used throughout the class
            instead of directly using 'text' field as effect of parameterization will be available
            through this filed only.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITest.Common.SendKeysAction.KeysEncoder">
            <summary>
            Utility class for encoding/decoding non-printable keys.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.SendKeysAction.KeysEncoder.HasNonPrintableChar(System.String)">
            <summary>
            Checks whether the given input has non-printable char or not.
            </summary>
            <param name="input">The input string.</param>
            <returns>True if it has non-printable char, false otherwise.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.SendKeysAction.KeysEncoder.EscapeIfSpecialChar(System.String)">
            <summary>
            Escapes the char input if it is special char.
            </summary>
            <param name="input">The char input.</param>
            <returns>
            Escaped string if it is special char, otherwise the char itself.
            </returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.SendKeysAction.KeysEncoder.IsKeyWithAmbiguousUnicode(Microsoft.VisualStudio.TestTools.UITest.Input.Keys)">
            <summary>
            Checks whether the given input key has ambiguous unicode string 
            i.e. another key with different vkCode having same unicode value.
            </summary>
            <param name="input">The input key.</param>
            <returns>True if the given input key has ambiguous unicode value, false otherwise.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.SendKeysAction.KeysEncoder.InitializeSpecialChars">
            <summary>
            Initializes the sorted array of special characters that needs
            to be escaped despite being printable characters.
            </summary>
            <returns>The sorted array of special chars.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.SendKeysAction.KeysEncoder.InitializeKeysWithAmbiguousUnicode">
            <summary>
            Initializes the sorted array of Keys with ambiguous Unicode value i.e. for each of these
            keys, there exists another key with different vkCode but same Unicode value.
            </summary>
            <returns>The sorted array of special chars.</returns>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Common.SendKeysAction.KeysEncoder.specialChars">
            <summary>
            The sorted array of special characters that needs to be
            escaped even though they are printable characters.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Common.SendKeysAction.KeysEncoder.keysWithAmbiguousUnicode">
            <summary>
            The sorted array of Keys which have ambiguous unicode string. i.e. for each of these
            keys, there exists another key with different vkCode but same Unicode value.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Common.SendKeysAction.KeysEncoder.regexForEscapedString">
            <summary>
            The regular expression for searching escaped string of either
            non-printable characters or special characters.
            </summary>
            <remarks>
            The expression tries to match '{', followed by any one char,
            followed by zero or more neither '{' nor '}' chars (to prevent
            greedy match spanning more than one token), and finally
            followed by '}'. The token within curly braces i.e. {} is
            captured as group called "EscapedString".
            </remarks>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITest.Common.KeyActionType">
            <summary>
            Represents the type of action to be performed on a text input
            device key.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Common.KeyActionType.KeyDown">
            <summary>
            Press text input device key.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Common.KeyActionType.KeyUp">
            <summary>
            Release text input device key.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Common.KeyActionType.KeyPress">
            <summary>
            Press and release text input device key.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITest.Common.RemoveKeysAction">
            <summary>
            RemoveKeysAction action - this action is used to indicate to the aggregators to remove this action
            and all preceeding matching key actions
            </summary>
            <remarks>This inherits from InputAction as this needs ModifierKeys.</remarks>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.RemoveKeysAction.#ctor">
            <summary>
            Creates an instance of RemoveKeysAction.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.RemoveKeysAction.#ctor(Microsoft.VisualStudio.TestTools.UITest.Input.ModifierKeys,Microsoft.VisualStudio.TestTools.UITest.Input.Keys)">
            <summary>
            Creates an instace of RemoveKeysAction.
            </summary>
            <param name="modifierKeys">The modifier key.</param>
            <param name="keys">The key</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.RemoveKeysAction.Invoke(Microsoft.VisualStudio.TestTools.UITest.Common.UITestActionInvoker,Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIMap)">
            <summary>
            Invokes the SendKeys action.
            </summary>
            <param name="actionInvoker"></param>
            <param name="queryId"></param>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.RemoveKeysAction.Key">
            <summary>
            The key to be ignored.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITest.Common.KeyboardAction">
            <summary>
            Contains information about the atomic keyboard actions.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.KeyboardAction.#ctor">
            <summary>
            Construtor only to be used for xml serilaizer/deserializer.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.KeyboardAction.#ctor(Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyElement,Microsoft.VisualStudio.TestTools.UITest.Common.KeyActionType,Microsoft.VisualStudio.TestTools.UITest.Input.Keys,System.String)">
            <summary>
            Creates an instance of KeybaordAction class for a given UITechnologyElement.
            </summary>
            <param name="actionType">The type of the keyboard action.</param>
            <param name="key">The key used.</param>
            <param name="keyValue">The values of the key.</param>
            <param name="uiElement">The UITechnologyElement on which the action occured.</param>
            <seealso cref="T:Microsoft.VisualStudio.TestTools.UITest.Common.KeyActionType"/>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.KeyboardAction.#ctor(Microsoft.VisualStudio.TestTools.UITest.Common.KeyActionType,Microsoft.VisualStudio.TestTools.UITest.Input.Keys,System.String)">
            <summary>
            Creates an instance of KeybaordAction class.
            </summary>
            <param name="actionType">The type of the keyboard action.</param>
            <param name="key">The key used.</param>
            <param name="keyValue">The values of the key.</param>
            <seealso cref="T:Microsoft.VisualStudio.TestTools.UITest.Common.KeyActionType"/>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.KeyboardAction.Invoke(Microsoft.VisualStudio.TestTools.UITest.Common.UITestActionInvoker,Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIMap)">
            <summary>
            Invokes the keyboard action.
            </summary>
            <param name="actionInvoker"></param>
            <param name="queryId"></param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.KeyboardAction.GetParameterString">
            <summary>
            Gets the parameter string.
            </summary>
            <returns>The parameter string.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.KeyboardAction.IsControl">
            <summary>
            Is this action for control or other non-printable char
            </summary>
            <returns>True if it is control or non-printable char.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.KeyboardAction.KeysToString(Microsoft.VisualStudio.TestTools.UITest.Input.Keys)">
            <summary>
            Convert a key to its string representation.
            </summary>
            <param name="key">The key to convert.</param>
            <returns>The string representation.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.KeyboardAction.InitializeInternal(Microsoft.VisualStudio.TestTools.UITest.Common.KeyActionType,Microsoft.VisualStudio.TestTools.UITest.Input.Keys,System.String)">
            <summary>
            Initialize this instance.
            </summary>
            <param name="keyActionType">The type of the keyboard action.</param>
            <param name="keys">The key used.</param>
            <param name="value">The values of the key.</param>
            <seealso cref="T:Microsoft.VisualStudio.TestTools.UITest.Common.KeyActionType"/>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.KeyboardAction.ActionType">
            <summary>
            The type of the keyboard action.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.KeyboardAction.Key">
            <summary>
            The key used.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.KeyboardAction.KeyValue">
            <summary>
            The string value of the key that was pressed.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.KeyboardAction.ActionName">
            <summary>
            The name of the UITestAction.
            </summary>
            <returns>The name of the action.</returns>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.KeyboardAction.ValueAsString">
            <summary>
            The value of the UITestAction.
            </summary>
            <returns>The value of the action.</returns>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.KeyboardAction.AdditionalInfo">
            <summary>
            The additional info - used in certain cases by aggregator.
            </summary>
            <returns>Additional Info.</returns>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITest.Common.TechnologyManagerSettings">
            <summary>
            helper class for getting technologymanager settings
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.TechnologyManagerSettings.CaptureAllSettings">
            <summary>
            Captures technologymanager settings and returns in a SettingGroup object.
            </summary>
            <returns>setting group of settings</returns>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITest.Common.UITestEnvironment">
            <summary>
            UITestEnvironment class that contains stored config as well as 
            about methods to compare configuration.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "T:Microsoft.VisualStudio.TestTools.UITest.Common.UITestEnvironmentContainerBase`1" -->
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UITestEnvironmentContainerBase`1.Compare(Microsoft.VisualStudio.TestTools.UITest.Common.UITestEnvironmentContainerBase{`0})">
            <summary>
            Method that can be used to compare another object of the
            container type.
            </summary>
            <param name="objectToCompare">object to the compared</param>
            <returns>collection of setting mismatches</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UITestEnvironmentContainerBase`1.Get(System.String)">
            <summary>
            Returns the ChildType object in the collection using the given
            search key.
            </summary>
            <param name="searchKey">the search string</param>
            <returns>the matching object</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UITestEnvironmentContainerBase`1.Equals(System.Object)">
            <summary>
            Overriding equals so that if a string is passed then it is compared
            with the Name.
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UITestEnvironmentContainerBase`1.GetHashCode">
            <summary>
            GetHashCode override corresponding to the equals. We should just be returning
            the base HashCode.
            </summary>
            <returns>hashcode</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UITestEnvironmentContainerBase`1.GetAllSettingsAsMismatchedSettings(Microsoft.VisualStudio.TestTools.UITest.Common.MismatchType)">
            <summary>
            This will return a collection of SettingMismatches for all settings in this instance. 
            </summary>
            <param name="mismatchType"></param>
            <returns></returns>
            
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.UITestEnvironmentContainerBase`1.ChildObjectCollection">
            <summary>
            Collection of ChildType objects.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.UITestEnvironmentContainerBase`1.Name">
            <summary>
            This will be exposed for serialization appropriately by deriving classes.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UITestEnvironment.#ctor">
            <summary>
            Default constructor for serialization.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UITestEnvironment.Compare(Microsoft.VisualStudio.TestTools.UITest.Common.UITestEnvironmentContainerBase{Microsoft.VisualStudio.TestTools.UITest.Common.SettingGroup})">
            <summary>
            Takes a targetEnviroment and compares it this environment and
            returns a list of differences. Differences can be classified as
            sourceonly settings, targetonly settings and settings whose values
            differ in source and target.
            </summary>
            <param name="targetEnvironment">the target enviroment</param>
            <returns>collection of setting mismatches</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UITestEnvironment.GetAllSettingsAsMismatchedSettings(Microsoft.VisualStudio.TestTools.UITest.Common.MismatchType)">
            <summary>
            default implementation of GetAllSettings. This will return a collection of
            SettingMismatches for all settings in this instance. 
            </summary>
            <param name="mismatchType"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UITestEnvironment.LogEnvironmentInfo">
            <summary>
            Log all environment settings for debugging purpose.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UITestEnvironment.CaptureAllSettings">
            <summary>
            Captures all the system settings and returns in UITestEnvironment
            </summary>
            <returns>system settings in UITestEnvironment</returns>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Common.UITestEnvironment.systemEnvironment">
            <summary>
            System environment
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Common.UITestEnvironment.environmentInfoLogged">
            <summary>
            Whether system environment info has already been logged or not?
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.UITestEnvironment.SystemEnvironment">
            <summary>
            A static helper that contains a snapshot of system environment at startup.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.UITestEnvironment.Group">
            <summary>
            The collection of SettingGroups that make up this environment.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITest.Common.SettingMismatch">
            <summary>
            class definition for the public SettingMismatch class.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.SettingMismatch.#ctor(System.String)">
            <summary>
            Sets the name of the mismatched setting.
            </summary>
            <param name="name"></param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.SettingMismatch.#ctor(System.String,System.String,Microsoft.VisualStudio.TestTools.UITest.Common.MismatchType,System.Int32)">
            <summary>
            sets the name and value for a source only or target only mismatch
            </summary>
            <param name="name">name of the setting</param>
            <param name="value">source /target value</param>
            <param name="mismatchType">type of mismatch. should be either sourceonly or target only</param>
            <param name="warningLevel">warning level of setting</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.SettingMismatch.#ctor(System.String,System.String,System.String,System.Int32)">
            <summary>
            Creates a Setting Mismatch with different source and target values
            </summary>
            <param name="name">setting name</param>
            <param name="sourceValue">source value of setting</param>
            <param name="targetValue">target value of setting</param>
            <param name="warningLevel">warning level of setting</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.SettingMismatch.ToString">
            <summary>
            string message of this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.SettingMismatch.SettingGroup">
            <summary>
            Group name for this mismatched setting.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.SettingMismatch.WarningLevel">
            <summary>
            WarningLevel for this mismatched setting.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.SettingMismatch.SettingName">
            <summary>
            Name of the mismatched setting.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.SettingMismatch.SourceValue">
            <summary>
            Source value of the mismatched setting. Can be null.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.SettingMismatch.TargetValue">
            <summary>
            Target value of the mismatched setting. Can be null.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.SettingMismatch.MismatchType">
            <summary>
            Mismatch type for this setting mismatch.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.SettingMismatch.Message">
            <summary>
            Message text that describes the setting mismatch
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.SettingMismatch.HelperText">
            <summary>
            Help on SettingMismatch.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITest.Common.MismatchType">
            <summary>
            Describes the type of the mismatched setting.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITest.Common.ElementQueryComparer">
            <summary>
            This EqualityComparer is used in Dictionaries of IUITechnologyElement
            where we want to use their QueryID as key
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.ElementQueryComparer.GetHashCodeRecursive(Microsoft.VisualStudio.TestTools.UITest.Extension.IUITechnologyElement)">
            <summary>
            Computes the hashcode recursively using the queryId a
            and runtimeid of all ancestors of given obj.
            We do the recursion here instead of modifying the GetHashCode
            of the QueryElement or IUITechnologyElement as these objects
            are added to other Dictionaries and modifying 
            their GetHashCode() will affect that code.
            </summary>
            <param name="obj">The element whose hash code is required.</param>
            <returns>hashcode of the given element.</returns>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITest.Common.EncryptionInformation">
            <summary>
            information regarding the encryption
            a. if encoded
            b. the string value
            class is used by SendKeys and SetValue actions
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Common.EncryptionInformation.XmlTextEscapeString">
            <summary>
            prefix to be used for special characters
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.EncryptionInformation.#ctor">
            <summary>
            needed for the serializer 
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.EncryptionInformation.#ctor(System.String,System.Boolean)">
            <summary>
            constructor
            </summary>
            <param name="value">set the value of the action</param>
            <param name="encode">is it on a protected field</param>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Common.EncryptionInformation.isEncoded">
            <summary>
            Whether encoded or not.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Common.EncryptionInformation.textValue">
            <summary>
            the actual value of the action
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.EncryptionInformation.Encoded">
            <summary>
            is the value of this action encoded
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.EncryptionInformation.Value">
            <summary>
            Accessor for the actual value of this action
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.EncryptionInformation.ValueWrapper">
            <summary>
            Should prefix special characters with "\" eg "\t" -> "\\t"
            See Extention\QueryElement\PropertyCondidtion.cs
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "T:Microsoft.VisualStudio.TestTools.UITest.Common.UITestLogInfoMessageType" -->
        <member name="T:Microsoft.VisualStudio.TestTools.UITest.Common.UITestLogWarningMessageType">
            <summary>
            Type of Warning Message
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITest.Common.UITestImageEntry">
            <summary>
            Class that encapsulates the image entry information.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UITestImageEntry.#ctor(Microsoft.VisualStudio.TestTools.UITest.Common.UITestImageInfo,Microsoft.VisualStudio.TestTools.UITest.Input.Point)">
            <summary>
            Constructor.
            </summary>
            <param name="imageInfo">The Image information instance</param>
            <param name="interactionPoint">The interaction point.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UITestImageEntry.UpdateUITestImageEntry(Microsoft.VisualStudio.TestTools.UITest.Common.UITestImageInfo,Microsoft.VisualStudio.TestTools.UITest.Input.Point)">
            <summary>
            Updates the keyvalue pairs value to corresponding image entry information. It does not change the references of the entries.
            </summary>
            <param name="imageInformation">The info.</param>
            <param name="point">The point.</param>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Common.UITestImageEntry.imageInfo">
            <summary>
            Image location.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Common.UITestImageEntry.interactionPoint">
            <summary>
            The interaction point.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.UITestImageEntry.ImageInformation">
            <summary>
            Gets or sets the path where the image is stored.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.UITestImageEntry.InteractionPoint">
            <summary>
            Gets or set the interaction point.
            </summary>
        </member>
        <member name="E:Microsoft.VisualStudio.TestTools.UITest.Common.UITestImageEntry.PropertyChanged">
            <summary>
            Notifies a property change.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITest.Common.UITestImageInfo">
            <summary>
            Class that contains information about an Image.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UITestImageInfo.#ctor(System.String,System.Int64)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Common.UITestImageInfo.imagePath">
            <summary>
            Image location.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Common.UITestImageInfo.snapShotTimeStamp">
            <summary>
            DateTime when the snap shot was taken.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.UITestImageInfo.ImagePath">
            <summary>
            Gets the path where the image is stored.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.UITestImageInfo.SnapShotTimeStamp">
            <summary>
            Gets the time when snap shot task completed.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITest.CodeGeneration.UITestInterpreterCore">
            <summary>
            The class to iterate the actions in UITest object and interpret those.
            The result of interpretation is dependent on the UITestActionInvoker value.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.CodeGeneration.UITestInterpreterCore.#ctor(Microsoft.VisualStudio.TestTools.UITest.Common.UITest)">
            <summary>
            Creates an instance of UITestInterpreter for a given UITest
            </summary>
            <param name="uiTest">The UITest to interpret.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.CodeGeneration.UITestInterpreterCore.Dispose">
            <summary>
            Disposes the object
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.CodeGeneration.UITestInterpreterCore.Dispose(System.Boolean)">
            <summary>
            Actual Dispose implementation.
            </summary>
            <param name="disposing">Flag to indicate whether to dispose managed resources</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.CodeGeneration.UITestInterpreterCore.MoveToNextStep">
            <summary>
            Moves the action pointer to the next action of the currently selected ActionList.
            </summary>
            <returns>True if successful, false if current action is the last action in the
            ActionList or the ActionList is in invalid state.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.CodeGeneration.UITestInterpreterCore.MoveToPreviousStep">
            <summary>
            Moves the action pointer to the previous action of the currently selected ActionList.
            </summary>
            <returns>True if successful, false if current action is the first action in the
            ActionList or the ActionList is in invalid state.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.CodeGeneration.UITestInterpreterCore.MoveToFirstStep">
            <summary>
            Moves the current action pointer to the first action of the currently selected ActionList.
            </summary>
            <returns>True if successful, false if the ActionList is in invalid state.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.CodeGeneration.UITestInterpreterCore.MoveToLastStep">
            <summary>
            Moves the current action pointer to the last action of the currently selected ActionList.
            </summary>
            <returns>True if successful, false if the ActionList is in invalid state.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.CodeGeneration.UITestInterpreterCore.MoveToStepNumber(System.Int32)">
            <summary>
            Moves the current action pointer to the given action index in the currently selected ActionList.
            </summary>
            <param name="stepNumber">The action index to move to.</param>
            <returns>True if successful, false if the index is invalid or the ActionList is in invalid state.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.CodeGeneration.UITestInterpreterCore.ExecuteStep">
            <summary>
            Executes (i.e. interpretes) the current step in the currently selected ActionList.
            </summary>
            <returns>The result of execution.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.CodeGeneration.UITestInterpreterCore.ExecuteTest">
            <summary>
            Executes (i.e. interpretes) the current UITest object.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.CodeGeneration.UITestInterpreterCore.ExecuteTest(System.Int64,System.Int64)">
            <summary>
            Executes (i.e. interpretes) the current UITest object for the actions in the specified range.
            </summary>
            <param name="startId">The id of the first action in ExecuteAction list denoting the start of the range.
            Use negative value to start from the beginning of the list.</param>
            <param name="stopId">The id of the last action in ExecuteAction list denoting the end of the range.
            Use negative value to continue till the end of the list.</param>
            <remarks>startId and stopId is used for only the ExecuteActions and not for other action lists.</remarks>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.CodeGeneration.UITestInterpreterCore.ExecuteTest(Microsoft.VisualStudio.TestTools.UITest.Common.UITest,System.Int64,System.Int64)">
            <summary>
            Executes (i.e. interpretes) the given UITest object for the actions in the specified range.
            </summary>
            <param name="uiTest">The UITest to execute.</param>
            <param name="startId">The id of the first action in ExecuteAction list denoting the start of the range.
            Use negative value to start from the beginning of the list.</param>
            <param name="stopId">The id of the last action in ExecuteAction list denoting the end of the range.
            Use negative value to continue till the end of the list.</param>
            <remarks>startId and stopId is used for only the ExecuteActions and not for other action lists.</remarks>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.CodeGeneration.UITestInterpreterCore.ExecuteTest(Microsoft.VisualStudio.TestTools.UITest.Common.UITest)">
            <summary>
            Executes (i.e. interpretes) the given UITest object.
            </summary>
            <param name="uiTest">The UITest to execute.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.CodeGeneration.UITestInterpreterCore.Cancel">
            <summary>
            Cancels the execution (i.e. interpretation) of current step or test. This call blocks until
            the UITest execution is cancelled completely and playback returns. This needs to be called 
            from a different thread than the thread that is executing the UITest.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.CodeGeneration.UITestInterpreterCore.IterateActionList(Microsoft.VisualStudio.TestTools.UITest.Common.UITestActionListSection)">
            <summary>
            For each action in the ActionList calls the execute action
            method which executes the action. Events are raised
            before and after the ActionList.
            </summary>
            <param name="ActionListSection">input ActionList</param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Microsoft.VisualStudio.TestTools.UITest.CodeGeneration.UITestInterpreterCore.IterateActionList(Microsoft.VisualStudio.TestTools.UITest.Common.UITestActionListSection,System.Int64,System.Int64)" -->
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.CodeGeneration.UITestInterpreterCore.ExecuteStepInternal(Microsoft.VisualStudio.TestTools.UITest.Common.UITestAction,System.Boolean@)">
            <summary>
            Execute step internal.
            </summary>
            <param name="action">The action to execute.</param>
            <param name="retryStep">Returns whether to retry or not.</param>
            <returns>The playback result.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.CodeGeneration.UITestInterpreterCore.HandleStepExecutionException(System.Exception,Microsoft.VisualStudio.TestTools.UITest.Common.UITestAction,Microsoft.VisualStudio.TestTools.UITest.CodeGeneration.UITestPlaybackResult@,System.Boolean@)">
            <summary>
            Handle exception thrown by an action execution.
            </summary>
            <param name="ex"></param>
            <param name="action"></param>
            <param name="resultPlayback"></param>
            <param name="retryStep"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.CodeGeneration.UITestInterpreterCore.ExecuteActionInternal(Microsoft.VisualStudio.TestTools.UITest.Common.UITestAction)">
            <summary>
            Executes the given action. The action contains an id
            for the UIObject on which it acts. This id is used
            to get a queryid for the object and this is passed
            to the invoke method of the input action object.
            The Invoke method also requires an object of the
            UITestActionInvoker interface type. In this case the default
            is the UITestPlayback type that implements the
            UITestActionInvoker. 
            </summary>
            <param name="action">The action to execute.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.CodeGeneration.UITestInterpreterCore.ActionErrorMessage(Microsoft.VisualStudio.TestTools.UITest.Common.UITestAction)">
            <summary>
            Constructs a formatted user-friendly error message with the
            details of the action that caused the error.
            </summary>
            <param name="action">action for which message is to be generated
            </param>
            <returns>the formatted error message</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.CodeGeneration.UITestInterpreterCore.OnProgress(System.Int32,Microsoft.VisualStudio.TestTools.UITest.Common.UITestAction)">
            <summary>
            Fire progress event.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.CodeGeneration.UITestInterpreterCore.RaiseErrorAction(Microsoft.VisualStudio.TestTools.UITest.Extension.UITestException)">
            <summary>
            Raise error action with the specified exception.
            </summary>
            <param name="ex"></param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.CodeGeneration.UITestInterpreterCore.ActionDetailsMessage(Microsoft.VisualStudio.TestTools.UITest.Common.UITestAction)">
            <summary>
            Constructs a formatted user-friendly message with the
            details of a given action.
            </summary>
            <param name="action">action for which message is to be generated
            </param>
            <returns>the formatted message</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.CodeGeneration.UITestInterpreterCore.RaisePlaybackProgressEvent(Microsoft.VisualStudio.TestTools.UITest.Common.UITestProgressEventArgs)">
            <summary>
            Raise playback progress event.
            </summary>
            <param name="arg"></param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.CodeGeneration.UITestInterpreterCore.ExecuteAction(Microsoft.VisualStudio.TestTools.UITest.Common.UITestAction,Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIMap)">
            <summary>
            Execute given action.
            </summary>
            <param name="action"></param>
            <param name="map"></param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.CodeGeneration.UITestInterpreterCore.IsExpectedExceptionFromActionExecution(System.Exception)">
            <summary>
            Returns true if the given exception is expected from the execution of an action.
            </summary>
            <param name="ex"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.CodeGeneration.UITestInterpreterCore.OnErrorHandledByUser(Microsoft.VisualStudio.TestTools.UITest.Common.UITestErrorEventArgs)">
            <summary>
            Called after user handles the action execution error.
            This can be used to trace log something.
            </summary>
            <param name="eventArgs"></param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.CodeGeneration.UITestInterpreterCore.LogActionExecutionException(System.Exception)">
            <summary>
            Logs Data for action execution Exception.
            </summary>
            <param name="exception">Exception that Occured during Playback.</param>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.CodeGeneration.UITestInterpreterCore.PlaybackUITest">
            <summary>
            Gets the UITest that is being executed.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.CodeGeneration.UITestInterpreterCore.ActionInvoker">
            <summary>
            Gets or sets the UITestActionInvoker to use for executing actions in the UITest.
            </summary>
        </member>
        <member name="E:Microsoft.VisualStudio.TestTools.UITest.CodeGeneration.UITestInterpreterCore.UITestStarted">
            <summary>
            Event raised before starting execution of UITest.
            </summary>
        </member>
        <member name="E:Microsoft.VisualStudio.TestTools.UITest.CodeGeneration.UITestInterpreterCore.UITestCompleted">
            <summary>
            Event raised after execution of UITest is complete.
            </summary>
        </member>
        <member name="E:Microsoft.VisualStudio.TestTools.UITest.CodeGeneration.UITestInterpreterCore.ActionListStarted">
            <summary>
            Event raised before starting execution of each ActionList.
            </summary>
        </member>
        <member name="E:Microsoft.VisualStudio.TestTools.UITest.CodeGeneration.UITestInterpreterCore.ActionListCompleted">
            <summary>
            Event raised after execution of each ActionList is completed.
            </summary>
        </member>
        <member name="E:Microsoft.VisualStudio.TestTools.UITest.CodeGeneration.UITestInterpreterCore.ActionStarted">
            <summary>
            Event raised before an UITestAction is executed.
            </summary>
        </member>
        <member name="E:Microsoft.VisualStudio.TestTools.UITest.CodeGeneration.UITestInterpreterCore.ActionCompleted">
            <summary>
            Event raised after an UITestAction is executed.
            </summary>
        </member>
        <member name="E:Microsoft.VisualStudio.TestTools.UITest.CodeGeneration.UITestInterpreterCore.InterpreterProgress">
            <summary>
            Event raised to update progress while interpreting the UITest.
            </summary>
        </member>
        <member name="E:Microsoft.VisualStudio.TestTools.UITest.CodeGeneration.UITestInterpreterCore.InterpreterWarning">
            <summary>
            Event raised when a warning occurs while interpreting the UITest. 
            </summary>
        </member>
        <member name="E:Microsoft.VisualStudio.TestTools.UITest.CodeGeneration.UITestInterpreterCore.InterpreterError">
            <summary>
            Event raised when an error occurs while interpreting the UITest.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.CodeGeneration.UITestInterpreterCore.PlaybackInProgress">
            <summary>
            True of playback is in progress.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.CodeGeneration.UITestInterpreterCore.CurrentAction">
            <summary>
            Current action being executed.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITest.CodeGeneration.UITestPlaybackResult">
            <summary>
            The result of Playback of an UITest.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.CodeGeneration.UITestPlaybackResult.Passed">
            <summary>
            Playback completed and passed.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.CodeGeneration.UITestPlaybackResult.Failed">
            <summary>
            Playback failed and stopped. 
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.CodeGeneration.UITestPlaybackResult.Canceled">
            <summary>
            User cancelled the playback in between.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITest.Common.UITest">
            <summary>
            Defines the object model to load, save and manipulate a UI Test.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UITest.#ctor">
            <summary>
            Creates an empty UITest object. 
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UITest.#ctor(System.Collections.Generic.IEnumerable{Microsoft.VisualStudio.TestTools.UITest.Common.UITestAction},Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIMap)">
            <summary>
            Creates a UITest object from a list of actions and a given UIMap.
            </summary>
            <param name="executeActions">The list of actions.</param>
            <param name="map">The UIMap to be assigned.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UITest.#ctor(System.Collections.Generic.IEnumerable{Microsoft.VisualStudio.TestTools.UITest.Common.UITestAction})">
            <summary>
            Creates a UITest object from a list of actions.
            </summary>
            <param name="executeActions">The list of actions.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UITest.Create(System.IO.Stream)">
            <summary>
            Creates a UITest from a stream.
            </summary>
            <param name="reader">The stream used for reading.</param>
            <returns>The newly created UITest.</returns>
            <exception cref="T:System.InvalidOperationException">The xml format exception.</exception>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UITest.Create(System.String)">
            <summary>
            Creates an UITest from a file.
            </summary>
            <param name="uitestFile">The file to read.</param>
            <returns>The newly created UITest.</returns>
            <exception cref="T:System.IO.FileNotFoundException"></exception>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UITest.Save(System.String)">
            <summary>
            Saves the UITest to a file.
            </summary>
            <param name="uitestFile">The file to which write to.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UITest.Save(System.IO.Stream)">
            <summary>
            Saves the UITest to a stream.
            </summary>
            <param name="writer">The stream to which to write this UITest.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UITest.Append(System.Collections.Generic.IEnumerable{Microsoft.VisualStudio.TestTools.UITest.Common.UITestAction})">
            <summary>
            Appends a list of actions to the UITest.
            </summary>
            <param name="actions">The list of actions.</param>
            <returns>The number of actions added.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UITest.Append(Microsoft.VisualStudio.TestTools.UITest.Common.UITest,System.Int64,System.Int64)">
            <summary>
            Appends a collection of actions from another UITest.
            </summary>
            <param name="uiTest">The source UITest</param>
            <param name="startId">The start id of the actions to merge.</param>
            <param name="stopId">The stop id of the actions to merge.</param>
            <returns>The number of actions added.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UITest.Append(System.Collections.Generic.IEnumerable{Microsoft.VisualStudio.TestTools.UITest.Common.UITestAction},Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIMap)">
            <summary>
            Appends a list of actions and objects from given UIMap to this UITest.
            </summary>
            <param name="actions">The list of actions to merge.</param>
            <param name="map">The source UIMap.</param>
            <returns>The number of actions added.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UITest.GetActionList(Microsoft.VisualStudio.TestTools.UITest.Common.UITestActionListSection)">
            <summary>
            Gets the ActionList corresponding to a given section.
            </summary>
            <param name="section">The section name.</param>
            <returns>The corresponding ActionList.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UITest.CreateAndAddParameter(Microsoft.VisualStudio.TestTools.UITest.Common.UITestAction,System.String)">
            <summary>
            Paramterize an action. Create the parameter
            </summary>
            <param name="action">action</param>
            <param name="parameter">The parameter with which to parameterize.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UITest.CreateAndAddParameter(Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIObject,System.String,System.String)">
            <summary>
            Paramterize an action. Create the parameter
            </summary>
            <param name="uiObject">UIObject to be parameterized</param>
            <param name="propertyName">The name of the property to be parameterized</param>
            <param name="parameterName">The parameter name with which to parameterize.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UITest.BindWithCurrentValues">
            <summary>
            Bind the parameters used in the test case with currently loaded values
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UITest.CompareStoredEnvironmentWithCurrentEnvironment">
            <summary>
            Compares the recorder configuration if it exists with the system environment
            captured at startup.
            </summary>
            <returns>list of mismatches. null if Confiuration is not available in the UITest.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UITest.CompareEnvironments(Microsoft.VisualStudio.TestTools.UITest.Common.UITestEnvironment,Microsoft.VisualStudio.TestTools.UITest.Common.UITestEnvironment)">
            <summary>
            Compares the two given UITestEnvironments and returns a list of mismatches.
            </summary>
            <param name="source">source Environment</param>
            <param name="target">target Environmen</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UITest.Equals(System.Object)">
            <summary>
            Overridden Object.Equals. Two UITests are equal if they have Equal actions.
            </summary>
            <param name="other">The other object for equals comparison.</param>
            <returns>True if the two UITest are equal, false otherwise.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UITest.Equals(Microsoft.VisualStudio.TestTools.UITest.Common.UITest)">
            <summary>
            Checks if two UITests are equal if they have Equal actions.
            </summary>
            <param name="uiTest">The other UITest object for equals comparison.</param>
            <returns>True if the two UITest are equal, false otherwise.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UITest.GetHashCode">
            <summary>
            Overridden object.GetHashCode
            </summary>
            <returns>The hashcode of the UITest.</returns>
            <remarks>Overriden as you have to override GetHashCode if you override Equals</remarks>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UITest.AppendByMergingTechnologyElements(System.Collections.Generic.IEnumerable{Microsoft.VisualStudio.TestTools.UITest.Common.UITestAction},Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIMap,System.Boolean)">
            <summary>
            Append a collection of objects and actions.
            </summary>
            <param name="actions">The list of actions.</param>
            <param name="map">The UIMap of the source UITest.</param>
            <param name="updateNames">Fix UIObjectName on action if this parameter is true.</param>
            <returns>The number of actions added.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UITest.FireBeforeExecute(Microsoft.VisualStudio.TestTools.UITest.Common.UITestActionInvoker,Microsoft.VisualStudio.TestTools.UITest.Common.UITest)">
            <summary>
            Fires event before execution.
            </summary>
            <param name="actionInvoker">The action invoker that is executing this test.</param>
            <param name="uiTest">The UITest that is about to execute.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UITest.LogMismatchedSettings(System.Collections.ObjectModel.Collection{Microsoft.VisualStudio.TestTools.UITest.Common.SettingMismatch})">
            <summary>
            Helper function that logs the list of SettingMismatches.
            </summary>
            <param name="mismatchedSettings"></param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UITest.Validate(System.IO.Stream)">
            <summary>
            Validates the given stream agains the UITest xsd.
            </summary>
            <param name="stream">The input stream containing the UITest.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UITest.UITestSchemaValidationHandler(System.Object,Microsoft.VisualStudio.TestTools.UITest.Common.ValidationResult)">
            <summary>
            Default handler for the uitest validation.
            </summary>
            <param name="sender">sender</param>
            <param name="e">validation event args</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UITest.BindActionList(Microsoft.VisualStudio.TestTools.UITest.Common.ActionList)">
            <summary>
            Bind ActionList with appropriate parameter values
            </summary>
            <param name="actionList">The actions list that needs to be binded.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UITest.GetControlTypeForAction(Microsoft.VisualStudio.TestTools.UITest.Common.UITestAction)">
            <summary>
            Gets the control type for the action.
            </summary>
            <param name="action">The action.</param>
            <returns>The ControlType.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UITest.BindActionListWithCurrentValues(Microsoft.VisualStudio.TestTools.UITest.Common.ActionList)">
            <summary>
            Bind ActionList with default parameter values
            <param name="actionList">current action list</param>
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UITest.AddParameterNameToValueMap(Microsoft.VisualStudio.TestTools.UITest.Common.UITestAction)">
            <summary>
            Add parameter name in the action to the value map.
            </summary>
            <param name="anAction">The action whose parameter should be inserted.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UITest.AddParameterAndBindActionWithCurrentValues(Microsoft.VisualStudio.TestTools.UITest.Common.UITestAction)">
            <summary>
            Add parameter to value map and bind action with current values.
            </summary>
            <param name="action">The action.</param>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Common.UITest.AssemblyFileVersion">
            <summary>
            Assembly File Version
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.UITest.Configuration">
            <summary>
            Gets or sets the system environment when this UITest was generated.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.UITest.CurrentActionList">
            <summary>
            Gets or sets the currently selected actionlist.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.UITest.Name">
            <summary>
            Gets or sets the name.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.UITest.Id">
            <summary>
            Gets or sets the id.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.UITest.InitializeActions">
            <summary>
            Gets or sets the initialize action list.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.UITest.ExecuteActions">
            <summary>
            Gets or sets the execute action list.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.UITest.CleanupActions">
            <summary>
            Gets or sets the cleanup action list.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.UITest.OnErrorActions">
            <summary>
            Gets or sets the action list for handling error.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.UITest.Maps">
            <summary>
            Gets the UIMap associated with this UITest
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.UITest.ValueMap">
            <summary>
            Gets ValueMap associated with this UITest
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.UITest.AssemblyVersion">
            <summary>
            Gets or sets the version of the assembly that generated the file.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.UITest.Version">
            <summary>
            Gets or sets the version of the UITest.
            </summary>
        </member>
        <member name="E:Microsoft.VisualStudio.TestTools.UITest.Common.UITest.Saving">
            <summary>
            Event raised before saving any UITest.
            </summary>
        </member>
        <member name="E:Microsoft.VisualStudio.TestTools.UITest.Common.UITest.Executing">
            <summary>
            Event raised before executing any UITest.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITest.Common.UITestActionListSection">
            <summary>
            Enumeration for the different ActionLists in the UITest
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITest.Common.UITestActionEventArgs">
            <summary>
            Represents event argument for the various events raised during execution of an action in UITest.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UITestActionEventArgs.#ctor(Microsoft.VisualStudio.TestTools.UITest.Common.UITestAction)">
            <summary>
            Creates an instance of UITestActionEventArgs.
            </summary>
            <param name="action">The action for the event.</param>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.UITestActionEventArgs.Action">
            <summary>
            Gets the action that has got recorded or played back.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITest.Common.UITestActionInvoker">
            <summary>
            The interpreter and codegeneration will implement
            this interface and pass it to the UIAction.Invoke method.
            The implementation of this interface will contain specifics
            of invoking the appropriate action type.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UITestActionInvoker.Invoke(Microsoft.VisualStudio.TestTools.UITest.Common.ErrorAction,Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIMap)">
            <summary>
            Invoke for ErrorAction.
            </summary>
            <param name="action">The UITest action.</param>
            <param name="map">The UI map.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UITestActionInvoker.Invoke(Microsoft.VisualStudio.TestTools.UITest.Common.WarningAction,Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIMap)">
            <summary>
            Invoke for WarningAction.
            </summary>
            <param name="action">The UITest action.</param>
            <param name="map">The UI map.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UITestActionInvoker.Invoke(Microsoft.VisualStudio.TestTools.UITest.Common.VerifyConfigurationAction,Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIMap)">
            <summary>
            Invoke for VerifyConfigurationAction.
            </summary>
            <param name="action">The UITest action.</param>
            <param name="map">The UI map.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UITestActionInvoker.Invoke(Microsoft.VisualStudio.TestTools.UITest.Common.NoOperationAction,Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIMap)">
            <summary>
            Invoke for NoOperationAction.
            </summary>
            <param name="action">The UITest action.</param>
            <param name="map">The UI map.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UITestActionInvoker.Invoke(Microsoft.VisualStudio.TestTools.UITest.Common.StringAssertAction,Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIMap)">
            <summary>
            Invoke for StringAssertAction.
            </summary>
            <param name="action">The UITest action.</param>
            <param name="map">The UI map.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UITestActionInvoker.Invoke(Microsoft.VisualStudio.TestTools.UITest.Common.AssertAction,Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIMap)">
            <summary>
            Invoke for AssertAction.
            </summary>
            <param name="action">The UITest action.</param>
            <param name="map">The UI map.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UITestActionInvoker.Invoke(Microsoft.VisualStudio.TestTools.UITest.Common.MarkerAction,Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIMap)">
            <summary>
            Invoke for MarkerAction.
            </summary>
            <param name="action">The UITest action.</param>
            <param name="map">The UI map.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UITestActionInvoker.Invoke(Microsoft.VisualStudio.TestTools.UITest.Common.TestStepMarkerAction,Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIMap)">
            <summary>
            Invoke for TestStepMarkerAction.
            </summary>
            <param name="action">The UITest action.</param>
            <param name="map">The UI map.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UITestActionInvoker.SearchAndInvoke(Microsoft.VisualStudio.TestTools.UITest.Common.UITestAction,Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIMap,Microsoft.VisualStudio.TestTools.UITest.Common.CustomInvoker)">
            <summary>
            Invokes delegate on the action.
            </summary>
            <param name="action">The UITest action.</param>
            <param name="map">The UI map.</param>
            <param name="invoker">the function to be invoked</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UITestActionInvoker.Invoke(Microsoft.VisualStudio.TestTools.UITest.Common.MouseAction,Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIMap)">
            <summary>
            Invoke for MouseAction.
            </summary>
            <param name="action">The UITest action.</param>
            <param name="map">The UI map.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UITestActionInvoker.Invoke(Microsoft.VisualStudio.TestTools.UITest.Common.DelayAction,Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIMap)">
            <summary>
            Invoke for DelayAction.
            </summary>
            <param name="action">The UITest action.</param>
            <param name="map">The UI map.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UITestActionInvoker.Invoke(Microsoft.VisualStudio.TestTools.UITest.Common.DragAction,Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIMap)">
            <summary>
            Invoke for DragAction.
            </summary>
            <param name="action">The UITest action.</param>
            <param name="map">The UI map.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UITestActionInvoker.Invoke(Microsoft.VisualStudio.TestTools.UITest.Common.DragDropAction,Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIMap)">
            <summary>
            Invoke for DragDropAction.
            </summary>
            <param name="action">The UITest action.</param>
            <param name="map">The UI map.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UITestActionInvoker.Invoke(Microsoft.VisualStudio.TestTools.UITest.Common.SendKeysAction,Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIMap)">
            <summary>
            Invoke for SendKeysAction.
            </summary>
            <param name="action">The UITest action.</param>
            <param name="map">The UI map.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UITestActionInvoker.Invoke(Microsoft.VisualStudio.TestTools.UITest.Common.SetValueAction,Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIMap)">
            <summary>
            Invoke for SetValueAction.
            </summary>
            <param name="action">The UITest action.</param>
            <param name="map">The UI map.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UITestActionInvoker.Invoke(Microsoft.VisualStudio.TestTools.UITest.Common.SetStateAction,Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIMap)">
            <summary>
            Invoke for SetStateAction.
            </summary>
            <param name="action">The UITest action.</param>
            <param name="map">The UI map.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UITestActionInvoker.Invoke(Microsoft.VisualStudio.TestTools.UITest.Common.KeyboardAction,Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIMap)">
            <summary>
            Invoke for KeyboardAction.
            </summary>
            <param name="action">The UITest action.</param>
            <param name="map">The UI map.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UITestActionInvoker.Invoke(Microsoft.VisualStudio.TestTools.UITest.Common.SharedStepsReferenceAction,Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIMap)">
            <summary>
            Invoke for SharedStepsReferenceAction.
            </summary>
            <param name="action">The UITest action.</param>
            <param name="map">The UI map.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UITestActionInvoker.Invoke(Microsoft.VisualStudio.TestTools.UITest.Common.MediaAction,Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIMap)">
            <summary>
            Invoke for MediaAction.
            </summary>
            <param name="action">The UITest action.</param>
            <param name="map">The UI map.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UITestActionInvoker.Invoke(Microsoft.VisualStudio.TestTools.UITest.Common.InvokeAction,Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIMap)">
            <summary>
            Invoke for InvokeAction.
            </summary>
            <param name="action">The InvokeAction.</param>
            <param name="map">The UIMap</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UITestActionInvoker.Invoke(Microsoft.VisualStudio.TestTools.UITest.Common.TouchAction,Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIMap)">
            <summary>
            Invoke for TouchAction.
            </summary>
            <param name="action">The TouchAction.</param>
            <param name="map">The UIMap</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UITestActionInvoker.WaitForThinkTime(Microsoft.VisualStudio.TestTools.UITest.Common.UITestAction)">
            <summary>
            If required, waits appropriately for the think time of the action.
            </summary>
            <param name="action">The action being executed.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UITestActionInvoker.Cancel">
            <summary>
            Cancels the action that is currently being invoked.
            </summary>
            <remarks>
            The Cancel() call is made on the separate thread.
            </remarks>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UITestActionInvoker.Dispose">
            <summary>
            Performs application-defined tasks of cleaning up resources.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.UITestActionInvoker.InRetryMode">
            <summary>
            Gets or sets a flag to indicate whether the UITestActionInvoker is in
            retry mode or not. The default is false.
            </summary>
            <remarks>
            Some invoker may want to do special handling when in retry mode.
            </remarks>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITest.Common.CustomInvoker">
            <summary>
            Delegate for invoking custom actions.
            </summary>
            <param name="action">The UITest action.</param>
            <param name="map">The UI map.</param>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITest.Common.QueryId">
            <summary>
            Class to manipulate QueryId string.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.QueryId.#ctor(System.String)">
            <summary>
            Create QueryId from string representation.
            </summary>
            <param name="queryIdString">The queryId string.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.QueryId.ToString">
            <summary>
            Return string representation of QueryId.
            </summary>
            <returns>String representation of QueryId.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.QueryId.GetQueryString(System.Int32,System.Int32)">
            <summary>
            Get queryString.
            </summary>
            <param name="startIndex">The start index in list of single queryIds.</param>
            <param name="lastIndex">The last index in the list of single queryIds.</param>
            <returns>The string queryId of element.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.QueryId.GetIndexOfExpandableElement(System.Int32)">
            <summary>
            Get the index of expandable node statring from given index.
            </summary>
            <param name="startIndex">The starting index.</param>
            <returns>The index of expandable index if found else index of last element.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.QueryId.ParseQueryId(System.String)">
            <summary>
            Parses the complete queryId string and returns the QId list
            of individual QIds
            </summary>
            <param name="queryIdString">QueryId string to parse</param>
            <returns>List of QIds in the string representation</returns>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.QueryId.SingleQueryIds">
            <summary>
            List of all single queryId.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITest.Common.SingleQueryId">
            <summary>
            Represent queryId of a single UI element.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.SingleQueryId.#ctor(System.String)">
            <summary>
            Create SingleQueryId from string representation.
            </summary>
            <param name="queryString"></param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.SingleQueryId.AddTechnologyAttribute(System.String)">
            <summary>
            Add a technology attribute into this qid.
            </summary>
            <param name="attribute">The attribute to add.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.SingleQueryId.GetQueryPropertyIndex(System.String)">
            <summary>
            Helper function to get the index of the specified property in queryproperties
            </summary>
            <param name="propertyName">Property Name</param>
            <returns>Index of the property if found, -1 else</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.SingleQueryId.UpdatePropertyValue(System.String,System.Object)">
            <summary>
            Helper function to update  of the specified property in queryproperties
            </summary>
            <param name="propertyName">Property Name</param>
            <returns>Index of the property if found, -1 else</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.SingleQueryId.GetQueryPropertyValue(System.String)">
            <summary>
            Helper function to get the value of the specified property in queryproperties
            </summary>
            <param name="propertyName">Property Name</param>
            <returns>Value of the property</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.SingleQueryId.ToString">
            <summary>
            Convert SingleQueryId into its string representation.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.SingleQueryId.TechnologyAttributes">
            <summary>
            Technology attribute e.g. MSAA, IEDOM, VisibleOnly etc.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.SingleQueryId.SearchProperties">
            <summary>
            List of QueryProperties.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.SingleQueryId.FilterProperties">
            <summary>
            List of filter properties. 
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.SingleQueryId.IsExpandable">
            <summary>
            True if this is expandable node.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITest.Common.ExpandableUIElementRoles">
            <summary>
            Contains roles of all UIElement which can be expanded.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITest.Common.RecorderErrorEventArgs">
            <summary>
            Class used to send additional information for the error generated
            in background recording.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.RecorderErrorEventArgs.#ctor(System.Exception)">
            <summary>
            Constructor.
            </summary>
            <param name="exception">Exception that caused the error.</param>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Common.RecorderErrorEventArgs.exception">
            <summary>
            The exception that caused error in the recorder.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.RecorderErrorEventArgs.Exception">
            <summary>
            The exception that caused the error in the recorder.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITest.Common.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.Resources.ActionErrorMessage">
            <summary>
              Looks up a localized string similar to Error executing action: {0}.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.Resources.ActionFailed">
            <summary>
              Looks up a localized string similar to Action failed.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.Resources.BrowserVersionNotDetected">
            <summary>
              Looks up a localized string similar to Unable to detect Internet Explorer version. Please install one of the supported versions and try again..
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.Resources.BrowserVersionNotSupported">
            <summary>
              Looks up a localized string similar to Internet Explorer {0}.{1} is currently not supported..
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.Resources.CheckPhraseMismatchErrorMessage">
            <summary>
              Looks up a localized string similar to The encoding key file or key length is different from the encoding settings used during the recording..
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.Resources.DecodingFailedExceptionMessage">
            <summary>
              Looks up a localized string similar to The following error occurred while attempting to decode encrypted text: {0}.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.Resources.EncryptionKeyLocationNotFoundMessage">
            <summary>
              Looks up a localized string similar to The file location for the following EncryptionKeyLocation parameter is not valid: {0}..
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.Resources.FindControlDuration">
            <summary>
              Looks up a localized string similar to Find control operation took {0} milliseconds..
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.Resources.FindMatchinControlsSkipIntermediate">
            <summary>
              Looks up a localized string similar to FindMatchingControls threw exception - {0}. Attempting to find at least one control by skipping intermediate elements.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.Resources.FindMatchingControlsDuration">
            <summary>
              Looks up a localized string similar to Find Matching Control was performed with {0} and took {1} milliseconds..
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.Resources.IgnoreExceptionForContinueOnError">
            <summary>
              Looks up a localized string similar to Ignoring exception as ContinueOnError is set..
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.Resources.IgnoreExceptionForRetry">
            <summary>
              Looks up a localized string similar to Ignoring exception as PlaybackErrorOption.Retry was chosen..
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.Resources.IgnoreExceptionForSkip">
            <summary>
              Looks up a localized string similar to Ignoring exception as PlaybackErrorOption.Skip was chosen..
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.Resources.InvalidKeyFile">
            <summary>
              Looks up a localized string similar to {0} file has fewer bytes than encryption key length specified..
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.Resources.InvalidUriFormatError">
            <summary>
              Looks up a localized string similar to {0} is not a valid uri format.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.Resources.IterateActionIdError">
            <summary>
              Looks up a localized string similar to Failed to find valid action range to execute..
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.Resources.ModifierKeyPressed">
            <summary>
              Looks up a localized string similar to Modifier key pressed : {0}.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.Resources.ModifierKeyPressedOnControl">
            <summary>
              Looks up a localized string similar to Modifier key pressed : {0} on control type : {1}  name : {2}.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.Resources.ModifierKeyReleased">
            <summary>
              Looks up a localized string similar to Modifier key released : {0}.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.Resources.ModifierKeyReleasedOnControl">
            <summary>
              Looks up a localized string similar to Modifier key released : {0} on control type : {1}  name : {2}.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.Resources.ParameterNotExisting">
            <summary>
              Looks up a localized string similar to The row to be bound does not have values for all of the parameters..
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.Resources.SettingMismatchMessage">
            <summary>
              Looks up a localized string similar to The settings do not match the values that were used to record. Mismatch type = {0}, Group = {1}, WarningLevel = {2}, Name = {3}, SourceValue = {4}, TargetValue = {5}.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.Resources.SkipIntermediateAncestorElement">
            <summary>
              Looks up a localized string similar to The element {0} was not found, so all intermediate elements of the target element were ignored. To improve performance fix this element&apos;s search properties or exclude it from Query Id. If this element is the target element, replace or remove intermediate elements..
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.Resources.SkipIntermediateTargetElement">
            <summary>
              Looks up a localized string similar to The target element {0} was not found, so all intermediate elements were ignored. As a result, an incorrect element that matches the target element&apos;s search properties can be found. Verify that all intermediate elements in Query Id have valid and unique search properties..
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.Resources.SkippingFailedAction">
            <summary>
              Looks up a localized string similar to Skipping failed action as ContinueOnError is true..
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.Resources.SmartMatch">
            <summary>
              Looks up a localized string similar to Unable to find window with &apos;{0}&apos; in the title. Control with Friendly Name &apos;{1}&apos; was found instead and is being used. Verify that a window with the title &apos;{2}&apos; exists..
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.Resources.SmartMatchAlternateWindow">
            <summary>
              Looks up a localized string similar to Control with Friendly Name : &apos;{0}&apos; was found instead and is being used..
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.Resources.SmartMatchWarning">
            <summary>
              Looks up a localized string similar to Unable to find window with &apos;{0}&apos; in the title..
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.Resources.StandardErrorMessageString">
            <summary>
              Looks up a localized string similar to Test method {0} threw exception:.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.Resources.UITestSchemaValidationError">
            <summary>
              Looks up a localized string similar to Error validating the UITest xml: {0}.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.Resources.UnBoundParameter">
            <summary>
              Looks up a localized string similar to The following parameter is not bound to a specific value: {0}..
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIMap">
            <summary>
            This class manages the UI map of an UITest mainly for serialization and deserialization.
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIMap.#ctor">
            <summary>
            Constructs a UIMap.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIMap.AddUIObjects(System.Collections.Generic.IEnumerable{Microsoft.VisualStudio.TestTools.UITest.Extension.IUITechnologyElement})">
            <summary>
            Adds UITechnologyElements to this UIMap.
            </summary>
            <param name="uiElements">The list of IUITechnologyElement.</param>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIMap.AddUIObject(Microsoft.VisualStudio.TestTools.UITest.Extension.IUITechnologyElement)">
            <summary>
            Adds UITechnologyElement to this UIMap.
            </summary>
            <param name="uiElements">The </param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIMap.MergeUIObject(Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIMap,System.String)">
            <summary>
            Merges an UIObject in this UIMap.
            </summary>
            <param name="objectName">The full name of the object to merge.</param>
            <param name="uiMap">The source UIMap from where to merge.</param>
            <returns>The merged UIObject</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIMap.GetTopLevelElement(Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIObject)">
            <summary>
            Gets the top element that contains the given UIObject.
            </summary>
            <param name="uiObject">The UI object whose top level element will be returned.</param>
            <returns>The top level element containing the ui object. returns null if not found.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIMap.GetCount">
            <summary>
            Gets the number of objects in this UIMap.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIMap.Clear">
            <summary>
            Removes all objects in this UIMap.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIMap.Contains(Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIObject)">
            <summary>
            Checks if the given object exists in this UIMap.
            </summary>
            <param name="uiObject">The object to be searched.</param>
            <returns>True if object exists, false otherwise.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIMap.Remove(Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIObject)">
            <summary>
            Removes the given object from this UIMap.
            </summary>
            <param name="uiObject">The object to be removed.</param>
            <returns>True if object removed false otherwise. returns false if object not found.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIMap.GetEnumerator">
            <summary>
            Returns enumerator that can enumerate through all the objects in this UIMap
            including top level windows.
            </summary>
            <returns>The enumerator for the UIMap.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIMap.GetQueryIdFromId(System.String)">
            <summary>
            Gets the query Id of the given UIObject.
            </summary>
            <param name="uiObjectId">The Id/Friendly Name of the UIObject.</param>
            <returns>The query Id string for the given UIObject.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIMap.GetUIObjectFromUIObjectId(System.String)">
            <summary>
            Retrieves a UIObject from a given "." separated UIObject name.
            </summary>
            <param name="uiObjectId">The "." separated UIObject name.</param>
            <returns>The UIObject corresponding to the input</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIMap.GetUIObjectNameForAction(Microsoft.VisualStudio.TestTools.UITest.Common.UITestAction)">
            <summary>
            Gets the name of the UIObject corresponding to the given action.
            </summary>
            <param name="action">The action under consideration.</param>
            <returns>The name of the UIObject added for action.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIMap.GetUIObjectNameForElement(Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyElement)">
            <summary>
            Gets the name of the UIObject corresponding to the given element. 
            </summary>
            <param name="element">the UITechnology Element</param>
            <returns>the name of the UIObject added for action's element in this map</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIMap.BindParameters(Microsoft.VisualStudio.TestTools.UITest.Extension.ValueMap)">
            <summary>
            Binds the parameters used in the objects in the map with the values specified in the value map.
            </summary>
            <param name="valueMap">The value map</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIMap.AddToElementDictionary(Microsoft.VisualStudio.TestTools.UITest.Extension.IUITechnologyElement,Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIObject)">
            <summary>
            Adds the given element and UIObject pair to the element dictionary.
            </summary>
            <param name="element">the element to be added</param>
            <param name="uiObject">the UIObject to be added</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIMap.GetExistingTopLevelElement(Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.TopLevelElement)">
            <summary>
            Find the existing top level element in this UIMap. This is called while adding 
            new top level element to UI map.
            </summary>
            <param name="newWindow">the new top level element to searched into existsing windows.</param>
            <returns>the existing top level element. null if top level does not exists.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIMap.AddTopLevelElement(Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.TopLevelElement,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Add top level window to UI map.
            </summary>
            <param name="window">The top level window to be added.</param>
            <param name="excludeId">Ids that should not be used for toplevel windows.</param>
            <returns>Added top level window object.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIMap.GetTopLevelElementFromId(System.String)">
            <summary>
            Given an id this iterates over the toplevelelement
            list and returns a matching element.
            </summary>
            <param name="elementId"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIMap.TryGetTopLevelElementFromId(System.String)">
            <summary>
            Given an id this iterates over the toplevelelement list and returns a matching element.
            </summary>
            <param name="elementId">The id of the top level element.</param>
            <returns>The toplevel element if it exists; null if doesn't.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIMap.GetElementsInOrder(Microsoft.VisualStudio.TestTools.UITest.Extension.IUITechnologyElement)">
            <summary>
            This method recursively finds out the ancestor elements of the 
            given element and returns an array starting from the TopMost 
            element to the input element inclusive.
            </summary>
            <param name="element">element for which the list of elements
            is needed</param>
            <returns>array of IUITechnologyElements </returns>
            <remarks>The return array doesn't include the top Level Element of the IUITechnologyElement</remarks>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIMap.BuildIdDictionary">
            <summary>
            Recursively build the object id hash table.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIMap.BuildIdDictionaryInternal(Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIObject)">
            <summary>
            Recursively build the object id hash table.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIMap.idDictionary">
            <summary>
            Hash of object ids. This is used for merging back existing played back objects.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIMap.excludeTopLevelId">
            <summary>
            Ids to be excluded from the list of valid toplevel window ids.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIMap.elementDictionary">
            <summary>
            Hash of IUITechnologyElements that are added. This is used for merging newly 
            recorded or rerecorded objects.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIMap.AddExcludeTopLevelIds(System.Collections.Generic.IEnumerable{Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.TopLevelElement})">
            <summary>
            Adds the list of top level window ids that should not be generated while 
            creating/merging new elements.
            </summary>
            <param name="topLevelElements">The collection of TopLevelElements whose 
            ids should not be regenerated.</param>
            <remarks>While merging UIElements across two UITest there maybe 
            a situation where a re-record creates elements with the same id
            as a subsequent playback will bring in. This will make the subsequent
            played actions to point to wrong elements and fail to playback in a 
            subsequent run.</remarks>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIMap.GetTopLevelElementFromUIMapId(System.String,System.String@)">
            <summary>
            Takes a complete uimap id and locates the Id of the TopLevelElement
            within it and uses it to locate the TopLevelElement and returns it.
            The input Id need not be a TopLevelElement Id but can be an Id of any
            UIObject
            </summary>
            <param name="uiObjectId">Id of the UIObject</param>
            <returns>TopLevelElement of the UIObject/ the UIObject itself
            if it represents a toplevelElement.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIMap.GetTopLevelElementFriendlyName(System.String)">
            <summary>
            Given a UIObjectId this method returns the part of the Id
            that represents the TopLevelElement.
            </summary>
            <param name="uiObjectName">UIObject name</param>
            <returns>UIMapId.TopLevelElementId</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIMap.GetContainerFriendlyName(System.String)">
            <summary>
            Given a UIObjectId this method returns the part of the Id
            that represents its container.
            </summary>
            <param name="uiObjectName">UIObject name</param>
            <returns>uiObject's immediate container</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIMap.IsTopLevelElementId(System.String)">
            <summary>
            This checks to see if the input objectid represents
            a toplevel window or not.
            </summary>
            <param name="uiObjectName">name of the UIObject</param>
            <returns>true if name represents toplevelwindow, 
            false otherwise</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIMap.ContainsExpandableAncestor(System.String)">
            <summary>
            Return true if the UIObject is descendent of some expandable control.
            </summary>
            <param name="checkBoxObject">The UIObject.</param>
            <returns>True if the UIObject is descendent of some expandable control</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIMap.IsRoleOrControlTypeOfExpandableControl(Microsoft.VisualStudio.TestTools.UITest.Extension.QueryCondition)">
            <summary>
            Checks if the property condition specifies role that is expandable control.
            </summary>
            <param name="qCond">The condition.</param>
            <returns>True or false.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIMap.GetAllUIElements(System.String)">
            <summary>
            Returns the list of all UIObjects in an object id.
            </summary>
            <param name="uiObjectId">The object id.</param>
            <returns>List of all UIObjects in the object id.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIMap.ParentElementId(System.String)">
            <summary>
            This returns the Id of the parent of the given UIObject.
            In case there is no parent returns empty string.
            ie:
            passing "A.B.C" returns  "A.B"
            passing "A.B" return string.empty.
            </summary>
            <param name="uiObjectName">The UIObjectName</param>
            <returns>Id of Parent UIObject/ empty if there
            is no parent</returns>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIMap.Id">
            <summary>
            Gets or sets the id of this UI map.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIMap.TopLevelWindows">
            <summary>
            Gets top level windows in this UI map.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIMap.FileName">
            <summary>
            Gets or sets the file name for serialization/deserialization.
            </summary>
            <remarks>FileName property is not persisted.</remarks>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIMap.IdDictionary">
            <summary>
            Dictionary of the UIObject Ids
            </summary>
            <remarks>This is lazy initialized because the file could've been 
            created out of serialization and hence the Ids are not filled. However, on
            first access we create the list.</remarks>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIMap.ElementDictionary">
            <summary>
            Element dictionary.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIMap.Enumerator">
            <summary>
            An enumerator over all objects (including top level window) in this UIMap.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIMap.Enumerator.#ctor(Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIMap)">
            <summary>
            Construct the enumerator for UIMap.
            </summary>
            <param name="map">The enumerator is built for this UI map.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIMap.Enumerator.MoveNext">
            <summary>
            Move to next element.
            </summary>
            <returns>true if there is next element false otherwise.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIMap.Enumerator.System#IDisposable#Dispose">
            <summary>
            Dispose the enumerator.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIMap.Enumerator.Reset">
            <summary>
            Not supported.
            </summary>
            <remarks>see http://msdn2.microsoft.com/en-us/library/78dfe2yb.aspx.</remarks>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIMap.Enumerator.MoveToNextTopLevelElement">
            <summary>
            Move to next top level window in this UIMap.
            </summary>
            <returns>true if there exists next top level window false otherwise.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIMap.Enumerator.MoveToNextUIObject">
            <summary>
            Move the enumerator to next UIObject in this UIMap.
            </summary>
            <returns>true if there exists next UIObject false otherwise.</returns>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIMap.Enumerator.Current">
            <summary>
            Get the current object pointed by this enumerator in this UIMap.
            </summary>
            <remarks>see http://msdn2.microsoft.com/en-us/library/58e146b7(VS.80).aspx</remarks>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIMap.Enumerator.System#Collections#IEnumerator#Current">
            <summary>
            Get the current object pointed by this enumerator in this UIMap.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.Resource">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.Resource.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.Resource.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.Resource.AncestorInstanceInfo">
            <summary>
              Looks up a localized string similar to {0} numbered {1} in {2}.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.Resource.FormattedFriendlyName">
            <summary>
              Looks up a localized string similar to &apos;{0}&apos;.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.Resource.HierarchicalNameDelimiter">
            <summary>
              Looks up a localized string similar to  -&gt; .
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.Resource.IDNotFoundExceptionMessage">
            <summary>
              Looks up a localized string similar to ID not found in UI map..
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.Resource.IncorrectUIObjectId">
            <summary>
              Looks up a localized string similar to The UIObject Id {0} is of incorrect format..
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.Resource.NextToInfo">
            <summary>
              Looks up a localized string similar to first {0} next to {1}.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.Resource.NextToInstanceInfo">
            <summary>
              Looks up a localized string similar to {0} numbered {1} next to {2}.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.Resource.TopLevelWindowNotFound">
            <summary>
              Looks up a localized string similar to The TopLevelWindow with Id {0} was not found..
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.Resource.UIObjectNotFound">
            <summary>
              Looks up a localized string similar to The UIObject with Id {0} was not found..
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.Resource.UnknownControlName">
            <summary>
              Looks up a localized string similar to Unknown name.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.SpecialControlType">
            <summary>
            Special types of a control.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.SpecialControlType.None">
            <summary>
            Normal top level window.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.SpecialControlType.BrowserWindow">
            <summary>
            Top level browser Window
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.SpecialControlType.DocumentWindow">
            <summary>
            IES for IE Window
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.TopLevelElement">
            <summary>
            Defines a top-level element, typically window, in the UIMap.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIObject">
            <summary>
            Defines a UI object in the UIMap.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIObject.#ctor">
            <summary>
            Creates an UIObject.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIObject.Clone">
            <summary>
            Creates a clone of the object
            </summary>
            <returns>Copy of the object</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIObject.FillDetails(Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIObject)">
            <summary>
            Helper function to fill the UIOBject with details
            </summary>
            <param name="targetObject">Object to be filled with data</param>
            <returns>Returns the filled object</returns>
            <remarks>No information about the heirarchy (Ancestor or Descendants) will be stored</remarks>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIObject.Add(Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIObject)">
            <summary>
            Adds the given UIObject to this UIObject's descendants.
            </summary>
            <param name="uiObject">The UIObject to be added.</param>
            <returns>The newly added object or already existing object.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIObject.Remove(System.String)">
            <summary>
            Removes the given UIObject from the descendants of this UIObject.
            </summary>
            <param name="objectId">The id of object to be removed.</param>
            <returns>True if object removed, false otherwise.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIObject.Remove(Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIObject)">
            <summary>
            Removes the given UIObject from the descendants of this UIObject.
            </summary>
            <param name="uiObject">object to be removed.</param>
            <returns>true if object removed false otherwise.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIObject.Contains(System.String)">
            <summary>
            Checks if the given UIObject is present in the descendants of this UIObject.
            </summary>
            <param name="objectId">The id of the UIObject.</param>
            <returns>True if UIObject present, false otherwise.</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIObject.GetExistingObject(Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIObject)" -->
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIObject.GetUIObjectFromId(System.String)">
            <summary>
            Searches for existsing UIObject in the descendants of this UIObject.
            </summary>
            <param name="id">The id of the UIObject to searched.</param>
            <returns>The UIObject if search is successful, null otherwise.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIObject.GetUIObjectFromPartialUIObjectId(System.String)">
            <summary>
            Gets UIObject from a "." separated UIObject Id.
            </summary>
            <param name="partialuiObjectId">The "." separated partial UIObject Id.</param>
            <returns>The UIObject corresponding to the given Id.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIObject.ToString">
            <summary>
            The string representation of this UIObject (i.e. the query Id).
            </summary>
            <returns>The query Id string of the UIObject.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIObject.ParameterizeProperty(System.String,System.String)">
            <summary>
            Paramterizes a property of the UIObject.
            </summary>
            <param name="propertyName">The name of the property to be parameterized</param>
            <param name="parameterName">The parameter name with which to parameterize.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIObject.BindParameters(Microsoft.VisualStudio.TestTools.UITest.Extension.ValueMap)">
            <summary>
            Binds parameters used in the properties of the UIObject.
            </summary>
            <param name="valueMap">The value map.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIObject.GetQueryString(System.String)">
            <summary>
            Gets the query Id of the UIObject specified with the partialId.
            </summary>
            <param name="partialId">The partial Id of the UIObject for which the query id is needed.</param>
            <returns>queryId of the given uimapobject</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIObject.GetQueryString">
            <summary>
            Gets the query Id of this element without it's parent's query Id.
            </summary>
            <returns>The query id.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIObject.AddWindowTitle(System.Collections.Generic.IList{System.String},System.Int32)">
            <summary>
            Helper function to add specific window title to the UIObject titles
            </summary>
            <param name="sourceWindowTitles">Windows Titles</param>
            <param name="titleIndex">Title Index to be added</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIObject.AddWindowTitles(System.Collections.Generic.IList{System.String})">
            <summary>
            Helper function to add window titles to the UIObject titles
            </summary>
            <param name="sourceWindowTitles">Windows Titles to be added</param>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIObject.IdComparer">
            <summary>
            Comparer used for comparison of UIOBject Ids.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIObject.TitleExists(System.Collections.Generic.IList{System.String},System.String)">
            <summary>
            Helper function to check if the list of strings contains the specified
            string
            </summary>
            <param name="windowTitles">List of window titles</param>
            <param name="tileToMatch">Title to match</param>
            <returns>True if found</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIObject.CompareTitles(System.String,System.String)">
            <summary>
            Helper function to compare the titles
            </summary>
            <param name="sourceTitle">Title to compare</param>
            <param name="titleToCompare">Title to compare</param>
            <returns>True if same</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIObject.GetQueryString(System.Boolean)">
            <summary>
            Gets the query id.
            </summary>
            <param name="generatingTopLevelElement">Whether this is part of generating query id for TLE or not.</param>
            <returns>The query id.</returns>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIObject.searchConfigurationsList">
            <summary>
            List of search Configurations
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIObject.cachedQueryString">
            <summary>
            Cached Query String
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIObject.windowTitles">
            <summary>
            window titles
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIObject.Name">
            <summary>
            Gets or sets the name of the UIObject.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIObject.ControlType">
            <summary>
            Gets or sets the control type of the UIObject.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIObject.TechnologyName">
            <summary>
            Gets or sets the technology name(e.g. Web, MSAA, UIA) for the UIObject.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIObject.Id">
            <summary>
            Gets or sets the unique id of the UIObject in object repository.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIObject.FriendlyName">
            <summary>
            Gets or sets the friendly name of the UIObject in object repository.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIObject.SpecialControlType">
            <summary>
            Gets or sets the special type of the UIObject.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIObject.SessionId">
            <summary>
            Gets or sets the identifier a ToplLevelElement for the recording session.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIObject.QueryId">
            <summary>
            Gets or sets the query Id used for searching the UIObject.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIObject.WindowTitles">
            <summary>
            Gets or sets the window titles of the top level window.  The control is located 
            under a top level window which has any of these titles.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIObject.SearchConfigurations">
            <summary>
            Gets or sets the array of search configurations for the UIObject.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIObject.Ancestor">
            <summary>
            Gets or sets the ancestor for the UIObject. This is used internally and is not serialized
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIObject.Condition">
            <summary>
            Gets or sets the Condition property.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIObject.SupportLevelWrapper">
            <summary>
            Wrapper for serializing SupportLevel as string. If support is unkown then it is not serialized.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIObject.SupportLevel">
            <summary>
            The acutal Support Level with which the current technology supports this UIObject.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIObject.Item(System.String)">
            <summary>
            Gets the UIObject with given id.
            </summary>
            <param name="id">id of the UIObject.</param>
            <returns>UIObject in top level window.</returns>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIObject.Descendants">
            <summary>
            Gets all UIObjects contained within this UIObject.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIObject.CacheQueryString">
            <summary>
            Gets or sets if the QueryString construction is cached.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIObject.IdDictionary">
            <summary>
            The hash of all the descendants of the current window.
            </summary>
            <remarks>We use the lazy initialization because in case the file is serialized
            the hash will be empty and on the first access we'll populate it.</remarks>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.TopLevelElement.#ctor">
            <summary>
            Constructs a new TopLevelElement object.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.TopLevelElement.GetQueryString">
            <summary>
            Gets the query Id of this element without it's parent's query Id.
            </summary>
            <returns>The query id.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.TopLevelElement.Clone">
            <summary>
            ICloneable implementation
            </summary>
            <returns>Copy of the object</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.ObjectMap.UIObjectUtil.GetFriendlyNameAndTypeName(System.String,Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIMap,System.String@)">
            <summary>
            Get friendly name and type name for a given dot separated UI Object Name.
            </summary>
            <param name="uObjectName">The dot separated UI Object name. This is needed for ancestor information.</param>
            <param name="map">The UI Map. This is needed to get the ancestor of an object.</param>
            <param name="friendlyTypeName">Returned value for the friendly type name.</param>
            <returns>The friendly name of the UI Object.</returns>
            <remarks>Use this in scenarios where the ancestor of UI object is not set.</remarks>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.ObjectMap.UIObjectUtil.GetUIObject(Microsoft.VisualStudio.TestTools.UITest.Common.UITestAction,Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIMap)">
            <summary>
            Get the UI object given an action and a UI map.
            </summary>
            <param name="action">The UI action.</param>
            <param name="map">The UI map.</param>
            <returns>The UIObject for the action.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.ObjectMap.UIObjectUtil.GetUIObject(System.String,Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIMap)">
            <summary>
            Get the UI object given an action and a UI map.
            </summary>
            <param name="uiObjectName">hierarchical name of the object</param>
            <param name="map">The UI map.</param>
            <returns>The UIObject for the given name.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.ObjectMap.UIObjectUtil.GetControlType(Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIObject)">
            <summary>
            Get control type for the UI Object.
            </summary>
            <param name="uiObject">The given UI Object</param>
            <returns>The control type of the UI Object.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.ObjectMap.UIObjectUtil.GetFriendlyNameFromObject(Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIObject)">
            <summary>
            Returns friendly name of the object passed to it. Before returning, it trims it
            and puts it in quotes.
            </summary>
            <param name="uiObject">The UIObject under consideration</param>
            <returns>frineldy name of the object after processing it</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.ObjectMap.UIObjectUtil.GetFriendlyTypeName(Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIObject)">
            <summary>
            Get the friendly type name of the UI Object.
            </summary>
            <param name="uiObject">The UI object.</param>
            <returns>The friendly type name.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.ObjectMap.UIObjectUtil.GetFriendlyName(Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIObject)">
            <summary>
            Get friendly name for the UIObject.
            </summary>
            <param name="uiObject">The UI Object.</param>
            <returns>The friendly name of the UI Object.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.ObjectMap.UIObjectUtil.GetAncestorInformation(System.String,Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIMap,System.String@)">
            <summary>
            If no friendly name is found on the element for a particular action, element's ancestor
            is searched for a better friendly name. This method returns the newly generated friendly
            name which gives the position of the element in its ancestor along with the ancestor's
            information
            </summary>
            <param name="uiObject">The given dot separated UI Object Name.</param>
            <param name="map">The UI Map. This is needed to get the ancestor of an object.</param>
            <param name="ancestorTypeFriendlyName">The returned value of friendly type name of the ancestor.</param>
            <returns>The friendly type name of the ancestor.</returns>
            <remarks>Strangely, when the UI object is deserialized from an XML file, the ancestor information
            for UI Object is not filled. Therefore we cannot rely on uiObject.Ancestor. That is the reason
            we pass around UIMap.
            </remarks>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.ObjectMap.UIObjectUtil.GetFriendlyNameBasedOnPositionInAncestor(Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIObject,Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIObject,System.String@)">
            <summary>
            Get friendly name based on the position from the ancestor and also the ancestor friendly name.
            </summary>
            <param name="uiObject">The uiObject.</param>
            <param name="ancestor">The ancestor uiObject.</param>
            <param name="ancestorTypeFriendlyName">The returned value of the ancestor friendly name.</param>
            <returns>The friendly name based on position in ancestor.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.ObjectMap.UIObjectUtil.GetHierarchicalFriendlyName(Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIMap,System.String)">
            <summary>
            Get hierarchical name for menu or tree items showing the original menu or tree of which
            these are the part
            </summary>
            <param name="map">The UIMap object</param>
            <param name="uiObjectName">The object name for which hierarchical name is to be generated</param>
            <returns>Friendly name for this object displaying the hierarchical lineage</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.ObjectMap.UIObjectUtil.IsHierarchicalPathItem(Microsoft.VisualStudio.TestTools.UITest.Common.UIMap.UIObject)">
            <summary>
            Is this an item for which hierarchical path should be displayed as friendly name of the
            object e.g. menu or tree item
            </summary>
            <param name="uiObject">The object which is to be checked</param>
            <returns>True if this is menu or tree item, else false</returns>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITest.Common.Setting">
            <summary>
            Contains a basic unit of Setting information.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.Setting.#ctor">
            <summary>
            For serialization
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.Setting.#ctor(System.String,System.Object,System.Int32)">
            <summary>
            Creates a name/value pair settings
            </summary>
            <param name="name">setting name</param>
            <param name="value">setting value</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.Setting.Equals(Microsoft.VisualStudio.TestTools.UITest.Common.Setting)">
            <summary>
            Tests equavalence of this Setting with the given target setting.
            Name and value of the two Settings should be equal for this to be true.
            </summary>
            <param name="target">the target setting</param>
            <returns>true if settings match false otherwise</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.Setting.Equals(System.Object)">
            <summary>
            Overriding equals so that if a string is passed then it is compared
            with the Name.
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.Setting.GetHashCode">
            <summary>
            GetHashCode override corresponding to the equals. We should just be returning
            the base HashCode.
            </summary>
            <returns>hashcode</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.Setting.ToString">
            <summary>
            Returns string representation of the Setting.
            </summary>
            <returns>The string representation of the Setting.</returns>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.Setting.Name">
            <summary>
            The name of the setting. The actual value is stored in the base object.
            This property is serialized as attribute.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.Setting.Value">
            <summary>
            The value of this setting.This property is serialized as an attribute
            of this setting.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.Setting.WarningLevel">
            <summary>
            Warninglevel of this setting
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITest.Common.SettingGroup">
            <summary>
            Setting group class definition.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.SettingGroup.#ctor">
            <summary>
            For serialization
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.SettingGroup.#ctor(System.String)">
            <summary>
            Constructor that sets name of the group
            </summary>
            <param name="name">name of the group</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.SettingGroup.ToString">
            <summary>
            Returns string representation of the Setting.
            </summary>
            <returns>The string representation of the Setting.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.SettingGroup.Compare(Microsoft.VisualStudio.TestTools.UITest.Common.UITestEnvironmentContainerBase{Microsoft.VisualStudio.TestTools.UITest.Common.Setting})">
            <summary>
            Overrides the base Compare.Takes a target settings group
            and returns a list of SettingMismatches similar to the 
            UITestEnvironment class.
            </summary>
            <param name="targetSettingGroup">the target setting group</param>
            <returns>collection of mismatched settings</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.SettingGroup.GetAllSettingsAsMismatchedSettings(Microsoft.VisualStudio.TestTools.UITest.Common.MismatchType)">
            <summary>
            Overrides the base method. This returns all the settings in this setting group
            and sets the mismatch type appropriately.
            </summary>
            <param name="mismatchType">The type of the mismatch to be set for all the settings returned</param>
            <returns>collection of setting mismatches for all settings in this group.</returns>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.SettingGroup.GroupName">
            <summary>
            Property that exposes base class Name as GroupName 
            for serialization
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.SettingGroup.Setting">
            <summary>
            The collection of WarninLevel groups in this setting gruop.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITest.Common.UITestActionListEventArgs">
            <summary>
            Represents event argument for the various events raised during execution of ActionList in UITest.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UITestActionListEventArgs.#ctor(Microsoft.VisualStudio.TestTools.UITest.Common.UITestActionListSection)">
            <summary>
            Creates an instance of UITestActionListEventArgs.
            </summary>
            <param name="actionListSection">The ActionListSection associated with this event.</param>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.UITestActionListEventArgs.ActionListSection">
            <summary>
            Gets the UITestActionListSection associated with this event.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITest.Common.UITestErrorEventArgs">
            <summary>
            Represents event argument for the error events raised during UITest execution.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UITestErrorEventArgs.#ctor(Microsoft.VisualStudio.TestTools.UITest.Common.UITestAction,System.Exception)">
            <summary>
            Creates an instance of UITestErrorEventArgs.
            </summary>
            <param name="action">The action whose execution resulted in error.</param>
            <param name="ex">The exception raised during execution.</param>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.UITestErrorEventArgs.Error">
            <summary>
            Gets the exception that caused this event to be raised.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.UITestErrorEventArgs.Result">
            <summary>
            Gets or sets the result of error handling by the handlers listening to this event.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITest.Common.UITestErrorActionResult">
            <summary>
            The various error handling options available to the error handlers.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Common.UITestErrorActionResult.Default">
            <summary>
            The handler chooses to take no action. The default is to throw exception.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Common.UITestErrorActionResult.StopPlaybackAndContinueManually">
            <summary>
            The handler chooses to stop playback and execute actions manually.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Common.UITestErrorActionResult.StopPlaybackAndRerecord">
            <summary>
            The handler wants to stop playback and rerecord afresh.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Common.UITestErrorActionResult.RetryAction">
            <summary>
            The handler wants to retry playback of the failed action.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Common.UITestErrorActionResult.SkipAction">
            <summary>
            The handler wants to ignore the failed action and continue with playback.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITest.Common.UITestEventArgs">
            <summary>
            Represents event argument for the various events raised during execution of UITest.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UITestEventArgs.#ctor(Microsoft.VisualStudio.TestTools.UITest.Common.UITest)">
            <summary>
            Creates an instance of UITestEventArgs.
            </summary>
            <param name="uiTest">The UITest object associated with this event.</param>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.UITestEventArgs.UITest">
            <summary>
            Gets the UITest object associated with this event.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITest.Common.UITestProgressEventArgs">
            <summary>
            Represents event argument for the progress events raised during UITest execution.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UITestProgressEventArgs.#ctor(System.Int32,System.Int32,Microsoft.VisualStudio.TestTools.UITest.Common.UITestAction)">
            <summary>
            Creates an instance of UITestProgressEventArgs.
            </summary>
            <param name="currentStep">The current step index being executed.</param>
            <param name="totalSteps">The total number of steps to be executed.</param>
            <param name="action">The current UI Action being executed.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UITestProgressEventArgs.#ctor(System.Int32,Microsoft.VisualStudio.TestTools.UITest.Common.UITestAction)">
            <summary>
            Creates an instance of UITestProgressEventArgs.
            </summary>
            <param name="thinkTime">The think time used for an action.</param>
            <param name="action">The current UI Action being executed.</param>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.UITestProgressEventArgs.CurrentStep">
            <summary>
            Gets the current step index being executed.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.UITestProgressEventArgs.TotalSteps">
            <summary>
            Gets the total number of steps to be executed.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.UITestProgressEventArgs.ThinkTime">
            <summary>
            Gets the think time used for this action.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.UITestProgressEventArgs.Action">
            <summary>
            Gets the action being played back.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITest.Common.UITestWarningEventArgs">
            <summary>
            Represents event argument for the warning events raised during UITest execution.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UITestWarningEventArgs.#ctor(Microsoft.VisualStudio.TestTools.UITest.Common.UITestAction,System.Exception,System.String)">
            <summary>
            Creates an instance of UITestWarningEventArgs.
            </summary>
            <param name="action">The action whose execution resulted in warning.</param>
            <param name="ex">The exception raised during execution.</param>
            <param name="warning">The warning message.</param>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.UITestWarningEventArgs.Error">
            <summary>
            Gets the exception that caused this event to be raised.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.UITestWarningEventArgs.WarningMessage">
            <summary>
            Gets the warning message.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITest.Common.ActionList">
            <summary>
            The list of actions that forms a UITest.
            </summary>
            <remarks>
            ActionList is a wrapper over List and provides xml serialization/deserialization
            for a list of actions derived from UITestAction.
            </remarks>
            <see cref="T:Microsoft.VisualStudio.TestTools.UITest.Common.ActionListSerializer"/>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.ActionList.#ctor">
            <summary>
            Creates an instance of ActionList.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.ActionList.Equals(System.Object)">
            <summary>
            Overrides Object.Equals. Two ActionList's are equal if they have Equal actions.
            </summary>
            <param name="other">The other object for equals comparison.</param>
            <returns>True if the two ActionList are equal, false otherwise.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.ActionList.Equals(Microsoft.VisualStudio.TestTools.UITest.Common.ActionList)">
            <summary>
            Strongly typed equals method. Two ActionList's are equal if they have Equal actions.
            </summary>
            <param name="actionList">The other ActionList for equals comparison.</param>
            <returns>True if the two ActionList are equal, false otherwise.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.ActionList.GetHashCode">
            <summary>
            Overrides object.GetHashCode
            </summary>
            <returns>The hashcode of the ActionList.</returns>
            <remarks>Overriden as you have to override GetHashCode if you override Equals
            </remarks>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.ActionList.GetActionsOfType``1">
            <summary>
            Enumerates all actions of a given type.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.ActionList.Find(System.Int64)">
            <summary>
            Searches for an action with a given id and returns the action.
            </summary>
            <param name="id">The id of action to be searched.</param>
            <returns>If action with given id is found, returns the action, otherwise returns null.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.ActionList.FindIndex(System.Int64)">
            <summary>
            Searches for an action with a given id and returns the index of action in this list.
            </summary>
            <param name="id">The id of action to be searched.</param>
            <returns>If action with given id is found, returns the index of the action, otherwise returns -1.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.ActionList.Delete(System.Int64)">
            <summary>
            Deletes the action with the given id from the list.
            </summary>
            <param name="id">The id of action to be deleted.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.ActionList.GetRange(System.Int64,System.Int64)">
            <summary>
            Returns a range of actions from the list.
            </summary>
            <param name="startId">The id of the first action of the desired range.</param>
            <param name="stopId">The id of the last action of the desired range.</param>
            <returns>The range of actions.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.ActionList.AddRange(System.Collections.Generic.IEnumerable{Microsoft.VisualStudio.TestTools.UITest.Common.UITestAction})">
            <summary>
            Adds the actions from the specified collection to the end of the list.
            </summary>
            <param name="addActions">The collection of actions to add to the list.</param>
            <returns>The number of actions added.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.ActionList.DeleteRange(System.Int64,System.Int64)">
            <summary>
            Deletes a range of actions.
            </summary>
            <param name="startId">The id of the first action of the range to delete.</param>
            <param name="stopId">The id of the last action of the range to delete.</param>
            <returns>The number of actions deleted.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.ActionList.MoveNext">
            <summary>
            Moves the pointer to the next action.
            </summary>
            <returns>false if the action pointer is at the
            last action.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.ActionList.MovePrevious">
            <summary>
            Moves the pointer to the previous action
            if it exists
            </summary>
            <returns>false if the current action is the first action</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.ActionList.MoveFirst">
            <summary>
            Moves the action pointer to the first action
            if there exists atleast one action.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.ActionList.MoveLast">
            <summary>
            Moves the action pointer to the last
            action if there exist at least one action.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.ActionList.MoveTo(System.Int32)">
            <summary>
            Sets the action pointer to the value of the
            index specified if that is valid.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.ActionList.Reset">
            <summary>
            Resets the action pointer.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.ActionList.Add(Microsoft.VisualStudio.TestTools.UITest.Common.UITestAction)">
            <summary>
            Add the given action to the actions collection.
            </summary>
            <param name="action"></param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.ActionList.Insert(System.Int32,Microsoft.VisualStudio.TestTools.UITest.Common.UITestAction)">
            <summary>
            Insert the given action to the actions collection.
            </summary>
            <param name="action"></param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.ActionList.IsCurrentStateValid">
            <summary>
            Checks if the current index points to a valid
            value in the actionlist.
            </summary>
            <returns>true if current index points to a valid action
            and false otherwise</returns>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.ActionList.Actions">
            <summary>
            Gets the list of actions.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.ActionList.Count">
            <summary>
            Gets the number of actions in this list.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.ActionList.Current">
            <summary>
            Gets the current action from the list.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITest.Common.ActionListSerializer">
            <summary>
            Serializes and deserializes the UITestCase class.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.ActionListSerializer.Deserialize(System.IO.Stream)">
            <summary>
            Deserializes UITestCase class from given stream.
            </summary>
            <param name="reader">Stream used for deserialization.</param>
            <returns>Instance of UItestCase.</returns>
            <exception cref="T:Microsoft.VisualStudio.TestTools.UITest.Extension.UITestException">The xml format exception.</exception>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.ActionListSerializer.Serialize(System.IO.Stream,Microsoft.VisualStudio.TestTools.UITest.Common.UITest)">
            <summary>
            Serialize the given UITestCase into a stream.
            </summary>
            <param name="stream">The stream into which UITestCase will be serialized.</param>
            <param name="testcase">The UITestCase that is to be serialized.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.ActionListSerializer.FixVerifyConfigurationAction(Microsoft.VisualStudio.TestTools.UITest.Common.UITest)">
            <summary>
            Fix the VerifyConfigurationAction action. 
            </summary>
            <param name="testcase">UITest case in which actions need to be fixed.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.ActionListSerializer.UpdateConfigurationForAction(System.Collections.Generic.List{Microsoft.VisualStudio.TestTools.UITest.Common.UITestAction},Microsoft.VisualStudio.TestTools.UITest.Common.UITestEnvironment)">
            <summary>
            For each action in the action list if it is a verifyaction update the 
            configuration property with the configuration in the UITest.
            </summary>
            <param name="actionList"></param>
            <param name="configuration"></param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.ActionListSerializer.FixUIElementNameInUITest(Microsoft.VisualStudio.TestTools.UITest.Common.UITest)">
            <summary>
            Fixes the UIElementName property of each UITestAction in given testcase.
            </summary>
            <param name="testcase">testcase whose action's UIElementName property is to be fixed.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.ActionListSerializer.FixActionId(Microsoft.VisualStudio.TestTools.UITest.Common.UITest)">
            <summary>
            Ensures that the Ids of all the actions in the UITest is unique and sequential
            </summary>
            <param name="testcase">The UITest to be fixed</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.ActionListSerializer.UpdateId(System.Collections.Generic.ICollection{Microsoft.VisualStudio.TestTools.UITest.Common.UITestAction},System.Int32,Microsoft.VisualStudio.TestTools.UITest.Extension.ValueMap)">
            <summary>
            Given an action collection and a counter, this method marks the Id of the actions
            in the collection sequentially starting from that counter.
            </summary>
            <param name="actions">List of actions whose Id is to be updated.</param>
            <param name="counter">starting number of the Id.</param>
            <param name="valueMap">Value map storing parameter values used in the test case</param>
            <returns>The max id assigned by the routine.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.ActionListSerializer.CreateOverrides">
            <summary>
            Create overrides required for serialization/deserialization.
            </summary>
            <returns>XML override for action classes.</returns>
            <remarks>
            UITestCase contains list of UITestAction. UITestAction is the abstract
            class. Serializer/deserializer has to know the excat type of object to be
            serialized/deserialized. The override gives the different UITestAction
            type to serializer/deserializer.
            </remarks>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.ActionListSerializer.GetSerializer(System.Boolean)">
            <summary>
            Returns the appropriate serializer based on whether the UITest has namespace or not.
            This is for backward compatibility of VS2010 Beta2 file.
            </summary>
            <param name="isUITestWithoutNamespace">True if UITest does not have namespace.</param>
            <returns>The appropriate serializer</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.ActionListSerializer.IsVS2010Beta2Format(System.IO.Stream)">
            <summary>
            Checks if the file is of VS2010 Beta2 format.
            </summary>
            <param name="reader">The file reader.</param>
            <returns>True if the file is of Beta2 format, false otherwise.</returns>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Common.ActionListSerializer.serializer">
            <summary>
            XML Serializer for UITest. Initialize it as static as each instance of
            the constructor creates a new temp assembly for serialization and this
            can lead to memory leak.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Common.ActionListSerializer.serializerWithoutNamespace">
            <summary>
            This is for Dev10 Beta2 backward compatibility.  We can remove this code
            in Dev10 SP1 or Dev11.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Common.ActionListSerializer.lockObject">
            <summary>
            Lock for synchronizing access to serializer instance.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITest.Common.UITestActionFilter">
            <summary>
            The abstract base for implementing UITest action filter.
            An action filter is used to aggregate raw actions to create more robust recording.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UITestActionFilter.ProcessRule(Microsoft.VisualStudio.TestTools.UITest.Common.IUITestActionStack)">
            <summary>
            Processes the rule for this filter. 
            The action stack can be modified by the filter if it matches it's filtering criteria.
            </summary>
            <param name="actionStack">The action stack.</param>
            <returns>True if no more filtering should be done in this cycle. False if the 
            filtering should continue with action filters that follow.</returns>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.UITestActionFilter.Group">
            <summary>
            Gets the name of the group to which this filter belongs to.
            A group can be enabled/disabled using configuration file.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.UITestActionFilter.Category">
            <summary>
            Gets the category of this filter. Each category of filters are grouped together
            and these different groups are ordered as per the priority of that category. 
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.UITestActionFilter.Name">
            <summary>
            Gets the name of this filter.
            This is also used in logs to provide meaningful message.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.UITestActionFilter.FilterType">
            <summary>
            Gets the type of this filter.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.UITestActionFilter.ApplyTimeout">
            <summary>
            Gets whether to apply timeout to this filter or not.
            The filter time out is applied only for the Binary filters to determine if the filter
            should be executed or not. If the time between the last two actions exceeds
            the user configured timeout value then the filter is not executed.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.UITestActionFilter.Enabled">
            <summary>
            Gets whether this filter is enabled or not.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITest.Common.UITestActionFilterType">
            <summary>
            Type of an action filter.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Common.UITestActionFilterType.Unary">
            <summary>
            Single step filter.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Common.UITestActionFilterType.Binary">
            <summary>
            Two/more step filter.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITest.Common.IUITestActionStack">
            <summary>
            This interface is used to access the action list of the recorder from
            aggregator plugins.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.IUITestActionStack.Push(Microsoft.VisualStudio.TestTools.UITest.Common.UITestAction)">
            <summary>
            Pushes the given element onto the top of the  stack.
            </summary>
            <param name="element"></param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.IUITestActionStack.Pop(System.Int32)">
            <summary>
            Removes the nth element from the top of the stack.
            </summary>
            <param name="nth">the action from the top to be returned</param>
            <returns>the popped action</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.IUITestActionStack.Pop">
            <summary>
            Pops the topmost element from the stack.
            </summary>
            <returns>Topmost action on the stack</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.IUITestActionStack.Peek(System.Int32)">
            <summary>
            Returns the nth element from the top of the stack without removing it.
            </summary>
            <param name="nth">the action from the top to be returned</param>
            <returns>nth action from the top of the stack</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.IUITestActionStack.Peek">
            <summary>
            Returns topmost element from the stack without removing it.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.IUITestActionStack.Count">
            <summary>
            The number of actions currently in this stack.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.IUITestActionStack.SyncRoot">
            <summary>
            The object used for locking/synchronizing actions on stack.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITest.Common.RecordedEventArgs">
            <summary>
            Event argument passed with IRecorded.Recorded event.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.RecordedEventArgs.#ctor(Microsoft.VisualStudio.TestTools.UITest.Common.UITestAction,Microsoft.VisualStudio.TestTools.UITest.Common.RecordedEventType,System.Boolean)">
            <summary>
            Creates an instance of a RecordedEventArgs class.
            </summary>
            <param name="action">The action that got recorded.</param>
            <param name="eventType">Type of the action (New/Modified/Deleted).</param>
            <param name="isExplicit">Indicates if this action has been explicitly added/modified/removed by user using the 
            action editor.
            </param>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.RecordedEventArgs.Action">
            <summary>
            The action that has got recorded.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.RecordedEventArgs.UITestEventType">
            <summary>
            Type of the recorded event.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.RecordedEventArgs.IsExplicit">
            <summary>
            Indicates if this action has been explicitly added/modified/removed by user using the 
            action editor. This will be false for actions that are added/modified/removed while aggregation
            or any such operations that are not explicitly done by the user.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.RecordedEventArgs.ModifiedProperty">
            <summary>
            The name of the property that modified when a modified event is fired as a result of change in
            the property of the action. 
            </summary>
            <remarks>
            This is set only when a property of action is modified and not in all cases when a modified event is fired.
            </remarks>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITest.Common.RecordedEventType">
            <summary>
            The type of the RecordedEvent.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Common.RecordedEventType.NewAction">
            <summary>
            New Action was recorded.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Common.RecordedEventType.ModifiedAction">
            <summary>
            Existing action was modified.
            This can due to user explicitely modifying an action or due to filtering.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Common.RecordedEventType.DeletedAction">
            <summary>
            Existing action was deleted.
            This can due to user explicitely deleting an action or due to filtering.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITest.Common.RecorderOptions">
            <summary>
            Options to be used by the recorder.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Common.RecorderOptions.HoverKeyModifierConstant">
            <summary>
            Constant for HoverKeyModifier in the NameValueCollection.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Common.RecorderOptions.HoverKeyConstant">
            <summary>
            Constant for HoverKey in the NameValueCollection.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Common.RecorderOptions.SetValueAggregatorsConstant">
            <summary>
            Constant for SetValueAggregators in the NameValueCollection.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Common.RecorderOptions.RecordImplicitHoverAggregatorConstant">
            <summary>
            Constant for RecordImplicitHoverAggregator in the NameValueCollection.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Common.RecorderOptions.IEDialogAggregatorsConstant">
            <summary>
            Constant for IEDialogAggregatorsConstant in the NameValueCollection.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Common.RecorderOptions.RecordImplicitHoverConfigParameter">
            <summary>
            Constant for RecordImplicitHoverAggregator in the NameValueCollection.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Common.RecorderOptions.DeleteImplicitHoverAggregatorConstant">
            <summary>
            Constant for DeleteImplicitHoverAggregator in the NameValueCollection.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Common.RecorderOptions.AbsorbWindowResizeAndSetFocusAggregatorsConstant">
            <summary>
            Constant for AbsorbWindowResizeAndSetFocusAggregators in the NameValueCollection.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Common.RecorderOptions.AggregatorTimeoutConstant">
            <summary>
            Constant for AggregatorTimeout in the NameValueCollection.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Common.RecorderOptions.RemoteTestingAggregatorTimeoutConstant">
            <summary>
            Constant for RemoteTestingAggregatorTimeout in the NameValueCollection.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Common.RecorderOptions.GlobalHotKeysConstant">
            <summary>
            Constant for GlobalHotKey in the NameValueCollection.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Common.RecorderOptions.ExcludeProcessConstant">
            <summary>
            Constant for ExcludeProcess in NameValueCollectoin.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Common.RecorderOptions.IncludeProcessConstant">
            <summary>
            Constant for IncludeProcess in NameValueCollectoin.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Common.RecorderOptions.EncryptionKeyLocation">
            <summary>
            Constant for EncryptionKeyLocation in NameValueCollection
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Common.RecorderOptions.EncryptionKeyLength">
            <summary>
            Constant for EncrytptionKeyLength in NameValueCollection;
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Common.RecorderOptions.RecordThinkTimeConstant">
            <summary>
            Record think-time.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Common.RecorderOptions.ThinkTimeThresholdConstant">
            <summary>
            Think time threshold value in milliseconds. Think time is not recorded if the time-gap 
            between actions are less than this.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Common.RecorderOptions.ThinkTimeUpperCutoffConstant">
            <summary>
            Think time upper cut-off in milliseconds. This represents the maximum think time value.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Common.RecorderOptions.DelayBetweenActionConstant">
            <summary>
            Default delay between every action.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Common.RecorderOptions.RecordOnDesktopProcessConstant">
            <summary>
            Constant for RecordOnDesktopProcess flag.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Common.RecorderOptions.ShowCurrentlyRecordingConstant">
            <summary>
            Constant for Show "Currently Recording" caption or not.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Common.RecorderOptions.IsRemoteTestingEnabledString">
            <summary>
            Constant for Remote Recording mode.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Common.RecorderOptions.IsImageActionLogEnabledString">
            <summary>
            Constant for Image Action Log mode.
            </summary>        
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Common.RecorderOptions.AggregatorTimeOut">
            <summary>
            10 seconds.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Common.RecorderOptions.RemoteTestingAggregatorTimeOut">
            <summary>
            2 seconds.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.RecorderOptions.#ctor">
            <summary>
            Creates an instance of RecorderOptions.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.RecorderOptions.#ctor(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Creates an instance of RecorderOptions using the Configuration passed.
            </summary>
            <param name="appSettings">The NameValueCollection object that defines the options.</param>
            <remarks>
            The NameValueCollection can come from ConfigurationManager or UI.
            </remarks>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.RecorderOptions.ValidateTimeSettings">
            <summary>
            Ensure that the various time settings read in from the configuration is correct.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.RecorderOptions.SetTimeSettingsToDefault">
            <summary>
            Reset various configuration time settings to their default values
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.RecorderOptions.UpdateGlobalHotKeys(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Update the global hot keys settings.
            </summary>
            <param name="appSettings">The name value collection.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.RecorderOptions.UpdateProcessList(System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.Collections.Generic.ICollection{System.String},System.Collections.Generic.ICollection{System.Int32})">
            <summary>
            Update the process inclusion/exclusion lists from the config file.
            </summary>
            <param name="appSettings">The app settings section from the application 
            configuration file.</param>
            <param name="keyName">The key to look into the appsettings.</param>
            <param name="processNameList">The list of process names to be filled.</param>
            <param name="pidList">The list of process Ids to be filled.</param>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Common.RecorderOptions.showCurrentlyRecording">
            <summary>
            Whether currently recording caption should be shown
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Common.RecorderOptions.isRemoteTestingEnabled">
            <summary>
            True if it is a connected device scenario.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Common.RecorderOptions.recordThinkTime">
            <summary>
            True if we're recording with think time
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Common.RecorderOptions.hoverKey">
            <summary>
            The key combination to record mouse hover
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Common.RecorderOptions.excludeProcessIdList">
            <summary>
            The list of process to exclude.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Common.RecorderOptions.excludeProcessNameList">
            <summary>
            The list of process names to exclude.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Common.RecorderOptions.includeProcessIdList">
            <summary>
            The list of process to include.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Common.RecorderOptions.includeProcessNameList">
            <summary>
            The list of process names to include.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Common.RecorderOptions.ignoreKeys">
            <summary>
            The key combinations to ignore.
            </summary>
            <remarks>These keys are used by the Recorder's client to indicate global hot keys 
            that the recorder shouldn't record. Non-global keys need not be placed in this list
            as the current process is anyway placed in the ignore process list.</remarks>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Common.RecorderOptions.globalHotkeys">
            <summary>
            The key combinations which result in a global hotkey
            </summary>
            <remarks>These keys are used by the Recorder's client to indicate global hot keys 
            like WIN+E, WIN+R etc</remarks>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Common.RecorderOptions.aggregatorGroupSetting">
            <summary>
            The aggregator settings.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Common.RecorderOptions.aggregatorTimeout">
            <summary>
            The timeout in ticks for aggregator.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Common.RecorderOptions.remoteTestingAggregatorTimeout">
            <summary>
            The timeout in ticks for aggregator for remote testing scenarios.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Common.RecorderOptions.thinktimeThreshold">
            <summary>
            Think time threshold value in milliseconds. Think time is not recorded if the time-gap 
            between actions are less than this.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Common.RecorderOptions.thinktimeUpperCutoff">
            <summary>
            Think time upper cut-off in milliseconds. This represents the maximum think time value.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Common.RecorderOptions.delayBetweenActions">
            <summary>
            Default delay between each action.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Common.RecorderOptions.imeLanguageList">
            <summary>
            The list of languages for which IME is installed and currently in use.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.RecorderOptions.RecordingMode">
            <summary>
            Recording Mode.
            </summary>
            <seealso cref="T:Microsoft.VisualStudio.TestTools.UITest.Common.RecordingMode"/>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.RecorderOptions.DebugModeOn">
            <summary>
            Is recorder debugging mode on or off?
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.RecorderOptions.ExcludeProcess">
            <summary>
            List of process id's on which actions should not be recorded.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.RecorderOptions.ExcludeProcessName">
            <summary>
            List of process names on which actions should not be recorded.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.RecorderOptions.IncludeProcess">
            <summary>
            List of process id's on which actions should be recorded.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.RecorderOptions.IncludeProcessName">
            <summary>
            List of process names on which actions should be recorded.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.RecorderOptions.RecordOnDesktopProcess">
            <summary>
            Gets or sets value indicating whether to record or desktop process or not.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.RecorderOptions.IgnoreKeys">
            <summary>
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.RecorderOptions.GlobalHotkeys">
            <summary>
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.RecorderOptions.AggregatorGroupSetting">
            <summary>
            The aggregator setting applied over default setting.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.RecorderOptions.HoverKey">
            <summary>
            The hot key combination to be used for recording mouse Hover
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.RecorderOptions.AggregatorTimeout">
            <summary>
            The timeout for aggregator to merge actions in millisecond.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.RecorderOptions.RemoteTestingAggregatorTimeout">
            <summary>
            The timeout for aggregator to merge actions in millisecond in remote testing scenarios.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.RecorderOptions.RecordThinkTime">
            <summary>
            Record think-time.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.RecorderOptions.RecordImplicitHover">
            <summary>
            Gets or sets the option related to recording of implicit mouse hovers.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.RecorderOptions.ThinkTimeThreshold">
            <summary>
            Think time threshold value in milliseconds. Think time is not recorded if the time-gap 
            between actions are less than this.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.RecorderOptions.ThinkTimeUpperCutoff">
            <summary>
            Think time upper cut-off in milliseconds. This represents the maximum think time value.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.RecorderOptions.ShowCurrentlyRecording">
            <summary>
            Show "Currently Recording" caption or not.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.RecorderOptions.DelayBetweenActions">
            <summary>
            Gets or sets the delay between actions in milliseconds.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.RecorderOptions.ImeLanguageList">
            <summary>
            The list of languages for which IME is installed and currently in use.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.RecorderOptions.IsRemoteTestingEnabled">
            <summary>
            Gets or sets a value indicating if recording is done on remote device.
            </summary>
            TODO: Do we want Remote recording to run on Dev10 scenarios? Is yes then for backward compatibiltiy we should add
            another flag indicating mode of recording (Intent/Object). This property is used to set mode of recorder to intent
            for simulator scenarios.
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.RecorderOptions.ToastNotificationAppId">
            <summary>
            App ID to show toast notification of recorder start.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.RecorderOptions.IsImageActionLogEnabled">
            <summary>
            Gets or Sets a value indicating if Image Action Log is enabled or not.
            </summary>        
        </member>
        <member name="E:Microsoft.VisualStudio.TestTools.UITest.Common.RecorderOptions.PropertyChanged">
            <summary>
            Event fired when the recorder option changes
            </summary>
            <remarks>Used currently for Show Currently recording. Can be used
            for other recorder options also
            </remarks>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITest.Common.RecordingMode">
            <summary>
            The recording mode.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Common.RecordingMode.Analog">
            <summary>
            Low-level screen coordinate based recording.
            </summary>
            <remarks>
            The click on a X box on a dialog is recorded as click on location 100,150.
            </remarks>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Common.RecordingMode.Object">
            <summary>
            Object sensitive recording which captures objects the user
            interacted with and stores user actions relative to it.
            </summary>
            <remarks>
            The click on a X box on a dialog is recorded as click on dialogs close button.
            </remarks>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Common.RecordingMode.Intent">
            <summary>
            The highest level intelligent recording where the users intentions
            are recorded and not the actual actions.
            </summary>
            <remarks>
            The click on a X box on a dialog is recorded as dialog close action.
            How the dialog is closed is not recorded and hence this action can
            be played back using any option like actually clickin on the X
            button or sending 'Esc' key.
            </remarks>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITest.Common.KeyCombination">
            <summary>
            Stores the key combinations. This is used store hotkeys, hoverkeys, global keys
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.KeyCombination.#ctor(Microsoft.VisualStudio.TestTools.UITest.Input.ModifierKeys,Microsoft.VisualStudio.TestTools.UITest.Input.Keys)">
            <summary>
            Creates an instance of HotKeyCombination
            </summary>
            <param name="modifier">Modifier key for the hotkey</param>
            <param name="key">The hot key</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.KeyCombination.#ctor(System.String,System.String)">
            <summary>
            Takes a modifier and key combination in string form and
            creates a keycombination object.
            </summary>
            <param name="modifierValue">modifier string</param>
            <param name="keyValue">the key string</param>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.KeyCombination.Modifier">
            <summary>
            Modifier used with the hotkey
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.KeyCombination.Key">
            <summary>
             The hot key
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITest.Common.UITestActionFilterCategory">
            <summary>
            This enum defines the constants for the aggregator category.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Common.UITestActionFilterCategory.Critical">
            <summary>
            ActionFilters in this category will be executed first. These cannot be bypassed.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Common.UITestActionFilterCategory.PostCritical">
            <summary>
            ActionFilters in this category will be executed after the Critical ActionFilters.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Common.UITestActionFilterCategory.PreGeneral">
            <summary>
            ActionFilters in this category will be executed before the General ActionFilters.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Common.UITestActionFilterCategory.General">
            <summary>
            ActionFilters in this category will be executed after the PreGeneral/PostCritical
            aggregators in case they exist else they execute after Critical category.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Common.UITestActionFilterCategory.PostGeneral">
            <summary>
            ActionFilters in this category will be executed after the General ActionFilters.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Common.UITestActionFilterCategory.PreSimpleToCompoundActionConversion">
            <summary>
            ActionFilters in this category will be executed before the
            SimpleToCompundActionConversion ActionFilters.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Common.UITestActionFilterCategory.SimpleToCompoundActionConversion">
            <summary>
            ActionFilters in this category will be executed after the PostGeneral/PreSimpleToCompundActionConversion
            aggregators in case they exist else they execute after General category.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Common.UITestActionFilterCategory.PostSimpleToCompoundActionConversion">
            <summary>
            ActionFilters in this category will be executed after the
            SimpleToCompundActionConversion ActionFilters.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Common.UITestActionFilterCategory.PreRedundantActionDeletion">
            <summary>
            ActionFilters in this category will be executed before the 
            RedundantActionDeletion ActionFilters.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Common.UITestActionFilterCategory.RedundantActionDeletion">
            <summary>
            ActionFilters in this category will be executed after the PostSimpleToCompundActionConversion/PreRedundantActionDeletion
            aggregators in case they exist else they execute after the SimpleToCompundActionConversion category.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Common.UITestActionFilterCategory.PostRedundantActionDeletion">
            <summary>
            ActionFilters in this category will be executed after the 
            RedundantActionDeletion ActionFilters.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITest.Common.IActionEditor">
            <summary>
            The interface that is used to edit actions on the fly.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.IActionEditor.Insert(System.Int64,Microsoft.VisualStudio.TestTools.UITest.Common.UITestAction)">
            <summary>
            Insert an Action after the given id.
            </summary>
            <param name="id">Id of the action after which this action is to be added.</param>
            <param name="action">The action to be added.</param>
            <returns>The id of the inserted action</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.IActionEditor.Append(Microsoft.VisualStudio.TestTools.UITest.Common.UITestAction)">
            <summary>
            Appends an action to the end of the current action queue.
            </summary>
            <param name="action">The action to be added.</param>
            <returns>The id of the inserted action</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.IActionEditor.Delete(System.Int64)">
            <summary>
            Deletes an action.
            </summary>
            <param name="id">The id of the action to be deleted.</param>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITest.Common.IRecorder">
            <summary>
            The interface that all Recorders implement.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.IRecorder.AddElement(Microsoft.VisualStudio.TestTools.UITest.Extension.UITechnologyElement)">
            <summary>
            Add a UITechnologyElement to the list of elements recorded.
            </summary>
            <param name="uiElement"></param>
            <returns>The newly added or existing UITechnologyElement.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.IRecorder.Start">
            <summary>
            Start recording.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.IRecorder.Stop">
            <summary>
            Stop recording and create the list of UIElements and Actions recorded.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.IRecorder.Flush">
            <summary>
            Flushes the internal state so that all the actions and objects are removed.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.IRecorder.OnRecorderError(System.Exception)">
            <summary>
            Raise an error that happened in recorder threads.
            </summary>
            <param name="exception">The exception that caused the error.</param>
        </member>
        <member name="E:Microsoft.VisualStudio.TestTools.UITest.Common.IRecorder.Recorded">
            <summary>
            Event fired when a action is recorded.
            </summary>
        </member>
        <member name="E:Microsoft.VisualStudio.TestTools.UITest.Common.IRecorder.RecorderError">
            <summary>
            Event fired when an error occurs during recording.
            </summary>
        </member>
        <member name="E:Microsoft.VisualStudio.TestTools.UITest.Common.IRecorder.ActionPropertyChange">
            <summary>
            Event fired when any of the property of any action in stack is changed.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.IRecorder.Name">
            <summary>
            Name of the recorder.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.IRecorder.Description">
            <summary>
            Description of the recorder.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.IRecorder.Options">
            <summary>
            RecorderOptions
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.IRecorder.UIElements">
            <summary>
            List of UIElements that were recorded.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.IRecorder.Actions">
            <summary>
            List of user actions.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.IRecorder.ActionEditor">
            <summary>
            Handle to the action editor. This can be used to edit actions on the fly.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.IRecorder.RecorderState">
            <summary>
            The current state of the recorder.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.IRecorder.AllowMultipleSessions">
            <summary>
            True to enable multiple recording sessions.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITest.Common.RecorderState">
            <summary>
            The state of the recorder.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Common.RecorderState.None">
            <summary>
            The recorder is in an underministic state. This is 
            the initial state of the recorder.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Common.RecorderState.Initializing">
            <summary>
            The recorder is being initialized.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Common.RecorderState.Running">
            <summary>
            The recorder is running.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Common.RecorderState.Paused">
            <summary>
            The recorder is paused.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Common.RecorderState.Stopped">
            <summary>
            The recorder is stopped.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UITestLogWrapper.LoggerGenerateEnsureVisibleSnapshotInfo">
            <summary>
            Takes snapshot post the ensure visible for the control.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UITestLogWrapper.Initialize(System.String)">
            <summary>
            Initialize logging by setting the flags and storing default test method name.
            </summary>
            <param name="testName"> Default test method name of the form "Test i"</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UITestLogWrapper.SetTestContextPath(System.String)">
            <summary>
            set path where the results for a test method are to go.
            </summary>
            <param name="directoryPath"> directory path </param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UITestLogWrapper.CreateGroup(Microsoft.VisualStudio.TestTools.UITest.Common.UITestLogGroupType,System.String,System.String)">
            <summary>
            create a group in the log. Each action creates a separate group with messages inside the group
            </summary>
            <param name="groupType"> the type of the group</param>
            <param name="groupHeader"> group title </param>
            <param name="message"> group contents </param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UITestLogWrapper.BeginGroup(Microsoft.VisualStudio.TestTools.UITest.Common.UITestLogGroupType,System.String)">
            <summary>
            begins a group based on its type
            </summary>
            <param name="groupType"> Groups type </param>
            <param name="BeginGroupHeader">Groups Header text </param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UITestLogWrapper.EndGroup">
            <summary>
            Close a group sealing its contents.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UITestLogWrapper.SetTimerInstance(System.Boolean)">
            <summary>
             Collect the time before an action takes place.
            </summary>
            <param name="inActionGroup">Set whether we are inside an action group or not.</param>
            Currently inActionGroup is false only for StartDrag StopDrag scenarios
            Because the group starts only if StopDragging happens.
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UITestLogWrapper.ClearBeforeFindAction(System.String)">
            <summary>
            
            </summary>
            <param name="groupHeader"></param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UITestLogWrapper.GenerateStandardSummary(System.String,System.String,System.Boolean)">
            <summary>
            creates the final log file
            </summary>
            <param name="fileName">the name of the log </param>
            <param name="title">Logs Title header</param>
            <param name="testExceptionRaised">Flag to indicate if exception is uncaught in the CUIT test</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UITestLogWrapper.RegisterWarning(System.String,System.String)">
            <summary>
            Register a warning message in the log
            </summary>
            <param name="exception">Exception that caused a warning </param>
            <param name="message">Additional information that needs to be displayed</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UITestLogWrapper.RegisterWarning(System.String,System.String,Microsoft.VisualStudio.TestTools.UITest.Common.UITestLogWarningMessageType)">
            <summary>
            Register a warning message of a certain type in the log
            </summary>
            <param name="exception"> Exception that resulted in the warning</param>
            <param name="message"> Additional information that needs to be displayed </param>
            <param name="warnType"> Type of the warning </param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UITestLogWrapper.RegisterWarning(System.String,System.String,Microsoft.VisualStudio.TestTools.UITest.Common.UITestLogWarningMessageType,Microsoft.VisualStudio.TestTools.UITest.Input.Rectangle)">
            <summary>
            Overloaded method to support screenshot for Warning messages.
            </summary>
            <param name="messageType"></param>
            <param name="message"></param>
            <param name="boundingRectangle"></param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UITestLogWrapper.RegisterError(System.Exception,System.String,Microsoft.VisualStudio.TestTools.UITest.Input.Rectangle)">
            <summary>
            Register an error message in the log
            </summary>
            <param name="exception"> Exception causing the error </param>
            <param name="message">Additional information as part of the error </param>
            <param name="controlBounds">Bounding Rectangle of a control/its container which caused the error </param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UITestLogWrapper.RegisterInformation(Microsoft.VisualStudio.TestTools.UITest.Common.UITestLogInfoMessageType,System.String)">
            <summary>
            store an information message of a certain type
            </summary>
            <param name="messageType">type of the message </param>
            <param name="message"> message to be stored </param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UITestLogWrapper.RegisterInformation(Microsoft.VisualStudio.TestTools.UITest.Common.UITestLogInfoMessageType,System.String,Microsoft.VisualStudio.TestTools.UITest.Input.Rectangle,System.Boolean)">
            <summary>
            Overloaded method to support screenshot for Info messages.
            </summary>
            <param name="messageType"></param>
            <param name="message"></param>
            <param name="boundingRectangle"></param>
            <param name="takeSnapshotPostAction">flag to indicate whether to take the snapshot before or after action</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UITestLogWrapper.RecordAndThrowException(System.Exception)">
            <summary>
            Record an exception and throw it.
            [The exception recorder APIs are required in this class to eliminate circular dependency betwen Common and AL]
            </summary>
            <param name="exception"></param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UITestLogWrapper.RecordException(System.String,System.Exception,Microsoft.VisualStudio.TestTools.UITest.Input.Rectangle)">
            <summary>
            Record an exception with additional information and bounding rectangle of a control giving that exception
            </summary>
            <param name="message">additional information </param>
            <param name="exception">exception  </param>
            <param name="boundingRectangle"> Bounds of a control causing the exception</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UITestLogWrapper.AggregateActionTime(Microsoft.VisualStudio.TestTools.UITest.Common.UITestLogInfoMessageType,System.Int32,System.String)">
            <summary>
            Stores the time duration of an action
            </summary>
            <param name="type"> the type of action whose duration is to found out </param>
            <param name="timeInMilliseconds"> the time it took in the current run </param>
            <param name="controlInformation"></param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UITestLogWrapper.FlushMessages">
            <summary>
            flush any message before creating a new group
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UITestLogWrapper.CleanUpTempFiles">
            <summary>
            Remove any extra files that could have been created as a result of log generation (XML)
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UITestLogWrapper.IsRedundantWarningMessage(Microsoft.VisualStudio.TestTools.UITest.Common.UITestLogWarningMessageType,Microsoft.VisualStudio.TestTools.UITest.Common.UITestLogWrapper.UITestLogWarningMessage@)">
            <summary>
            Warning messages of the type 'ContinueOnError' are logged only once.
            </summary>
            <param name="messageType"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UITestLogWrapper.IsRedundantInfoMessage(Microsoft.VisualStudio.TestTools.UITest.Common.UITestLogInfoMessageType)">
            <summary>
            Info messages of the same type are logged only once, for example: wait for ready
            </summary>
            <param name="messageType"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UITestLogWrapper.DisplayErrors">
            <summary>
            Display all registered errors
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UITestLogWrapper.DisplayWarnings">
            <summary>
            Display all registered warnings
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UITestLogWrapper.DisplayInfos">
            <summary>
            Display all registered infos
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UITestLogWrapper.GetSnapshotInfo">
            <summary>
            Gets the highlighter screenshot info (if exists) and removes the corresponding Info message of type Snapshot.
            The idea is to reassociate this highlighter information with the Search properties Info message during 
            final flushing of the Info messages.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UITestLogWrapper.UpdatePostActionScreenInfo">
            <summary>
            Updates the messages with active screen information for snapshot
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UITestLogWrapper.LogMessages(System.String)">
            <summary>
            Logs all messages
            </summary>
            <param name="message">The group message. This is typically the control info message.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UITestLogWrapper.Reset">
            <summary>
            Reset for next action to be logged.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UITestLogWrapper.ClearMessages">
            <summary>
            
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UITestLogWrapper.AddMessageLines(System.String,System.String[])">
            <summary>
            Adds entries to a new line using the '<br/>' tag of html
            </summary>
            <param name="message"></param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UITestLogWrapper.IsLogDisabled">
            <summary>
            Sets the log and snapshot level based on the TraceLevel.
            </summary>
            <returns></returns>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Common.UITestLogWrapper.s_accordionDepth">
            <summary>
            Gives the number of open parent accordions.
            all messages are to have a default accordion depth of 2.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.UITestLogWrapper.IsActionLogDeactivated">
            <summary>
            flag to indicate whether log is active or not
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.UITestLogWrapper.IsGenerateLogDeactivated">
            <summary>
            Flag to indicate whether to generate a log file or not
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.UITestLogWrapper.IsSnapShotInfoEnabled">
            <summary>
            Flag to indicate whether screenshot is enabled for all actions.
            If the flag is not set, value is set according to EqtTrace.TraceLevel
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.UITestLogWrapper.IsCodedUITestSession">
            <summary>
            flag to indicate a CodedUITest session
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.UITestLogWrapper.LogDirectoryPath">
            <summary>
            The directory for the html attachment logs.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.UITestLogWrapper.IsContinueOnError">
            <summary>
            flag to indicate whether continue on error is set
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.UITestLogWrapper.IsTestNameLogged">
            <summary>
            flag to know if test method name has been collected. If not "Test-x" is used. 
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.UITestLogWrapper.IsTestErrorLogged">
            <summary>
            flag to know if a test method has already logged in any errors.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.UITestLogWrapper.IsInActionGroup">
            <summary>
            Flag indicating if the context is within an action group.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.UITestLogWrapper.TestName">
            <summary>
            get the test method name to display
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.UITestLogWrapper.IsInActionLogFormatterContext">
            <summary>
            Flag to indicate whether the actionlog construction is currently in progress.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.UITestLogWrapper.IsControlUnavailable">
            <summary>
            Flag to indicate whether search was already attempted for screenshot creation and failed.
            This is used during FriendlyName creation to switch to friendly name fetching from search properties.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.UITestLogWrapper.ElementForSnapshot">
            <summary>
            Element for which snapshot is to be taken post EnsureVisible.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.UITestLogWrapper.BoundingRectangleForElement">
            <summary>
            Bounding rectangle cached for ElementForSnapshot
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.UITestLogWrapper.ContainerBounds">
            <summary>
            Used for caching the last found container's bounds.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.UITestLogWrapper.SkipIntermediateSearchEnabled">
            <summary>
            Flag to indicate that skip intermediate search has started.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.TestTools.UITest.Common.UITestLogWrapper.StandardErrorMessage">
            <summary>
            Error string that is displayed at the beginning of an exception stack.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITest.Common.UITestLogWrapper.DurationInformation">
            <summary>
            Stores the time duration of an action
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Common.UITestLogWrapper.DurationInformation.type">
            <summary>
            the type of action 
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Common.UITestLogWrapper.DurationInformation.timeTaken">
            <summary>
            total time taken
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.TestTools.UITest.Common.UITestLogWrapper.DurationInformation.controlInformation">
            <summary>
            
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITest.Common.UITestLogWrapper.AbstractUITestLogMessage">
            <summary>
            Abstract class for different log message types
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITest.Common.UITestLogWrapper.UITestLogInfoMessage">
            <summary>
            Stores the Info Log message.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UITestLogWrapper.UITestLogInfoMessage.#ctor(System.String,Microsoft.VisualStudio.TestTools.UITest.Common.UITestLogInfoMessageType,Microsoft.VisualStudio.TestTools.UITest.Input.Rectangle,System.Boolean)">
            <summary>
            
            </summary>
            <param name="message"></param>
            <param name="infoType"></param>
            <param name="boundingRectangle"></param>
            <param name="takeSnapshotPostAction">flag to indicate whether to take the snapshot before or after action</param>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITest.Common.UITestLogWrapper.UITestLogWarningMessage">
            <summary>
            Stores the Warning Log message.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITest.Common.UITestLogWrapper.UITestLogErrorMessage">
            <summary>
            Stores the Error Log message.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.TestTools.UITest.Common.UITestLogWrapper.UITestLogErrorMessage.ReplaceError(System.Exception,System.String,Microsoft.VisualStudio.TestTools.UITest.Input.Rectangle)">
            <summary>
            Replace an already existing error message. Only one error message is recorded per action
            </summary>
            <param name="exception">outer level exception</param>
            <param name="message"> additional information</param>
            <param name="boundingRectangle">rectangle for screenshot highlighter</param>
        </member>
        <member name="T:Microsoft.VisualStudio.TestTools.UITest.Common.UITestLogGroupType">
            <summary>
            Type of Group Header
            </summary>
        </member>
    </members>
</doc>
